
Solution.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000130  00800100  00001f2c  00001fc0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001f2c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000d3  00800230  00800230  000020f0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000020f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002120  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000688  00000000  00000000  00002160  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000088b3  00000000  00000000  000027e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001997  00000000  00000000  0000b09b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000035bf  00000000  00000000  0000ca32  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000015b0  00000000  00000000  0000fff4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001f5c  00000000  00000000  000115a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00006385  00000000  00000000  00013500  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000578  00000000  00000000  00019885  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 5e 0a 	jmp	0x14bc	; 0x14bc <__vector_5>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 8a 07 	jmp	0xf14	; 0xf14 <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 a7 09 	jmp	0x134e	; 0x134e <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ec e2       	ldi	r30, 0x2C	; 44
      7c:	ff e1       	ldi	r31, 0x1F	; 31
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a0 33       	cpi	r26, 0x30	; 48
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	23 e0       	ldi	r18, 0x03	; 3
      8c:	a0 e3       	ldi	r26, 0x30	; 48
      8e:	b2 e0       	ldi	r27, 0x02	; 2
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a3 30       	cpi	r26, 0x03	; 3
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 2d 06 	call	0xc5a	; 0xc5a <main>
      9e:	0c 94 94 0f 	jmp	0x1f28	; 0x1f28 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <adcInitialize>:
      a6:	97 b1       	in	r25, 0x07	; 7
      a8:	97 60       	ori	r25, 0x07	; 7
      aa:	97 b9       	out	0x07, r25	; 7
      ac:	3b 98       	cbi	0x07, 3	; 7
      ae:	98 b1       	in	r25, 0x08	; 8
      b0:	9a 60       	ori	r25, 0x0A	; 10
      b2:	98 b9       	out	0x08, r25	; 8
      b4:	42 98       	cbi	0x08, 2	; 8
      b6:	81 11       	cpse	r24, r1
      b8:	40 9a       	sbi	0x08, 0	; 8
      ba:	08 95       	ret

000000bc <adcFetchData>:
      bc:	33 99       	sbic	0x06, 3	; 6
      be:	fe cf       	rjmp	.-4      	; 0xbc <adcFetchData>
      c0:	28 e1       	ldi	r18, 0x18	; 24
      c2:	80 e0       	ldi	r24, 0x00	; 0
      c4:	90 e0       	ldi	r25, 0x00	; 0
      c6:	dc 01       	movw	r26, r24
      c8:	42 9a       	sbi	0x08, 2	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      ca:	35 e2       	ldi	r19, 0x25	; 37
      cc:	3a 95       	dec	r19
      ce:	f1 f7       	brne	.-4      	; 0xcc <adcFetchData+0x10>
      d0:	42 98       	cbi	0x08, 2	; 8
      d2:	88 0f       	add	r24, r24
      d4:	99 1f       	adc	r25, r25
      d6:	aa 1f       	adc	r26, r26
      d8:	bb 1f       	adc	r27, r27
      da:	33 99       	sbic	0x06, 3	; 6
      dc:	81 60       	ori	r24, 0x01	; 1
      de:	35 e2       	ldi	r19, 0x25	; 37
      e0:	3a 95       	dec	r19
      e2:	f1 f7       	brne	.-4      	; 0xe0 <adcFetchData+0x24>
      e4:	21 50       	subi	r18, 0x01	; 1
      e6:	81 f7       	brne	.-32     	; 0xc8 <adcFetchData+0xc>
      e8:	42 9a       	sbi	0x08, 2	; 8
      ea:	25 e2       	ldi	r18, 0x25	; 37
      ec:	2a 95       	dec	r18
      ee:	f1 f7       	brne	.-4      	; 0xec <adcFetchData+0x30>
      f0:	42 98       	cbi	0x08, 2	; 8
      f2:	35 e2       	ldi	r19, 0x25	; 37
      f4:	3a 95       	dec	r19
      f6:	f1 f7       	brne	.-4      	; 0xf4 <adcFetchData+0x38>
      f8:	a7 fd       	sbrc	r26, 7
      fa:	bf 6f       	ori	r27, 0xFF	; 255
      fc:	8f 3f       	cpi	r24, 0xFF	; 255
      fe:	2f ef       	ldi	r18, 0xFF	; 255
     100:	92 07       	cpc	r25, r18
     102:	a2 07       	cpc	r26, r18
     104:	b2 07       	cpc	r27, r18
     106:	d1 f2       	breq	.-76     	; 0xbc <adcFetchData>
     108:	bc 01       	movw	r22, r24
     10a:	cd 01       	movw	r24, r26
     10c:	08 95       	ret

0000010e <QR>:
     10e:	2f 92       	push	r2
     110:	3f 92       	push	r3
     112:	4f 92       	push	r4
     114:	5f 92       	push	r5
     116:	6f 92       	push	r6
     118:	7f 92       	push	r7
     11a:	8f 92       	push	r8
     11c:	9f 92       	push	r9
     11e:	af 92       	push	r10
     120:	bf 92       	push	r11
     122:	cf 92       	push	r12
     124:	df 92       	push	r13
     126:	ef 92       	push	r14
     128:	ff 92       	push	r15
     12a:	0f 93       	push	r16
     12c:	1f 93       	push	r17
     12e:	cf 93       	push	r28
     130:	df 93       	push	r29
     132:	cd b7       	in	r28, 0x3d	; 61
     134:	de b7       	in	r29, 0x3e	; 62
     136:	a4 97       	sbiw	r28, 0x24	; 36
     138:	0f b6       	in	r0, 0x3f	; 63
     13a:	f8 94       	cli
     13c:	de bf       	out	0x3e, r29	; 62
     13e:	0f be       	out	0x3f, r0	; 63
     140:	cd bf       	out	0x3d, r28	; 61
     142:	16 16       	cp	r1, r22
     144:	17 06       	cpc	r1, r23
     146:	0c f0       	brlt	.+2      	; 0x14a <QR+0x3c>
     148:	ca c2       	rjmp	.+1428   	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
     14a:	3a a3       	std	Y+34, r19	; 0x22
     14c:	29 a3       	std	Y+33, r18	; 0x21
     14e:	58 a3       	std	Y+32, r21	; 0x20
     150:	4f 8f       	std	Y+31, r20	; 0x1f
     152:	2b 01       	movw	r4, r22
     154:	9c 8f       	std	Y+28, r25	; 0x1c
     156:	8b 8f       	std	Y+27, r24	; 0x1b
     158:	3a 87       	std	Y+10, r19	; 0x0a
     15a:	29 87       	std	Y+9, r18	; 0x09
     15c:	0f 8b       	std	Y+23, r16	; 0x17
     15e:	18 8f       	std	Y+24, r17	; 0x18
     160:	e9 8e       	std	Y+25, r14	; 0x19
     162:	fa 8e       	std	Y+26, r15	; 0x1a
     164:	5a 83       	std	Y+2, r21	; 0x02
     166:	49 83       	std	Y+1, r20	; 0x01
     168:	88 0f       	add	r24, r24
     16a:	99 1f       	adc	r25, r25
     16c:	88 0f       	add	r24, r24
     16e:	99 1f       	adc	r25, r25
     170:	88 0f       	add	r24, r24
     172:	99 1f       	adc	r25, r25
     174:	98 87       	std	Y+8, r25	; 0x08
     176:	8f 83       	std	Y+7, r24	; 0x07
     178:	5a 01       	movw	r10, r20
     17a:	6e 2c       	mov	r6, r14
     17c:	7f 2c       	mov	r7, r15
     17e:	20 2e       	mov	r2, r16
     180:	31 2e       	mov	r3, r17
     182:	c9 a0       	ldd	r12, Y+33	; 0x21
     184:	da a0       	ldd	r13, Y+34	; 0x22
     186:	e1 2c       	mov	r14, r1
     188:	f1 2c       	mov	r15, r1
     18a:	dc 82       	std	Y+4, r13	; 0x04
     18c:	cb 82       	std	Y+3, r12	; 0x03
     18e:	f6 01       	movw	r30, r12
     190:	10 82       	st	Z, r1
     192:	11 82       	std	Z+1, r1	; 0x01
     194:	12 82       	std	Z+2, r1	; 0x02
     196:	13 82       	std	Z+3, r1	; 0x03
     198:	2b 8d       	ldd	r18, Y+27	; 0x1b
     19a:	3c 8d       	ldd	r19, Y+28	; 0x1c
     19c:	12 16       	cp	r1, r18
     19e:	13 06       	cpc	r1, r19
     1a0:	1c f5       	brge	.+70     	; 0x1e8 <QR+0xda>
     1a2:	8f 80       	ldd	r8, Y+7	; 0x07
     1a4:	98 84       	ldd	r9, Y+8	; 0x08
     1a6:	8a 0c       	add	r8, r10
     1a8:	9b 1c       	adc	r9, r11
     1aa:	85 01       	movw	r16, r10
     1ac:	f8 01       	movw	r30, r16
     1ae:	60 81       	ld	r22, Z
     1b0:	71 81       	ldd	r23, Z+1	; 0x01
     1b2:	82 81       	ldd	r24, Z+2	; 0x02
     1b4:	93 81       	ldd	r25, Z+3	; 0x03
     1b6:	9b 01       	movw	r18, r22
     1b8:	ac 01       	movw	r20, r24
     1ba:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__mulsf3>
     1be:	9b 01       	movw	r18, r22
     1c0:	ac 01       	movw	r20, r24
     1c2:	eb 81       	ldd	r30, Y+3	; 0x03
     1c4:	fc 81       	ldd	r31, Y+4	; 0x04
     1c6:	60 81       	ld	r22, Z
     1c8:	71 81       	ldd	r23, Z+1	; 0x01
     1ca:	82 81       	ldd	r24, Z+2	; 0x02
     1cc:	93 81       	ldd	r25, Z+3	; 0x03
     1ce:	0e 94 34 0c 	call	0x1868	; 0x1868 <__addsf3>
     1d2:	eb 81       	ldd	r30, Y+3	; 0x03
     1d4:	fc 81       	ldd	r31, Y+4	; 0x04
     1d6:	60 83       	st	Z, r22
     1d8:	71 83       	std	Z+1, r23	; 0x01
     1da:	82 83       	std	Z+2, r24	; 0x02
     1dc:	93 83       	std	Z+3, r25	; 0x03
     1de:	08 5f       	subi	r16, 0xF8	; 248
     1e0:	1f 4f       	sbci	r17, 0xFF	; 255
     1e2:	80 16       	cp	r8, r16
     1e4:	91 06       	cpc	r9, r17
     1e6:	11 f7       	brne	.-60     	; 0x1ac <QR+0x9e>
     1e8:	eb 81       	ldd	r30, Y+3	; 0x03
     1ea:	fc 81       	ldd	r31, Y+4	; 0x04
     1ec:	60 81       	ld	r22, Z
     1ee:	71 81       	ldd	r23, Z+1	; 0x01
     1f0:	82 81       	ldd	r24, Z+2	; 0x02
     1f2:	93 81       	ldd	r25, Z+3	; 0x03
     1f4:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <sqrt>
     1f8:	eb 81       	ldd	r30, Y+3	; 0x03
     1fa:	fc 81       	ldd	r31, Y+4	; 0x04
     1fc:	60 83       	st	Z, r22
     1fe:	71 83       	std	Z+1, r23	; 0x01
     200:	82 83       	std	Z+2, r24	; 0x02
     202:	93 83       	std	Z+3, r25	; 0x03
     204:	f4 e0       	ldi	r31, 0x04	; 4
     206:	cf 0e       	add	r12, r31
     208:	d1 1c       	adc	r13, r1
     20a:	f1 01       	movw	r30, r2
     20c:	11 92       	st	Z+, r1
     20e:	11 92       	st	Z+, r1
     210:	11 92       	st	Z+, r1
     212:	11 92       	st	Z+, r1
     214:	1f 01       	movw	r2, r30
     216:	f3 01       	movw	r30, r6
     218:	e1 92       	st	Z+, r14
     21a:	f1 92       	st	Z+, r15
     21c:	3f 01       	movw	r6, r30
     21e:	ff ef       	ldi	r31, 0xFF	; 255
     220:	ef 1a       	sub	r14, r31
     222:	ff 0a       	sbc	r15, r31
     224:	24 e0       	ldi	r18, 0x04	; 4
     226:	a2 0e       	add	r10, r18
     228:	b1 1c       	adc	r11, r1
     22a:	4e 14       	cp	r4, r14
     22c:	5f 04       	cpc	r5, r15
     22e:	09 f0       	breq	.+2      	; 0x232 <QR+0x124>
     230:	ac cf       	rjmp	.-168    	; 0x18a <QR+0x7c>
     232:	2f 8c       	ldd	r2, Y+31	; 0x1f
     234:	38 a0       	ldd	r3, Y+32	; 0x20
     236:	8f 81       	ldd	r24, Y+7	; 0x07
     238:	98 85       	ldd	r25, Y+8	; 0x08
     23a:	28 0e       	add	r2, r24
     23c:	39 1e       	adc	r3, r25
     23e:	c2 01       	movw	r24, r4
     240:	88 0f       	add	r24, r24
     242:	99 1f       	adc	r25, r25
     244:	88 0f       	add	r24, r24
     246:	99 1f       	adc	r25, r25
     248:	e9 a1       	ldd	r30, Y+33	; 0x21
     24a:	fa a1       	ldd	r31, Y+34	; 0x22
     24c:	e8 0f       	add	r30, r24
     24e:	f9 1f       	adc	r31, r25
     250:	fc a3       	std	Y+36, r31	; 0x24
     252:	eb a3       	std	Y+35, r30	; 0x23
     254:	1e 8e       	std	Y+30, r1	; 0x1e
     256:	1d 8e       	std	Y+29, r1	; 0x1d
     258:	21 e0       	ldi	r18, 0x01	; 1
     25a:	30 e0       	ldi	r19, 0x00	; 0
     25c:	3e 8b       	std	Y+22, r19	; 0x16
     25e:	2d 8b       	std	Y+21, r18	; 0x15
     260:	1c 8a       	std	Y+20, r1	; 0x14
     262:	1b 8a       	std	Y+19, r1	; 0x13
     264:	1f 86       	std	Y+15, r1	; 0x0f
     266:	18 8a       	std	Y+16, r1	; 0x10
     268:	19 8a       	std	Y+17, r1	; 0x11
     26a:	1a 8a       	std	Y+18, r1	; 0x12
     26c:	2d c0       	rjmp	.+90     	; 0x2c8 <QR+0x1ba>
     26e:	8b 89       	ldd	r24, Y+19	; 0x13
     270:	9c 89       	ldd	r25, Y+20	; 0x14
     272:	01 96       	adiw	r24, 0x01	; 1
     274:	9c 8b       	std	Y+20, r25	; 0x14
     276:	8b 8b       	std	Y+19, r24	; 0x13
     278:	ed 89       	ldd	r30, Y+21	; 0x15
     27a:	fe 89       	ldd	r31, Y+22	; 0x16
     27c:	31 96       	adiw	r30, 0x01	; 1
     27e:	fe 8b       	std	Y+22, r31	; 0x16
     280:	ed 8b       	std	Y+21, r30	; 0x15
     282:	2f 89       	ldd	r18, Y+23	; 0x17
     284:	38 8d       	ldd	r19, Y+24	; 0x18
     286:	2c 5f       	subi	r18, 0xFC	; 252
     288:	3f 4f       	sbci	r19, 0xFF	; 255
     28a:	38 8f       	std	Y+24, r19	; 0x18
     28c:	2f 8b       	std	Y+23, r18	; 0x17
     28e:	8d 8d       	ldd	r24, Y+29	; 0x1d
     290:	9e 8d       	ldd	r25, Y+30	; 0x1e
     292:	04 96       	adiw	r24, 0x04	; 4
     294:	9e 8f       	std	Y+30, r25	; 0x1e
     296:	8d 8f       	std	Y+29, r24	; 0x1d
     298:	e9 85       	ldd	r30, Y+9	; 0x09
     29a:	fa 85       	ldd	r31, Y+10	; 0x0a
     29c:	34 96       	adiw	r30, 0x04	; 4
     29e:	fa 87       	std	Y+10, r31	; 0x0a
     2a0:	e9 87       	std	Y+9, r30	; 0x09
     2a2:	f4 e0       	ldi	r31, 0x04	; 4
     2a4:	2f 0e       	add	r2, r31
     2a6:	31 1c       	adc	r3, r1
     2a8:	29 8d       	ldd	r18, Y+25	; 0x19
     2aa:	3a 8d       	ldd	r19, Y+26	; 0x1a
     2ac:	2e 5f       	subi	r18, 0xFE	; 254
     2ae:	3f 4f       	sbci	r19, 0xFF	; 255
     2b0:	3a 8f       	std	Y+26, r19	; 0x1a
     2b2:	29 8f       	std	Y+25, r18	; 0x19
     2b4:	89 81       	ldd	r24, Y+1	; 0x01
     2b6:	9a 81       	ldd	r25, Y+2	; 0x02
     2b8:	0c 96       	adiw	r24, 0x0c	; 12
     2ba:	9a 83       	std	Y+2, r25	; 0x02
     2bc:	89 83       	std	Y+1, r24	; 0x01
     2be:	ef 81       	ldd	r30, Y+7	; 0x07
     2c0:	f8 85       	ldd	r31, Y+8	; 0x08
     2c2:	38 97       	sbiw	r30, 0x08	; 8
     2c4:	f8 87       	std	Y+8, r31	; 0x08
     2c6:	ef 83       	std	Y+7, r30	; 0x07
     2c8:	2b 89       	ldd	r18, Y+19	; 0x13
     2ca:	3c 89       	ldd	r19, Y+20	; 0x14
     2cc:	3c 87       	std	Y+12, r19	; 0x0c
     2ce:	2b 87       	std	Y+11, r18	; 0x0b
     2d0:	12 16       	cp	r1, r18
     2d2:	13 06       	cpc	r1, r19
     2d4:	0c f0       	brlt	.+2      	; 0x2d8 <QR+0x1ca>
     2d6:	47 c0       	rjmp	.+142    	; 0x366 <QR+0x258>
     2d8:	24 15       	cp	r18, r4
     2da:	35 05       	cpc	r19, r5
     2dc:	0c f0       	brlt	.+2      	; 0x2e0 <QR+0x1d2>
     2de:	02 c2       	rjmp	.+1028   	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
     2e0:	09 81       	ldd	r16, Y+1	; 0x01
     2e2:	1a 81       	ldd	r17, Y+2	; 0x02
     2e4:	08 50       	subi	r16, 0x08	; 8
     2e6:	11 09       	sbc	r17, r1
     2e8:	89 85       	ldd	r24, Y+9	; 0x09
     2ea:	9a 85       	ldd	r25, Y+10	; 0x0a
     2ec:	9e 87       	std	Y+14, r25	; 0x0e
     2ee:	8d 87       	std	Y+13, r24	; 0x0d
     2f0:	6b a0       	ldd	r6, Y+35	; 0x23
     2f2:	7c a0       	ldd	r7, Y+36	; 0x24
     2f4:	ed 85       	ldd	r30, Y+13	; 0x0d
     2f6:	fe 85       	ldd	r31, Y+14	; 0x0e
     2f8:	80 80       	ld	r8, Z
     2fa:	91 80       	ldd	r9, Z+1	; 0x01
     2fc:	a2 80       	ldd	r10, Z+2	; 0x02
     2fe:	b3 80       	ldd	r11, Z+3	; 0x03
     300:	f8 01       	movw	r30, r16
     302:	c1 90       	ld	r12, Z+
     304:	d1 90       	ld	r13, Z+
     306:	e1 90       	ld	r14, Z+
     308:	f1 90       	ld	r15, Z+
     30a:	8f 01       	movw	r16, r30
     30c:	a5 01       	movw	r20, r10
     30e:	94 01       	movw	r18, r8
     310:	c5 01       	movw	r24, r10
     312:	b4 01       	movw	r22, r8
     314:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__mulsf3>
     318:	6b 83       	std	Y+3, r22	; 0x03
     31a:	7c 83       	std	Y+4, r23	; 0x04
     31c:	8d 83       	std	Y+5, r24	; 0x05
     31e:	9e 83       	std	Y+6, r25	; 0x06
     320:	a5 01       	movw	r20, r10
     322:	94 01       	movw	r18, r8
     324:	c5 01       	movw	r24, r10
     326:	b4 01       	movw	r22, r8
     328:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__mulsf3>
     32c:	4b 01       	movw	r8, r22
     32e:	5c 01       	movw	r10, r24
     330:	a7 01       	movw	r20, r14
     332:	96 01       	movw	r18, r12
     334:	c7 01       	movw	r24, r14
     336:	b6 01       	movw	r22, r12
     338:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__mulsf3>
     33c:	9b 01       	movw	r18, r22
     33e:	ac 01       	movw	r20, r24
     340:	c5 01       	movw	r24, r10
     342:	b4 01       	movw	r22, r8
     344:	0e 94 33 0c 	call	0x1866	; 0x1866 <__subsf3>
     348:	9f 77       	andi	r25, 0x7F	; 127
     34a:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <sqrt>
     34e:	ed 85       	ldd	r30, Y+13	; 0x0d
     350:	fe 85       	ldd	r31, Y+14	; 0x0e
     352:	61 93       	st	Z+, r22
     354:	71 93       	st	Z+, r23
     356:	81 93       	st	Z+, r24
     358:	91 93       	st	Z+, r25
     35a:	fe 87       	std	Y+14, r31	; 0x0e
     35c:	ed 87       	std	Y+13, r30	; 0x0d
     35e:	e6 15       	cp	r30, r6
     360:	f7 05       	cpc	r31, r7
     362:	41 f6       	brne	.-112    	; 0x2f4 <QR+0x1e6>
     364:	d2 c1       	rjmp	.+932    	; 0x70a <__LOCK_REGION_LENGTH__+0x30a>
     366:	29 85       	ldd	r18, Y+9	; 0x09
     368:	3a 85       	ldd	r19, Y+10	; 0x0a
     36a:	3e 87       	std	Y+14, r19	; 0x0e
     36c:	2d 87       	std	Y+13, r18	; 0x0d
     36e:	f9 01       	movw	r30, r18
     370:	80 80       	ld	r8, Z
     372:	91 80       	ldd	r9, Z+1	; 0x01
     374:	a2 80       	ldd	r10, Z+2	; 0x02
     376:	b3 80       	ldd	r11, Z+3	; 0x03
     378:	2b 85       	ldd	r18, Y+11	; 0x0b
     37a:	3c 85       	ldd	r19, Y+12	; 0x0c
     37c:	24 15       	cp	r18, r4
     37e:	35 05       	cpc	r19, r5
     380:	0c f0       	brlt	.+2      	; 0x384 <QR+0x276>
     382:	cd c1       	rjmp	.+922    	; 0x71e <__LOCK_REGION_LENGTH__+0x31e>
     384:	09 85       	ldd	r16, Y+9	; 0x09
     386:	1a 85       	ldd	r17, Y+10	; 0x0a
     388:	0c 5f       	subi	r16, 0xFC	; 252
     38a:	1f 4f       	sbci	r17, 0xFF	; 255
     38c:	8b 85       	ldd	r24, Y+11	; 0x0b
     38e:	9c 85       	ldd	r25, Y+12	; 0x0c
     390:	3c 01       	movw	r6, r24
     392:	9c 83       	std	Y+4, r25	; 0x04
     394:	8b 83       	std	Y+3, r24	; 0x03
     396:	16 c0       	rjmp	.+44     	; 0x3c4 <QR+0x2b6>
     398:	f8 01       	movw	r30, r16
     39a:	c1 90       	ld	r12, Z+
     39c:	d1 90       	ld	r13, Z+
     39e:	e1 90       	ld	r14, Z+
     3a0:	f1 90       	ld	r15, Z+
     3a2:	8f 01       	movw	r16, r30
     3a4:	a7 01       	movw	r20, r14
     3a6:	96 01       	movw	r18, r12
     3a8:	68 2d       	mov	r22, r8
     3aa:	79 2d       	mov	r23, r9
     3ac:	8a 2d       	mov	r24, r10
     3ae:	9b 2d       	mov	r25, r11
     3b0:	0e 94 a0 0c 	call	0x1940	; 0x1940 <__cmpsf2>
     3b4:	88 23       	and	r24, r24
     3b6:	34 f4       	brge	.+12     	; 0x3c4 <QR+0x2b6>
     3b8:	8c 2c       	mov	r8, r12
     3ba:	9d 2c       	mov	r9, r13
     3bc:	ae 2c       	mov	r10, r14
     3be:	bf 2c       	mov	r11, r15
     3c0:	6b 80       	ldd	r6, Y+3	; 0x03
     3c2:	7c 80       	ldd	r7, Y+4	; 0x04
     3c4:	2b 81       	ldd	r18, Y+3	; 0x03
     3c6:	3c 81       	ldd	r19, Y+4	; 0x04
     3c8:	2f 5f       	subi	r18, 0xFF	; 255
     3ca:	3f 4f       	sbci	r19, 0xFF	; 255
     3cc:	3c 83       	std	Y+4, r19	; 0x04
     3ce:	2b 83       	std	Y+3, r18	; 0x03
     3d0:	24 15       	cp	r18, r4
     3d2:	35 05       	cpc	r19, r5
     3d4:	0c f3       	brlt	.-62     	; 0x398 <QR+0x28a>
     3d6:	2c ea       	ldi	r18, 0xAC	; 172
     3d8:	35 ec       	ldi	r19, 0xC5	; 197
     3da:	47 e2       	ldi	r20, 0x27	; 39
     3dc:	57 e3       	ldi	r21, 0x37	; 55
     3de:	68 2d       	mov	r22, r8
     3e0:	79 2d       	mov	r23, r9
     3e2:	8a 2d       	mov	r24, r10
     3e4:	9b 2d       	mov	r25, r11
     3e6:	0e 94 a0 0c 	call	0x1940	; 0x1940 <__cmpsf2>
     3ea:	18 16       	cp	r1, r24
     3ec:	0c f0       	brlt	.+2      	; 0x3f0 <QR+0x2e2>
     3ee:	cf c1       	rjmp	.+926    	; 0x78e <__LOCK_REGION_LENGTH__+0x38e>
     3f0:	8b 85       	ldd	r24, Y+11	; 0x0b
     3f2:	9c 85       	ldd	r25, Y+12	; 0x0c
     3f4:	68 16       	cp	r6, r24
     3f6:	79 06       	cpc	r7, r25
     3f8:	09 f4       	brne	.+2      	; 0x3fc <QR+0x2ee>
     3fa:	4e c0       	rjmp	.+156    	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
     3fc:	e9 8d       	ldd	r30, Y+25	; 0x19
     3fe:	fa 8d       	ldd	r31, Y+26	; 0x1a
     400:	71 82       	std	Z+1, r7	; 0x01
     402:	60 82       	st	Z, r6
     404:	2b 8d       	ldd	r18, Y+27	; 0x1b
     406:	3c 8d       	ldd	r19, Y+28	; 0x1c
     408:	12 16       	cp	r1, r18
     40a:	13 06       	cpc	r1, r19
     40c:	34 f5       	brge	.+76     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
     40e:	ef 8d       	ldd	r30, Y+31	; 0x1f
     410:	f8 a1       	ldd	r31, Y+32	; 0x20
     412:	8d 8d       	ldd	r24, Y+29	; 0x1d
     414:	9e 8d       	ldd	r25, Y+30	; 0x1e
     416:	e8 0f       	add	r30, r24
     418:	f9 1f       	adc	r31, r25
     41a:	d3 01       	movw	r26, r6
     41c:	aa 0f       	add	r26, r26
     41e:	bb 1f       	adc	r27, r27
     420:	aa 0f       	add	r26, r26
     422:	bb 1f       	adc	r27, r27
     424:	2f 8d       	ldd	r18, Y+31	; 0x1f
     426:	38 a1       	ldd	r19, Y+32	; 0x20
     428:	a2 0f       	add	r26, r18
     42a:	b3 1f       	adc	r27, r19
     42c:	40 81       	ld	r20, Z
     42e:	51 81       	ldd	r21, Z+1	; 0x01
     430:	62 81       	ldd	r22, Z+2	; 0x02
     432:	73 81       	ldd	r23, Z+3	; 0x03
     434:	0d 91       	ld	r16, X+
     436:	1d 91       	ld	r17, X+
     438:	2d 91       	ld	r18, X+
     43a:	3c 91       	ld	r19, X
     43c:	13 97       	sbiw	r26, 0x03	; 3
     43e:	00 83       	st	Z, r16
     440:	11 83       	std	Z+1, r17	; 0x01
     442:	22 83       	std	Z+2, r18	; 0x02
     444:	33 83       	std	Z+3, r19	; 0x03
     446:	4d 93       	st	X+, r20
     448:	5d 93       	st	X+, r21
     44a:	6d 93       	st	X+, r22
     44c:	7c 93       	st	X, r23
     44e:	13 97       	sbiw	r26, 0x03	; 3
     450:	38 96       	adiw	r30, 0x08	; 8
     452:	18 96       	adiw	r26, 0x08	; 8
     454:	e2 15       	cp	r30, r2
     456:	f3 05       	cpc	r31, r3
     458:	49 f7       	brne	.-46     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
     45a:	ed 85       	ldd	r30, Y+13	; 0x0d
     45c:	fe 85       	ldd	r31, Y+14	; 0x0e
     45e:	80 81       	ld	r24, Z
     460:	91 81       	ldd	r25, Z+1	; 0x01
     462:	a2 81       	ldd	r26, Z+2	; 0x02
     464:	b3 81       	ldd	r27, Z+3	; 0x03
     466:	f3 01       	movw	r30, r6
     468:	ee 0f       	add	r30, r30
     46a:	ff 1f       	adc	r31, r31
     46c:	ee 0f       	add	r30, r30
     46e:	ff 1f       	adc	r31, r31
     470:	09 a1       	ldd	r16, Y+33	; 0x21
     472:	1a a1       	ldd	r17, Y+34	; 0x22
     474:	0e 0f       	add	r16, r30
     476:	1f 1f       	adc	r17, r31
     478:	f8 01       	movw	r30, r16
     47a:	40 81       	ld	r20, Z
     47c:	51 81       	ldd	r21, Z+1	; 0x01
     47e:	62 81       	ldd	r22, Z+2	; 0x02
     480:	73 81       	ldd	r23, Z+3	; 0x03
     482:	ed 85       	ldd	r30, Y+13	; 0x0d
     484:	fe 85       	ldd	r31, Y+14	; 0x0e
     486:	40 83       	st	Z, r20
     488:	51 83       	std	Z+1, r21	; 0x01
     48a:	62 83       	std	Z+2, r22	; 0x02
     48c:	73 83       	std	Z+3, r23	; 0x03
     48e:	f8 01       	movw	r30, r16
     490:	80 83       	st	Z, r24
     492:	91 83       	std	Z+1, r25	; 0x01
     494:	a2 83       	std	Z+2, r26	; 0x02
     496:	b3 83       	std	Z+3, r27	; 0x03
     498:	2b 8d       	ldd	r18, Y+27	; 0x1b
     49a:	3c 8d       	ldd	r19, Y+28	; 0x1c
     49c:	8b 85       	ldd	r24, Y+11	; 0x0b
     49e:	9c 85       	ldd	r25, Y+12	; 0x0c
     4a0:	82 17       	cp	r24, r18
     4a2:	93 07       	cpc	r25, r19
     4a4:	34 f5       	brge	.+76     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
     4a6:	e9 81       	ldd	r30, Y+1	; 0x01
     4a8:	fa 81       	ldd	r31, Y+2	; 0x02
     4aa:	80 e0       	ldi	r24, 0x00	; 0
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	a0 e0       	ldi	r26, 0x00	; 0
     4b0:	b0 e0       	ldi	r27, 0x00	; 0
     4b2:	6c 01       	movw	r12, r24
     4b4:	7d 01       	movw	r14, r26
     4b6:	fc 83       	std	Y+4, r31	; 0x04
     4b8:	eb 83       	std	Y+3, r30	; 0x03
     4ba:	eb 81       	ldd	r30, Y+3	; 0x03
     4bc:	fc 81       	ldd	r31, Y+4	; 0x04
     4be:	80 80       	ld	r8, Z
     4c0:	91 80       	ldd	r9, Z+1	; 0x01
     4c2:	a2 80       	ldd	r10, Z+2	; 0x02
     4c4:	b3 80       	ldd	r11, Z+3	; 0x03
     4c6:	e8 94       	clt
     4c8:	b7 f8       	bld	r11, 7
     4ca:	a7 01       	movw	r20, r14
     4cc:	96 01       	movw	r18, r12
     4ce:	c5 01       	movw	r24, r10
     4d0:	b4 01       	movw	r22, r8
     4d2:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <__gesf2>
     4d6:	18 16       	cp	r1, r24
     4d8:	14 f4       	brge	.+4      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
     4da:	75 01       	movw	r14, r10
     4dc:	64 01       	movw	r12, r8
     4de:	2b 81       	ldd	r18, Y+3	; 0x03
     4e0:	3c 81       	ldd	r19, Y+4	; 0x04
     4e2:	28 5f       	subi	r18, 0xF8	; 248
     4e4:	3f 4f       	sbci	r19, 0xFF	; 255
     4e6:	3c 83       	std	Y+4, r19	; 0x04
     4e8:	2b 83       	std	Y+3, r18	; 0x03
     4ea:	22 15       	cp	r18, r2
     4ec:	33 05       	cpc	r19, r3
     4ee:	29 f7       	brne	.-54     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
     4f0:	24 c1       	rjmp	.+584    	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
     4f2:	ef 89       	ldd	r30, Y+23	; 0x17
     4f4:	f8 8d       	ldd	r31, Y+24	; 0x18
     4f6:	10 82       	st	Z, r1
     4f8:	11 82       	std	Z+1, r1	; 0x01
     4fa:	12 82       	std	Z+2, r1	; 0x02
     4fc:	13 82       	std	Z+3, r1	; 0x03
     4fe:	2d 89       	ldd	r18, Y+21	; 0x15
     500:	3e 89       	ldd	r19, Y+22	; 0x16
     502:	3c 87       	std	Y+12, r19	; 0x0c
     504:	2b 87       	std	Y+11, r18	; 0x0b
     506:	24 15       	cp	r18, r4
     508:	35 05       	cpc	r19, r5
     50a:	0c f4       	brge	.+2      	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
     50c:	b0 ce       	rjmp	.-672    	; 0x26e <QR+0x160>
     50e:	3f c1       	rjmp	.+638    	; 0x78e <__LOCK_REGION_LENGTH__+0x38e>
     510:	a7 01       	movw	r20, r14
     512:	96 01       	movw	r18, r12
     514:	eb 81       	ldd	r30, Y+3	; 0x03
     516:	fc 81       	ldd	r31, Y+4	; 0x04
     518:	60 81       	ld	r22, Z
     51a:	71 81       	ldd	r23, Z+1	; 0x01
     51c:	82 81       	ldd	r24, Z+2	; 0x02
     51e:	93 81       	ldd	r25, Z+3	; 0x03
     520:	0e 94 a5 0c 	call	0x194a	; 0x194a <__divsf3>
     524:	eb 81       	ldd	r30, Y+3	; 0x03
     526:	fc 81       	ldd	r31, Y+4	; 0x04
     528:	60 83       	st	Z, r22
     52a:	71 83       	std	Z+1, r23	; 0x01
     52c:	82 83       	std	Z+2, r24	; 0x02
     52e:	93 83       	std	Z+3, r25	; 0x03
     530:	38 96       	adiw	r30, 0x08	; 8
     532:	fc 83       	std	Y+4, r31	; 0x04
     534:	eb 83       	std	Y+3, r30	; 0x03
     536:	e2 15       	cp	r30, r2
     538:	f3 05       	cpc	r31, r3
     53a:	51 f7       	brne	.-44     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
     53c:	a7 01       	movw	r20, r14
     53e:	96 01       	movw	r18, r12
     540:	ed 85       	ldd	r30, Y+13	; 0x0d
     542:	fe 85       	ldd	r31, Y+14	; 0x0e
     544:	60 81       	ld	r22, Z
     546:	71 81       	ldd	r23, Z+1	; 0x01
     548:	82 81       	ldd	r24, Z+2	; 0x02
     54a:	93 81       	ldd	r25, Z+3	; 0x03
     54c:	0e 94 a5 0c 	call	0x194a	; 0x194a <__divsf3>
     550:	4b 01       	movw	r8, r22
     552:	5c 01       	movw	r10, r24
     554:	ed 85       	ldd	r30, Y+13	; 0x0d
     556:	fe 85       	ldd	r31, Y+14	; 0x0e
     558:	60 83       	st	Z, r22
     55a:	71 83       	std	Z+1, r23	; 0x01
     55c:	82 83       	std	Z+2, r24	; 0x02
     55e:	93 83       	std	Z+3, r25	; 0x03
     560:	29 81       	ldd	r18, Y+1	; 0x01
     562:	3a 81       	ldd	r19, Y+2	; 0x02
     564:	3c 83       	std	Y+4, r19	; 0x04
     566:	2b 83       	std	Y+3, r18	; 0x03
     568:	20 e0       	ldi	r18, 0x00	; 0
     56a:	30 e0       	ldi	r19, 0x00	; 0
     56c:	40 e0       	ldi	r20, 0x00	; 0
     56e:	50 e0       	ldi	r21, 0x00	; 0
     570:	e9 81       	ldd	r30, Y+1	; 0x01
     572:	fa 81       	ldd	r31, Y+2	; 0x02
     574:	60 81       	ld	r22, Z
     576:	71 81       	ldd	r23, Z+1	; 0x01
     578:	82 81       	ldd	r24, Z+2	; 0x02
     57a:	93 81       	ldd	r25, Z+3	; 0x03
     57c:	0e 94 a0 0c 	call	0x1940	; 0x1940 <__cmpsf2>
     580:	88 23       	and	r24, r24
     582:	54 f4       	brge	.+20     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
     584:	b7 fa       	bst	r11, 7
     586:	b0 94       	com	r11
     588:	b7 f8       	bld	r11, 7
     58a:	b0 94       	com	r11
     58c:	ed 85       	ldd	r30, Y+13	; 0x0d
     58e:	fe 85       	ldd	r31, Y+14	; 0x0e
     590:	80 82       	st	Z, r8
     592:	91 82       	std	Z+1, r9	; 0x01
     594:	a2 82       	std	Z+2, r10	; 0x02
     596:	b3 82       	std	Z+3, r11	; 0x03
     598:	ed 85       	ldd	r30, Y+13	; 0x0d
     59a:	fe 85       	ldd	r31, Y+14	; 0x0e
     59c:	20 81       	ld	r18, Z
     59e:	31 81       	ldd	r19, Z+1	; 0x01
     5a0:	42 81       	ldd	r20, Z+2	; 0x02
     5a2:	53 81       	ldd	r21, Z+3	; 0x03
     5a4:	eb 81       	ldd	r30, Y+3	; 0x03
     5a6:	fc 81       	ldd	r31, Y+4	; 0x04
     5a8:	60 81       	ld	r22, Z
     5aa:	71 81       	ldd	r23, Z+1	; 0x01
     5ac:	82 81       	ldd	r24, Z+2	; 0x02
     5ae:	93 81       	ldd	r25, Z+3	; 0x03
     5b0:	0e 94 34 0c 	call	0x1868	; 0x1868 <__addsf3>
     5b4:	eb 81       	ldd	r30, Y+3	; 0x03
     5b6:	fc 81       	ldd	r31, Y+4	; 0x04
     5b8:	60 83       	st	Z, r22
     5ba:	71 83       	std	Z+1, r23	; 0x01
     5bc:	82 83       	std	Z+2, r24	; 0x02
     5be:	93 83       	std	Z+3, r25	; 0x03
     5c0:	2f 89       	ldd	r18, Y+23	; 0x17
     5c2:	38 8d       	ldd	r19, Y+24	; 0x18
     5c4:	3c 83       	std	Y+4, r19	; 0x04
     5c6:	2b 83       	std	Y+3, r18	; 0x03
     5c8:	ed 85       	ldd	r30, Y+13	; 0x0d
     5ca:	fe 85       	ldd	r31, Y+14	; 0x0e
     5cc:	20 81       	ld	r18, Z
     5ce:	31 81       	ldd	r19, Z+1	; 0x01
     5d0:	42 81       	ldd	r20, Z+2	; 0x02
     5d2:	53 81       	ldd	r21, Z+3	; 0x03
     5d4:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__mulsf3>
     5d8:	9b 01       	movw	r18, r22
     5da:	ac 01       	movw	r20, r24
     5dc:	60 e0       	ldi	r22, 0x00	; 0
     5de:	70 e0       	ldi	r23, 0x00	; 0
     5e0:	80 e8       	ldi	r24, 0x80	; 128
     5e2:	9f e3       	ldi	r25, 0x3F	; 63
     5e4:	0e 94 a5 0c 	call	0x194a	; 0x194a <__divsf3>
     5e8:	ef 89       	ldd	r30, Y+23	; 0x17
     5ea:	f8 8d       	ldd	r31, Y+24	; 0x18
     5ec:	60 83       	st	Z, r22
     5ee:	71 83       	std	Z+1, r23	; 0x01
     5f0:	82 83       	std	Z+2, r24	; 0x02
     5f2:	93 83       	std	Z+3, r25	; 0x03
     5f4:	a7 01       	movw	r20, r14
     5f6:	96 01       	movw	r18, r12
     5f8:	ed 85       	ldd	r30, Y+13	; 0x0d
     5fa:	fe 85       	ldd	r31, Y+14	; 0x0e
     5fc:	60 81       	ld	r22, Z
     5fe:	71 81       	ldd	r23, Z+1	; 0x01
     600:	82 81       	ldd	r24, Z+2	; 0x02
     602:	93 81       	ldd	r25, Z+3	; 0x03
     604:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__mulsf3>
     608:	ed 85       	ldd	r30, Y+13	; 0x0d
     60a:	fe 85       	ldd	r31, Y+14	; 0x0e
     60c:	60 83       	st	Z, r22
     60e:	71 83       	std	Z+1, r23	; 0x01
     610:	82 83       	std	Z+2, r24	; 0x02
     612:	93 83       	std	Z+3, r25	; 0x03
     614:	6d 88       	ldd	r6, Y+21	; 0x15
     616:	7e 88       	ldd	r7, Y+22	; 0x16
     618:	64 14       	cp	r6, r4
     61a:	75 04       	cpc	r7, r5
     61c:	0c f0       	brlt	.+2      	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
     61e:	9e c0       	rjmp	.+316    	; 0x75c <__LOCK_REGION_LENGTH__+0x35c>
     620:	c9 80       	ldd	r12, Y+1	; 0x01
     622:	da 80       	ldd	r13, Y+2	; 0x02
     624:	f4 e0       	ldi	r31, 0x04	; 4
     626:	cf 0e       	add	r12, r31
     628:	d1 1c       	adc	r13, r1
     62a:	50 c0       	rjmp	.+160    	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
     62c:	eb 85       	ldd	r30, Y+11	; 0x0b
     62e:	fc 85       	ldd	r31, Y+12	; 0x0c
     630:	20 81       	ld	r18, Z
     632:	31 81       	ldd	r19, Z+1	; 0x01
     634:	42 81       	ldd	r20, Z+2	; 0x02
     636:	53 81       	ldd	r21, Z+3	; 0x03
     638:	f8 01       	movw	r30, r16
     63a:	60 81       	ld	r22, Z
     63c:	71 81       	ldd	r23, Z+1	; 0x01
     63e:	82 81       	ldd	r24, Z+2	; 0x02
     640:	93 81       	ldd	r25, Z+3	; 0x03
     642:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__mulsf3>
     646:	9b 01       	movw	r18, r22
     648:	ac 01       	movw	r20, r24
     64a:	6a 2d       	mov	r22, r10
     64c:	7b 2d       	mov	r23, r11
     64e:	8e 2d       	mov	r24, r14
     650:	9f 2d       	mov	r25, r15
     652:	0e 94 34 0c 	call	0x1868	; 0x1868 <__addsf3>
     656:	a6 2e       	mov	r10, r22
     658:	b7 2e       	mov	r11, r23
     65a:	e8 2e       	mov	r14, r24
     65c:	f9 2e       	mov	r15, r25
     65e:	08 5f       	subi	r16, 0xF8	; 248
     660:	1f 4f       	sbci	r17, 0xFF	; 255
     662:	2b 85       	ldd	r18, Y+11	; 0x0b
     664:	3c 85       	ldd	r19, Y+12	; 0x0c
     666:	28 5f       	subi	r18, 0xF8	; 248
     668:	3f 4f       	sbci	r19, 0xFF	; 255
     66a:	3c 87       	std	Y+12, r19	; 0x0c
     66c:	2b 87       	std	Y+11, r18	; 0x0b
     66e:	02 15       	cp	r16, r2
     670:	13 05       	cpc	r17, r3
     672:	e1 f6       	brne	.-72     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
     674:	79 c0       	rjmp	.+242    	; 0x768 <__LOCK_REGION_LENGTH__+0x368>
     676:	f8 01       	movw	r30, r16
     678:	20 81       	ld	r18, Z
     67a:	31 81       	ldd	r19, Z+1	; 0x01
     67c:	42 81       	ldd	r20, Z+2	; 0x02
     67e:	53 81       	ldd	r21, Z+3	; 0x03
     680:	c5 01       	movw	r24, r10
     682:	b4 01       	movw	r22, r8
     684:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__mulsf3>
     688:	9b 01       	movw	r18, r22
     68a:	ac 01       	movw	r20, r24
     68c:	eb 85       	ldd	r30, Y+11	; 0x0b
     68e:	fc 85       	ldd	r31, Y+12	; 0x0c
     690:	60 81       	ld	r22, Z
     692:	71 81       	ldd	r23, Z+1	; 0x01
     694:	82 81       	ldd	r24, Z+2	; 0x02
     696:	93 81       	ldd	r25, Z+3	; 0x03
     698:	0e 94 33 0c 	call	0x1866	; 0x1866 <__subsf3>
     69c:	eb 85       	ldd	r30, Y+11	; 0x0b
     69e:	fc 85       	ldd	r31, Y+12	; 0x0c
     6a0:	60 83       	st	Z, r22
     6a2:	71 83       	std	Z+1, r23	; 0x01
     6a4:	82 83       	std	Z+2, r24	; 0x02
     6a6:	93 83       	std	Z+3, r25	; 0x03
     6a8:	38 96       	adiw	r30, 0x08	; 8
     6aa:	fc 87       	std	Y+12, r31	; 0x0c
     6ac:	eb 87       	std	Y+11, r30	; 0x0b
     6ae:	08 5f       	subi	r16, 0xF8	; 248
     6b0:	1f 4f       	sbci	r17, 0xFF	; 255
     6b2:	ee 15       	cp	r30, r14
     6b4:	ff 05       	cpc	r31, r15
     6b6:	f9 f6       	brne	.-66     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
     6b8:	ff ef       	ldi	r31, 0xFF	; 255
     6ba:	6f 1a       	sub	r6, r31
     6bc:	7f 0a       	sbc	r7, r31
     6be:	24 e0       	ldi	r18, 0x04	; 4
     6c0:	c2 0e       	add	r12, r18
     6c2:	d1 1c       	adc	r13, r1
     6c4:	46 14       	cp	r4, r6
     6c6:	57 04       	cpc	r5, r7
     6c8:	09 f4       	brne	.+2      	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
     6ca:	d1 cd       	rjmp	.-1118   	; 0x26e <QR+0x160>
     6cc:	dc 86       	std	Y+12, r13	; 0x0c
     6ce:	cb 86       	std	Y+11, r12	; 0x0b
     6d0:	09 81       	ldd	r16, Y+1	; 0x01
     6d2:	1a 81       	ldd	r17, Y+2	; 0x02
     6d4:	af 84       	ldd	r10, Y+15	; 0x0f
     6d6:	b8 88       	ldd	r11, Y+16	; 0x10
     6d8:	e9 88       	ldd	r14, Y+17	; 0x11
     6da:	fa 88       	ldd	r15, Y+18	; 0x12
     6dc:	a7 cf       	rjmp	.-178    	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
     6de:	1c 86       	std	Y+12, r1	; 0x0c
     6e0:	1b 86       	std	Y+11, r1	; 0x0b
     6e2:	55 c0       	rjmp	.+170    	; 0x78e <__LOCK_REGION_LENGTH__+0x38e>
     6e4:	89 85       	ldd	r24, Y+9	; 0x09
     6e6:	9a 85       	ldd	r25, Y+10	; 0x0a
     6e8:	9e 87       	std	Y+14, r25	; 0x0e
     6ea:	8d 87       	std	Y+13, r24	; 0x0d
     6ec:	2c ea       	ldi	r18, 0xAC	; 172
     6ee:	35 ec       	ldi	r19, 0xC5	; 197
     6f0:	47 e2       	ldi	r20, 0x27	; 39
     6f2:	57 e3       	ldi	r21, 0x37	; 55
     6f4:	fc 01       	movw	r30, r24
     6f6:	60 81       	ld	r22, Z
     6f8:	71 81       	ldd	r23, Z+1	; 0x01
     6fa:	82 81       	ldd	r24, Z+2	; 0x02
     6fc:	93 81       	ldd	r25, Z+3	; 0x03
     6fe:	0e 94 a0 0c 	call	0x1940	; 0x1940 <__cmpsf2>
     702:	18 16       	cp	r1, r24
     704:	0c f4       	brge	.+2      	; 0x708 <__LOCK_REGION_LENGTH__+0x308>
     706:	c8 ce       	rjmp	.-624    	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
     708:	42 c0       	rjmp	.+132    	; 0x78e <__LOCK_REGION_LENGTH__+0x38e>
     70a:	29 85       	ldd	r18, Y+9	; 0x09
     70c:	3a 85       	ldd	r19, Y+10	; 0x0a
     70e:	3e 87       	std	Y+14, r19	; 0x0e
     710:	2d 87       	std	Y+13, r18	; 0x0d
     712:	f9 01       	movw	r30, r18
     714:	80 80       	ld	r8, Z
     716:	91 80       	ldd	r9, Z+1	; 0x01
     718:	a2 80       	ldd	r10, Z+2	; 0x02
     71a:	b3 80       	ldd	r11, Z+3	; 0x03
     71c:	33 ce       	rjmp	.-922    	; 0x384 <QR+0x276>
     71e:	2c ea       	ldi	r18, 0xAC	; 172
     720:	35 ec       	ldi	r19, 0xC5	; 197
     722:	47 e2       	ldi	r20, 0x27	; 39
     724:	57 e3       	ldi	r21, 0x37	; 55
     726:	68 2d       	mov	r22, r8
     728:	79 2d       	mov	r23, r9
     72a:	8a 2d       	mov	r24, r10
     72c:	9b 2d       	mov	r25, r11
     72e:	0e 94 a0 0c 	call	0x1940	; 0x1940 <__cmpsf2>
     732:	18 16       	cp	r1, r24
     734:	0c f4       	brge	.+2      	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
     736:	b0 ce       	rjmp	.-672    	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
     738:	2a c0       	rjmp	.+84     	; 0x78e <__LOCK_REGION_LENGTH__+0x38e>
     73a:	2c ea       	ldi	r18, 0xAC	; 172
     73c:	35 ec       	ldi	r19, 0xC5	; 197
     73e:	47 e2       	ldi	r20, 0x27	; 39
     740:	57 e3       	ldi	r21, 0x37	; 55
     742:	c7 01       	movw	r24, r14
     744:	b6 01       	movw	r22, r12
     746:	9f 77       	andi	r25, 0x7F	; 127
     748:	0e 94 a0 0c 	call	0x1940	; 0x1940 <__cmpsf2>
     74c:	18 16       	cp	r1, r24
     74e:	0c f0       	brlt	.+2      	; 0x752 <__LOCK_REGION_LENGTH__+0x352>
     750:	d0 ce       	rjmp	.-608    	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
     752:	29 81       	ldd	r18, Y+1	; 0x01
     754:	3a 81       	ldd	r19, Y+2	; 0x02
     756:	3c 83       	std	Y+4, r19	; 0x04
     758:	2b 83       	std	Y+3, r18	; 0x03
     75a:	da ce       	rjmp	.-588    	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
     75c:	8b 85       	ldd	r24, Y+11	; 0x0b
     75e:	9c 85       	ldd	r25, Y+12	; 0x0c
     760:	01 96       	adiw	r24, 0x01	; 1
     762:	9c 87       	std	Y+12, r25	; 0x0c
     764:	8b 87       	std	Y+11, r24	; 0x0b
     766:	13 c0       	rjmp	.+38     	; 0x78e <__LOCK_REGION_LENGTH__+0x38e>
     768:	eb 81       	ldd	r30, Y+3	; 0x03
     76a:	fc 81       	ldd	r31, Y+4	; 0x04
     76c:	20 81       	ld	r18, Z
     76e:	31 81       	ldd	r19, Z+1	; 0x01
     770:	42 81       	ldd	r20, Z+2	; 0x02
     772:	53 81       	ldd	r21, Z+3	; 0x03
     774:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__mulsf3>
     778:	4b 01       	movw	r8, r22
     77a:	5c 01       	movw	r10, r24
     77c:	ef 80       	ldd	r14, Y+7	; 0x07
     77e:	f8 84       	ldd	r15, Y+8	; 0x08
     780:	ec 0c       	add	r14, r12
     782:	fd 1c       	adc	r15, r13
     784:	09 81       	ldd	r16, Y+1	; 0x01
     786:	1a 81       	ldd	r17, Y+2	; 0x02
     788:	dc 86       	std	Y+12, r13	; 0x0c
     78a:	cb 86       	std	Y+11, r12	; 0x0b
     78c:	74 cf       	rjmp	.-280    	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
     78e:	8b 85       	ldd	r24, Y+11	; 0x0b
     790:	9c 85       	ldd	r25, Y+12	; 0x0c
     792:	a4 96       	adiw	r28, 0x24	; 36
     794:	0f b6       	in	r0, 0x3f	; 63
     796:	f8 94       	cli
     798:	de bf       	out	0x3e, r29	; 62
     79a:	0f be       	out	0x3f, r0	; 63
     79c:	cd bf       	out	0x3d, r28	; 61
     79e:	df 91       	pop	r29
     7a0:	cf 91       	pop	r28
     7a2:	1f 91       	pop	r17
     7a4:	0f 91       	pop	r16
     7a6:	ff 90       	pop	r15
     7a8:	ef 90       	pop	r14
     7aa:	df 90       	pop	r13
     7ac:	cf 90       	pop	r12
     7ae:	bf 90       	pop	r11
     7b0:	af 90       	pop	r10
     7b2:	9f 90       	pop	r9
     7b4:	8f 90       	pop	r8
     7b6:	7f 90       	pop	r7
     7b8:	6f 90       	pop	r6
     7ba:	5f 90       	pop	r5
     7bc:	4f 90       	pop	r4
     7be:	3f 90       	pop	r3
     7c0:	2f 90       	pop	r2
     7c2:	08 95       	ret

000007c4 <backrow>:
     7c4:	2f 92       	push	r2
     7c6:	3f 92       	push	r3
     7c8:	4f 92       	push	r4
     7ca:	5f 92       	push	r5
     7cc:	6f 92       	push	r6
     7ce:	7f 92       	push	r7
     7d0:	8f 92       	push	r8
     7d2:	9f 92       	push	r9
     7d4:	af 92       	push	r10
     7d6:	bf 92       	push	r11
     7d8:	cf 92       	push	r12
     7da:	df 92       	push	r13
     7dc:	ef 92       	push	r14
     7de:	ff 92       	push	r15
     7e0:	0f 93       	push	r16
     7e2:	1f 93       	push	r17
     7e4:	cf 93       	push	r28
     7e6:	df 93       	push	r29
     7e8:	00 d0       	rcall	.+0      	; 0x7ea <backrow+0x26>
     7ea:	00 d0       	rcall	.+0      	; 0x7ec <backrow+0x28>
     7ec:	cd b7       	in	r28, 0x3d	; 61
     7ee:	de b7       	in	r29, 0x3e	; 62
     7f0:	2c 01       	movw	r4, r24
     7f2:	21 e0       	ldi	r18, 0x01	; 1
     7f4:	42 1a       	sub	r4, r18
     7f6:	51 08       	sbc	r5, r1
     7f8:	0a f4       	brpl	.+2      	; 0x7fc <backrow+0x38>
     7fa:	7e c0       	rjmp	.+252    	; 0x8f8 <backrow+0x134>
     7fc:	1a 01       	movw	r2, r20
     7fe:	3b 01       	movw	r6, r22
     800:	9c 01       	movw	r18, r24
     802:	22 0f       	add	r18, r18
     804:	33 1f       	adc	r19, r19
     806:	22 0f       	add	r18, r18
     808:	33 1f       	adc	r19, r19
     80a:	42 0f       	add	r20, r18
     80c:	53 1f       	adc	r21, r19
     80e:	5a 83       	std	Y+2, r21	; 0x02
     810:	49 83       	std	Y+1, r20	; 0x01
     812:	7c 01       	movw	r14, r24
     814:	ee 0c       	add	r14, r14
     816:	ff 1c       	adc	r15, r15
     818:	e8 0e       	add	r14, r24
     81a:	f9 1e       	adc	r15, r25
     81c:	ee 0c       	add	r14, r14
     81e:	ff 1c       	adc	r15, r15
     820:	ee 0c       	add	r14, r14
     822:	ff 1c       	adc	r15, r15
     824:	5c e0       	ldi	r21, 0x0C	; 12
     826:	e5 1a       	sub	r14, r21
     828:	f1 08       	sbc	r15, r1
     82a:	e6 0e       	add	r14, r22
     82c:	f7 1e       	adc	r15, r23
     82e:	9c 01       	movw	r18, r24
     830:	22 50       	subi	r18, 0x02	; 2
     832:	31 09       	sbc	r19, r1
     834:	22 0f       	add	r18, r18
     836:	33 1f       	adc	r19, r19
     838:	81 50       	subi	r24, 0x01	; 1
     83a:	90 4c       	sbci	r25, 0xC0	; 192
     83c:	82 0f       	add	r24, r18
     83e:	93 1f       	adc	r25, r19
     840:	88 0f       	add	r24, r24
     842:	99 1f       	adc	r25, r25
     844:	88 0f       	add	r24, r24
     846:	99 1f       	adc	r25, r25
     848:	04 96       	adiw	r24, 0x04	; 4
     84a:	68 0e       	add	r6, r24
     84c:	79 1e       	adc	r7, r25
     84e:	89 81       	ldd	r24, Y+1	; 0x01
     850:	9a 81       	ldd	r25, Y+2	; 0x02
     852:	9c 83       	std	Y+4, r25	; 0x04
     854:	8b 83       	std	Y+3, r24	; 0x03
     856:	42 01       	movw	r8, r4
     858:	2d c0       	rjmp	.+90     	; 0x8b4 <backrow+0xf0>
     85a:	09 81       	ldd	r16, Y+1	; 0x01
     85c:	1a 81       	ldd	r17, Y+2	; 0x02
     85e:	53 01       	movw	r10, r6
     860:	94 e0       	ldi	r25, 0x04	; 4
     862:	c9 1a       	sub	r12, r25
     864:	d1 08       	sbc	r13, r1
     866:	f8 01       	movw	r30, r16
     868:	52 91       	ld	r21, -Z
     86a:	42 91       	ld	r20, -Z
     86c:	32 91       	ld	r19, -Z
     86e:	22 91       	ld	r18, -Z
     870:	8f 01       	movw	r16, r30
     872:	f5 01       	movw	r30, r10
     874:	92 91       	ld	r25, -Z
     876:	82 91       	ld	r24, -Z
     878:	72 91       	ld	r23, -Z
     87a:	62 91       	ld	r22, -Z
     87c:	5f 01       	movw	r10, r30
     87e:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__mulsf3>
     882:	9b 01       	movw	r18, r22
     884:	ac 01       	movw	r20, r24
     886:	f6 01       	movw	r30, r12
     888:	60 81       	ld	r22, Z
     88a:	71 81       	ldd	r23, Z+1	; 0x01
     88c:	82 81       	ldd	r24, Z+2	; 0x02
     88e:	93 81       	ldd	r25, Z+3	; 0x03
     890:	0e 94 33 0c 	call	0x1866	; 0x1866 <__subsf3>
     894:	f6 01       	movw	r30, r12
     896:	60 83       	st	Z, r22
     898:	71 83       	std	Z+1, r23	; 0x01
     89a:	82 83       	std	Z+2, r24	; 0x02
     89c:	93 83       	std	Z+3, r25	; 0x03
     89e:	4b 81       	ldd	r20, Y+3	; 0x03
     8a0:	5c 81       	ldd	r21, Y+4	; 0x04
     8a2:	04 17       	cp	r16, r20
     8a4:	15 07       	cpc	r17, r21
     8a6:	f9 f6       	brne	.-66     	; 0x866 <backrow+0xa2>
     8a8:	5c e0       	ldi	r21, 0x0C	; 12
     8aa:	e5 1a       	sub	r14, r21
     8ac:	f1 08       	sbc	r15, r1
     8ae:	88 e0       	ldi	r24, 0x08	; 8
     8b0:	68 1a       	sub	r6, r24
     8b2:	71 08       	sbc	r7, r1
     8b4:	eb 81       	ldd	r30, Y+3	; 0x03
     8b6:	fc 81       	ldd	r31, Y+4	; 0x04
     8b8:	34 97       	sbiw	r30, 0x04	; 4
     8ba:	fc 83       	std	Y+4, r31	; 0x04
     8bc:	eb 83       	std	Y+3, r30	; 0x03
     8be:	6f 01       	movw	r12, r30
     8c0:	f7 01       	movw	r30, r14
     8c2:	20 81       	ld	r18, Z
     8c4:	31 81       	ldd	r19, Z+1	; 0x01
     8c6:	42 81       	ldd	r20, Z+2	; 0x02
     8c8:	53 81       	ldd	r21, Z+3	; 0x03
     8ca:	f6 01       	movw	r30, r12
     8cc:	60 81       	ld	r22, Z
     8ce:	71 81       	ldd	r23, Z+1	; 0x01
     8d0:	82 81       	ldd	r24, Z+2	; 0x02
     8d2:	93 81       	ldd	r25, Z+3	; 0x03
     8d4:	0e 94 a5 0c 	call	0x194a	; 0x194a <__divsf3>
     8d8:	f6 01       	movw	r30, r12
     8da:	60 83       	st	Z, r22
     8dc:	71 83       	std	Z+1, r23	; 0x01
     8de:	82 83       	std	Z+2, r24	; 0x02
     8e0:	93 83       	std	Z+3, r25	; 0x03
     8e2:	f1 e0       	ldi	r31, 0x01	; 1
     8e4:	8f 1a       	sub	r8, r31
     8e6:	91 08       	sbc	r9, r1
     8e8:	c2 14       	cp	r12, r2
     8ea:	d3 04       	cpc	r13, r3
     8ec:	29 f0       	breq	.+10     	; 0x8f8 <backrow+0x134>
     8ee:	84 14       	cp	r8, r4
     8f0:	95 04       	cpc	r9, r5
     8f2:	0c f4       	brge	.+2      	; 0x8f6 <backrow+0x132>
     8f4:	b2 cf       	rjmp	.-156    	; 0x85a <backrow+0x96>
     8f6:	d8 cf       	rjmp	.-80     	; 0x8a8 <backrow+0xe4>
     8f8:	80 e0       	ldi	r24, 0x00	; 0
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	0f 90       	pop	r0
     8fe:	0f 90       	pop	r0
     900:	0f 90       	pop	r0
     902:	0f 90       	pop	r0
     904:	df 91       	pop	r29
     906:	cf 91       	pop	r28
     908:	1f 91       	pop	r17
     90a:	0f 91       	pop	r16
     90c:	ff 90       	pop	r15
     90e:	ef 90       	pop	r14
     910:	df 90       	pop	r13
     912:	cf 90       	pop	r12
     914:	bf 90       	pop	r11
     916:	af 90       	pop	r10
     918:	9f 90       	pop	r9
     91a:	8f 90       	pop	r8
     91c:	7f 90       	pop	r7
     91e:	6f 90       	pop	r6
     920:	5f 90       	pop	r5
     922:	4f 90       	pop	r4
     924:	3f 90       	pop	r3
     926:	2f 90       	pop	r2
     928:	08 95       	ret

0000092a <permutation>:
     92a:	cf 92       	push	r12
     92c:	df 92       	push	r13
     92e:	ef 92       	push	r14
     930:	ff 92       	push	r15
     932:	0f 93       	push	r16
     934:	1f 93       	push	r17
     936:	cf 93       	push	r28
     938:	df 93       	push	r29
     93a:	23 2b       	or	r18, r19
     93c:	31 f5       	brne	.+76     	; 0x98a <permutation+0x60>
     93e:	18 16       	cp	r1, r24
     940:	19 06       	cpc	r1, r25
     942:	0c f0       	brlt	.+2      	; 0x946 <permutation+0x1c>
     944:	4f c0       	rjmp	.+158    	; 0x9e4 <permutation+0xba>
     946:	da 01       	movw	r26, r20
     948:	eb 01       	movw	r28, r22
     94a:	88 0f       	add	r24, r24
     94c:	99 1f       	adc	r25, r25
     94e:	48 0f       	add	r20, r24
     950:	59 1f       	adc	r21, r25
     952:	ed 91       	ld	r30, X+
     954:	fd 91       	ld	r31, X+
     956:	ee 0f       	add	r30, r30
     958:	ff 1f       	adc	r31, r31
     95a:	ee 0f       	add	r30, r30
     95c:	ff 1f       	adc	r31, r31
     95e:	e6 0f       	add	r30, r22
     960:	f7 1f       	adc	r31, r23
     962:	00 81       	ld	r16, Z
     964:	11 81       	ldd	r17, Z+1	; 0x01
     966:	22 81       	ldd	r18, Z+2	; 0x02
     968:	33 81       	ldd	r19, Z+3	; 0x03
     96a:	c8 80       	ld	r12, Y
     96c:	d9 80       	ldd	r13, Y+1	; 0x01
     96e:	ea 80       	ldd	r14, Y+2	; 0x02
     970:	fb 80       	ldd	r15, Y+3	; 0x03
     972:	c0 82       	st	Z, r12
     974:	d1 82       	std	Z+1, r13	; 0x01
     976:	e2 82       	std	Z+2, r14	; 0x02
     978:	f3 82       	std	Z+3, r15	; 0x03
     97a:	09 93       	st	Y+, r16
     97c:	19 93       	st	Y+, r17
     97e:	29 93       	st	Y+, r18
     980:	39 93       	st	Y+, r19
     982:	a4 17       	cp	r26, r20
     984:	b5 07       	cpc	r27, r21
     986:	29 f7       	brne	.-54     	; 0x952 <permutation+0x28>
     988:	2d c0       	rjmp	.+90     	; 0x9e4 <permutation+0xba>
     98a:	9c 01       	movw	r18, r24
     98c:	21 50       	subi	r18, 0x01	; 1
     98e:	31 09       	sbc	r19, r1
     990:	4a f1       	brmi	.+82     	; 0x9e4 <permutation+0xba>
     992:	ec 01       	movw	r28, r24
     994:	cc 0f       	add	r28, r28
     996:	dd 1f       	adc	r29, r29
     998:	c4 0f       	add	r28, r20
     99a:	d5 1f       	adc	r29, r21
     99c:	88 0f       	add	r24, r24
     99e:	99 1f       	adc	r25, r25
     9a0:	88 0f       	add	r24, r24
     9a2:	99 1f       	adc	r25, r25
     9a4:	db 01       	movw	r26, r22
     9a6:	a8 0f       	add	r26, r24
     9a8:	b9 1f       	adc	r27, r25
     9aa:	cb 01       	movw	r24, r22
     9ac:	fa 91       	ld	r31, -Y
     9ae:	ea 91       	ld	r30, -Y
     9b0:	ee 0f       	add	r30, r30
     9b2:	ff 1f       	adc	r31, r31
     9b4:	ee 0f       	add	r30, r30
     9b6:	ff 1f       	adc	r31, r31
     9b8:	e6 0f       	add	r30, r22
     9ba:	f7 1f       	adc	r31, r23
     9bc:	00 81       	ld	r16, Z
     9be:	11 81       	ldd	r17, Z+1	; 0x01
     9c0:	22 81       	ldd	r18, Z+2	; 0x02
     9c2:	33 81       	ldd	r19, Z+3	; 0x03
     9c4:	fe 90       	ld	r15, -X
     9c6:	ee 90       	ld	r14, -X
     9c8:	de 90       	ld	r13, -X
     9ca:	ce 90       	ld	r12, -X
     9cc:	c0 82       	st	Z, r12
     9ce:	d1 82       	std	Z+1, r13	; 0x01
     9d0:	e2 82       	std	Z+2, r14	; 0x02
     9d2:	f3 82       	std	Z+3, r15	; 0x03
     9d4:	0d 93       	st	X+, r16
     9d6:	1d 93       	st	X+, r17
     9d8:	2d 93       	st	X+, r18
     9da:	3c 93       	st	X, r19
     9dc:	13 97       	sbiw	r26, 0x03	; 3
     9de:	a8 17       	cp	r26, r24
     9e0:	b9 07       	cpc	r27, r25
     9e2:	21 f7       	brne	.-56     	; 0x9ac <permutation+0x82>
     9e4:	80 e0       	ldi	r24, 0x00	; 0
     9e6:	90 e0       	ldi	r25, 0x00	; 0
     9e8:	df 91       	pop	r29
     9ea:	cf 91       	pop	r28
     9ec:	1f 91       	pop	r17
     9ee:	0f 91       	pop	r16
     9f0:	ff 90       	pop	r15
     9f2:	ef 90       	pop	r14
     9f4:	df 90       	pop	r13
     9f6:	cf 90       	pop	r12
     9f8:	08 95       	ret

000009fa <solveLeastSquare>:
     9fa:	2f 92       	push	r2
     9fc:	3f 92       	push	r3
     9fe:	4f 92       	push	r4
     a00:	5f 92       	push	r5
     a02:	6f 92       	push	r6
     a04:	7f 92       	push	r7
     a06:	8f 92       	push	r8
     a08:	9f 92       	push	r9
     a0a:	af 92       	push	r10
     a0c:	bf 92       	push	r11
     a0e:	cf 92       	push	r12
     a10:	df 92       	push	r13
     a12:	ef 92       	push	r14
     a14:	ff 92       	push	r15
     a16:	0f 93       	push	r16
     a18:	1f 93       	push	r17
     a1a:	cf 93       	push	r28
     a1c:	df 93       	push	r29
     a1e:	cd b7       	in	r28, 0x3d	; 61
     a20:	de b7       	in	r29, 0x3e	; 62
     a22:	60 97       	sbiw	r28, 0x10	; 16
     a24:	0f b6       	in	r0, 0x3f	; 63
     a26:	f8 94       	cli
     a28:	de bf       	out	0x3e, r29	; 62
     a2a:	0f be       	out	0x3f, r0	; 63
     a2c:	cd bf       	out	0x3d, r28	; 61
     a2e:	9c 83       	std	Y+4, r25	; 0x04
     a30:	8b 83       	std	Y+3, r24	; 0x03
     a32:	4f 83       	std	Y+7, r20	; 0x07
     a34:	58 87       	std	Y+8, r21	; 0x08
     a36:	3e 83       	std	Y+6, r19	; 0x06
     a38:	2d 83       	std	Y+5, r18	; 0x05
     a3a:	1c 87       	std	Y+12, r17	; 0x0c
     a3c:	0b 87       	std	Y+11, r16	; 0x0b
     a3e:	de 86       	std	Y+14, r13	; 0x0e
     a40:	cd 86       	std	Y+13, r12	; 0x0d
     a42:	ba 82       	std	Y+2, r11	; 0x02
     a44:	a9 82       	std	Y+1, r10	; 0x01
     a46:	1a 14       	cp	r1, r10
     a48:	1b 04       	cpc	r1, r11
     a4a:	0c f0       	brlt	.+2      	; 0xa4e <solveLeastSquare+0x54>
     a4c:	99 c0       	rjmp	.+306    	; 0xb80 <solveLeastSquare+0x186>
     a4e:	49 87       	std	Y+9, r20	; 0x09
     a50:	5a 87       	std	Y+10, r21	; 0x0a
     a52:	6d 80       	ldd	r6, Y+5	; 0x05
     a54:	7e 80       	ldd	r7, Y+6	; 0x06
     a56:	2e 2c       	mov	r2, r14
     a58:	3f 2c       	mov	r3, r15
     a5a:	7c 01       	movw	r14, r24
     a5c:	ee 0c       	add	r14, r14
     a5e:	ff 1c       	adc	r15, r15
     a60:	ee 0c       	add	r14, r14
     a62:	ff 1c       	adc	r15, r15
     a64:	e6 0c       	add	r14, r6
     a66:	f7 1c       	adc	r15, r7
     a68:	44 2e       	mov	r4, r20
     a6a:	55 2e       	mov	r5, r21
     a6c:	81 2c       	mov	r8, r1
     a6e:	91 2c       	mov	r9, r1
     a70:	5c c0       	rjmp	.+184    	; 0xb2a <solveLeastSquare+0x130>
     a72:	53 01       	movw	r10, r6
     a74:	58 8a       	std	Y+16, r5	; 0x10
     a76:	4f 86       	std	Y+15, r4	; 0x0f
     a78:	c1 2c       	mov	r12, r1
     a7a:	d1 2c       	mov	r13, r1
     a7c:	00 e0       	ldi	r16, 0x00	; 0
     a7e:	10 e0       	ldi	r17, 0x00	; 0
     a80:	d5 01       	movw	r26, r10
     a82:	6d 91       	ld	r22, X+
     a84:	7d 91       	ld	r23, X+
     a86:	8d 91       	ld	r24, X+
     a88:	9d 91       	ld	r25, X+
     a8a:	5d 01       	movw	r10, r26
     a8c:	ef 85       	ldd	r30, Y+15	; 0x0f
     a8e:	f8 89       	ldd	r31, Y+16	; 0x10
     a90:	20 81       	ld	r18, Z
     a92:	31 81       	ldd	r19, Z+1	; 0x01
     a94:	42 81       	ldd	r20, Z+2	; 0x02
     a96:	53 81       	ldd	r21, Z+3	; 0x03
     a98:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__mulsf3>
     a9c:	9b 01       	movw	r18, r22
     a9e:	ac 01       	movw	r20, r24
     aa0:	6c 2d       	mov	r22, r12
     aa2:	7d 2d       	mov	r23, r13
     aa4:	80 2f       	mov	r24, r16
     aa6:	91 2f       	mov	r25, r17
     aa8:	0e 94 34 0c 	call	0x1868	; 0x1868 <__addsf3>
     aac:	c6 2e       	mov	r12, r22
     aae:	d7 2e       	mov	r13, r23
     ab0:	08 2f       	mov	r16, r24
     ab2:	19 2f       	mov	r17, r25
     ab4:	2f 85       	ldd	r18, Y+15	; 0x0f
     ab6:	38 89       	ldd	r19, Y+16	; 0x10
     ab8:	28 5f       	subi	r18, 0xF8	; 248
     aba:	3f 4f       	sbci	r19, 0xFF	; 255
     abc:	38 8b       	std	Y+16, r19	; 0x10
     abe:	2f 87       	std	Y+15, r18	; 0x0f
     ac0:	ae 14       	cp	r10, r14
     ac2:	bf 04       	cpc	r11, r15
     ac4:	e9 f6       	brne	.-70     	; 0xa80 <solveLeastSquare+0x86>
     ac6:	85 c0       	rjmp	.+266    	; 0xbd2 <solveLeastSquare+0x1d8>
     ac8:	d8 01       	movw	r26, r16
     aca:	2d 91       	ld	r18, X+
     acc:	3d 91       	ld	r19, X+
     ace:	4d 91       	ld	r20, X+
     ad0:	5c 91       	ld	r21, X
     ad2:	c6 01       	movw	r24, r12
     ad4:	b5 01       	movw	r22, r10
     ad6:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__mulsf3>
     ada:	9b 01       	movw	r18, r22
     adc:	ac 01       	movw	r20, r24
     ade:	ef 85       	ldd	r30, Y+15	; 0x0f
     ae0:	f8 89       	ldd	r31, Y+16	; 0x10
     ae2:	60 81       	ld	r22, Z
     ae4:	71 81       	ldd	r23, Z+1	; 0x01
     ae6:	82 81       	ldd	r24, Z+2	; 0x02
     ae8:	93 81       	ldd	r25, Z+3	; 0x03
     aea:	0e 94 33 0c 	call	0x1866	; 0x1866 <__subsf3>
     aee:	af 85       	ldd	r26, Y+15	; 0x0f
     af0:	b8 89       	ldd	r27, Y+16	; 0x10
     af2:	6d 93       	st	X+, r22
     af4:	7d 93       	st	X+, r23
     af6:	8d 93       	st	X+, r24
     af8:	9d 93       	st	X+, r25
     afa:	b8 8b       	std	Y+16, r27	; 0x10
     afc:	af 87       	std	Y+15, r26	; 0x0f
     afe:	08 5f       	subi	r16, 0xF8	; 248
     b00:	1f 4f       	sbci	r17, 0xFF	; 255
     b02:	ae 15       	cp	r26, r14
     b04:	bf 05       	cpc	r27, r15
     b06:	01 f7       	brne	.-64     	; 0xac8 <solveLeastSquare+0xce>
     b08:	bf ef       	ldi	r27, 0xFF	; 255
     b0a:	8b 1a       	sub	r8, r27
     b0c:	9b 0a       	sbc	r9, r27
     b0e:	ec e0       	ldi	r30, 0x0C	; 12
     b10:	4e 0e       	add	r4, r30
     b12:	51 1c       	adc	r5, r1
     b14:	f4 e0       	ldi	r31, 0x04	; 4
     b16:	6f 0e       	add	r6, r31
     b18:	71 1c       	adc	r7, r1
     b1a:	24 e0       	ldi	r18, 0x04	; 4
     b1c:	22 0e       	add	r2, r18
     b1e:	31 1c       	adc	r3, r1
     b20:	89 81       	ldd	r24, Y+1	; 0x01
     b22:	9a 81       	ldd	r25, Y+2	; 0x02
     b24:	88 15       	cp	r24, r8
     b26:	99 05       	cpc	r25, r9
     b28:	39 f0       	breq	.+14     	; 0xb38 <solveLeastSquare+0x13e>
     b2a:	ab 81       	ldd	r26, Y+3	; 0x03
     b2c:	bc 81       	ldd	r27, Y+4	; 0x04
     b2e:	8a 16       	cp	r8, r26
     b30:	9b 06       	cpc	r9, r27
     b32:	0c f4       	brge	.+2      	; 0xb36 <solveLeastSquare+0x13c>
     b34:	9e cf       	rjmp	.-196    	; 0xa72 <solveLeastSquare+0x78>
     b36:	e8 cf       	rjmp	.-48     	; 0xb08 <solveLeastSquare+0x10e>
     b38:	eb 85       	ldd	r30, Y+11	; 0x0b
     b3a:	fc 85       	ldd	r31, Y+12	; 0x0c
     b3c:	89 81       	ldd	r24, Y+1	; 0x01
     b3e:	9a 81       	ldd	r25, Y+2	; 0x02
     b40:	88 0f       	add	r24, r24
     b42:	99 1f       	adc	r25, r25
     b44:	88 0f       	add	r24, r24
     b46:	99 1f       	adc	r25, r25
     b48:	8e 0f       	add	r24, r30
     b4a:	9f 1f       	adc	r25, r31
     b4c:	a9 85       	ldd	r26, Y+9	; 0x09
     b4e:	ba 85       	ldd	r27, Y+10	; 0x0a
     b50:	40 81       	ld	r20, Z
     b52:	51 81       	ldd	r21, Z+1	; 0x01
     b54:	62 81       	ldd	r22, Z+2	; 0x02
     b56:	73 81       	ldd	r23, Z+3	; 0x03
     b58:	70 58       	subi	r23, 0x80	; 128
     b5a:	0d 91       	ld	r16, X+
     b5c:	1d 91       	ld	r17, X+
     b5e:	2d 91       	ld	r18, X+
     b60:	3c 91       	ld	r19, X
     b62:	13 97       	sbiw	r26, 0x03	; 3
     b64:	01 93       	st	Z+, r16
     b66:	11 93       	st	Z+, r17
     b68:	21 93       	st	Z+, r18
     b6a:	31 93       	st	Z+, r19
     b6c:	4d 93       	st	X+, r20
     b6e:	5d 93       	st	X+, r21
     b70:	6d 93       	st	X+, r22
     b72:	7c 93       	st	X, r23
     b74:	13 97       	sbiw	r26, 0x03	; 3
     b76:	1c 96       	adiw	r26, 0x0c	; 12
     b78:	e8 17       	cp	r30, r24
     b7a:	f9 07       	cpc	r31, r25
     b7c:	49 f7       	brne	.-46     	; 0xb50 <solveLeastSquare+0x156>
     b7e:	36 c0       	rjmp	.+108    	; 0xbec <solveLeastSquare+0x1f2>
     b80:	4d 81       	ldd	r20, Y+5	; 0x05
     b82:	5e 81       	ldd	r21, Y+6	; 0x06
     b84:	6f 81       	ldd	r22, Y+7	; 0x07
     b86:	78 85       	ldd	r23, Y+8	; 0x08
     b88:	89 81       	ldd	r24, Y+1	; 0x01
     b8a:	9a 81       	ldd	r25, Y+2	; 0x02
     b8c:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <backrow>
     b90:	3f c0       	rjmp	.+126    	; 0xc10 <solveLeastSquare+0x216>
     b92:	db 01       	movw	r26, r22
     b94:	cd 90       	ld	r12, X+
     b96:	dd 90       	ld	r13, X+
     b98:	ed 90       	ld	r14, X+
     b9a:	fc 90       	ld	r15, X
     b9c:	80 81       	ld	r24, Z
     b9e:	91 81       	ldd	r25, Z+1	; 0x01
     ba0:	a2 81       	ldd	r26, Z+2	; 0x02
     ba2:	b3 81       	ldd	r27, Z+3	; 0x03
     ba4:	4c 01       	movw	r8, r24
     ba6:	5d 01       	movw	r10, r26
     ba8:	b7 fa       	bst	r11, 7
     baa:	b0 94       	com	r11
     bac:	b7 f8       	bld	r11, 7
     bae:	b0 94       	com	r11
     bb0:	db 01       	movw	r26, r22
     bb2:	8d 92       	st	X+, r8
     bb4:	9d 92       	st	X+, r9
     bb6:	ad 92       	st	X+, r10
     bb8:	bd 92       	st	X+, r11
     bba:	bd 01       	movw	r22, r26
     bbc:	c0 82       	st	Z, r12
     bbe:	d1 82       	std	Z+1, r13	; 0x01
     bc0:	e2 82       	std	Z+2, r14	; 0x02
     bc2:	f3 82       	std	Z+3, r15	; 0x03
     bc4:	2f 5f       	subi	r18, 0xFF	; 255
     bc6:	3f 4f       	sbci	r19, 0xFF	; 255
     bc8:	3c 96       	adiw	r30, 0x0c	; 12
     bca:	24 17       	cp	r18, r20
     bcc:	35 07       	cpc	r19, r21
     bce:	0c f3       	brlt	.-62     	; 0xb92 <solveLeastSquare+0x198>
     bd0:	1f c0       	rjmp	.+62     	; 0xc10 <solveLeastSquare+0x216>
     bd2:	f1 01       	movw	r30, r2
     bd4:	20 81       	ld	r18, Z
     bd6:	31 81       	ldd	r19, Z+1	; 0x01
     bd8:	42 81       	ldd	r20, Z+2	; 0x02
     bda:	53 81       	ldd	r21, Z+3	; 0x03
     bdc:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__mulsf3>
     be0:	5b 01       	movw	r10, r22
     be2:	6c 01       	movw	r12, r24
     be4:	78 8a       	std	Y+16, r7	; 0x10
     be6:	6f 86       	std	Y+15, r6	; 0x0f
     be8:	82 01       	movw	r16, r4
     bea:	6e cf       	rjmp	.-292    	; 0xac8 <solveLeastSquare+0xce>
     bec:	4d 81       	ldd	r20, Y+5	; 0x05
     bee:	5e 81       	ldd	r21, Y+6	; 0x06
     bf0:	6f 81       	ldd	r22, Y+7	; 0x07
     bf2:	78 85       	ldd	r23, Y+8	; 0x08
     bf4:	89 81       	ldd	r24, Y+1	; 0x01
     bf6:	9a 81       	ldd	r25, Y+2	; 0x02
     bf8:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <backrow>
     bfc:	ef 81       	ldd	r30, Y+7	; 0x07
     bfe:	f8 85       	ldd	r31, Y+8	; 0x08
     c00:	8b 85       	ldd	r24, Y+11	; 0x0b
     c02:	9c 85       	ldd	r25, Y+12	; 0x0c
     c04:	20 e0       	ldi	r18, 0x00	; 0
     c06:	30 e0       	ldi	r19, 0x00	; 0
     c08:	bc 01       	movw	r22, r24
     c0a:	49 81       	ldd	r20, Y+1	; 0x01
     c0c:	5a 81       	ldd	r21, Y+2	; 0x02
     c0e:	c1 cf       	rjmp	.-126    	; 0xb92 <solveLeastSquare+0x198>
     c10:	21 e0       	ldi	r18, 0x01	; 1
     c12:	30 e0       	ldi	r19, 0x00	; 0
     c14:	4d 85       	ldd	r20, Y+13	; 0x0d
     c16:	5e 85       	ldd	r21, Y+14	; 0x0e
     c18:	6d 81       	ldd	r22, Y+5	; 0x05
     c1a:	7e 81       	ldd	r23, Y+6	; 0x06
     c1c:	89 81       	ldd	r24, Y+1	; 0x01
     c1e:	9a 81       	ldd	r25, Y+2	; 0x02
     c20:	0e 94 95 04 	call	0x92a	; 0x92a <permutation>
     c24:	80 e0       	ldi	r24, 0x00	; 0
     c26:	90 e0       	ldi	r25, 0x00	; 0
     c28:	60 96       	adiw	r28, 0x10	; 16
     c2a:	0f b6       	in	r0, 0x3f	; 63
     c2c:	f8 94       	cli
     c2e:	de bf       	out	0x3e, r29	; 62
     c30:	0f be       	out	0x3f, r0	; 63
     c32:	cd bf       	out	0x3d, r28	; 61
     c34:	df 91       	pop	r29
     c36:	cf 91       	pop	r28
     c38:	1f 91       	pop	r17
     c3a:	0f 91       	pop	r16
     c3c:	ff 90       	pop	r15
     c3e:	ef 90       	pop	r14
     c40:	df 90       	pop	r13
     c42:	cf 90       	pop	r12
     c44:	bf 90       	pop	r11
     c46:	af 90       	pop	r10
     c48:	9f 90       	pop	r9
     c4a:	8f 90       	pop	r8
     c4c:	7f 90       	pop	r7
     c4e:	6f 90       	pop	r6
     c50:	5f 90       	pop	r5
     c52:	4f 90       	pop	r4
     c54:	3f 90       	pop	r3
     c56:	2f 90       	pop	r2
     c58:	08 95       	ret

00000c5a <main>:
#include <util/delay.h>
#include <time.h>

int main(void)
{
	initializeSystem();
     c5a:	0e 94 4a 09 	call	0x1294	; 0x1294 <initializeSystem>
	while (1)
	{
		processBLEMessages();
     c5e:	0e 94 c2 07 	call	0xf84	; 0xf84 <processBLEMessages>
		if (sendADValue) {
     c62:	80 91 47 02 	lds	r24, 0x0247	; 0x800247 <sendADValue>
     c66:	88 23       	and	r24, r24
     c68:	d1 f3       	breq	.-12     	; 0xc5e <main+0x4>
			bleSendADValue();
     c6a:	0e 94 13 08 	call	0x1026	; 0x1026 <bleSendADValue>
     c6e:	f7 cf       	rjmp	.-18     	; 0xc5e <main+0x4>

00000c70 <loadDisplayUnitType>:
     c70:	80 e0       	ldi	r24, 0x00	; 0
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	0e 94 76 0f 	call	0x1eec	; 0x1eec <eeprom_read_byte>
     c78:	82 30       	cpi	r24, 0x02	; 2
     c7a:	18 f4       	brcc	.+6      	; 0xc82 <loadDisplayUnitType+0x12>
     c7c:	80 93 46 02 	sts	0x0246, r24	; 0x800246 <displayUnitType>
     c80:	02 c0       	rjmp	.+4      	; 0xc86 <loadDisplayUnitType+0x16>
     c82:	10 92 46 02 	sts	0x0246, r1	; 0x800246 <displayUnitType>
     c86:	80 91 46 02 	lds	r24, 0x0246	; 0x800246 <displayUnitType>
     c8a:	08 95       	ret

00000c8c <loadDisplayForceUnit>:
     c8c:	81 e0       	ldi	r24, 0x01	; 1
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	0e 94 76 0f 	call	0x1eec	; 0x1eec <eeprom_read_byte>
     c94:	88 30       	cpi	r24, 0x08	; 8
     c96:	18 f4       	brcc	.+6      	; 0xc9e <loadDisplayForceUnit+0x12>
     c98:	80 93 45 02 	sts	0x0245, r24	; 0x800245 <displayForceUnit>
     c9c:	02 c0       	rjmp	.+4      	; 0xca2 <loadDisplayForceUnit+0x16>
     c9e:	10 92 45 02 	sts	0x0245, r1	; 0x800245 <displayForceUnit>
     ca2:	80 91 45 02 	lds	r24, 0x0245	; 0x800245 <displayForceUnit>
     ca6:	08 95       	ret

00000ca8 <loadSample>:
     ca8:	85 e5       	ldi	r24, 0x55	; 85
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	0e 94 76 0f 	call	0x1eec	; 0x1eec <eeprom_read_byte>
     cb0:	86 30       	cpi	r24, 0x06	; 6
     cb2:	18 f4       	brcc	.+6      	; 0xcba <loadSample+0x12>
     cb4:	80 93 42 02 	sts	0x0242, r24	; 0x800242 <sample>
     cb8:	02 c0       	rjmp	.+4      	; 0xcbe <loadSample+0x16>
     cba:	10 92 42 02 	sts	0x0242, r1	; 0x800242 <sample>
     cbe:	80 91 42 02 	lds	r24, 0x0242	; 0x800242 <sample>
     cc2:	08 95       	ret

00000cc4 <loadSampleValues>:
     cc4:	cf 92       	push	r12
     cc6:	df 92       	push	r13
     cc8:	ef 92       	push	r14
     cca:	ff 92       	push	r15
     ccc:	0f 93       	push	r16
     cce:	1f 93       	push	r17
     cd0:	cf 93       	push	r28
     cd2:	df 93       	push	r29
     cd4:	06 e3       	ldi	r16, 0x36	; 54
     cd6:	12 e0       	ldi	r17, 0x02	; 2
     cd8:	c6 e5       	ldi	r28, 0x56	; 86
     cda:	d0 e0       	ldi	r29, 0x00	; 0
     cdc:	0f 2e       	mov	r0, r31
     cde:	c1 2c       	mov	r12, r1
     ce0:	d1 2c       	mov	r13, r1
     ce2:	f0 e8       	ldi	r31, 0x80	; 128
     ce4:	ef 2e       	mov	r14, r31
     ce6:	ff e3       	ldi	r31, 0x3F	; 63
     ce8:	ff 2e       	mov	r15, r31
     cea:	f0 2d       	mov	r31, r0
     cec:	ce 01       	movw	r24, r28
     cee:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <eeprom_read_dword>
     cf2:	f8 01       	movw	r30, r16
     cf4:	60 83       	st	Z, r22
     cf6:	71 83       	std	Z+1, r23	; 0x01
     cf8:	82 83       	std	Z+2, r24	; 0x02
     cfa:	93 83       	std	Z+3, r25	; 0x03
     cfc:	9b 01       	movw	r18, r22
     cfe:	ac 01       	movw	r20, r24
     d00:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unordsf2>
     d04:	88 23       	and	r24, r24
     d06:	29 f0       	breq	.+10     	; 0xd12 <loadSampleValues+0x4e>
     d08:	f8 01       	movw	r30, r16
     d0a:	c0 82       	st	Z, r12
     d0c:	d1 82       	std	Z+1, r13	; 0x01
     d0e:	e2 82       	std	Z+2, r14	; 0x02
     d10:	f3 82       	std	Z+3, r15	; 0x03
     d12:	24 96       	adiw	r28, 0x04	; 4
     d14:	0c 5f       	subi	r16, 0xFC	; 252
     d16:	1f 4f       	sbci	r17, 0xFF	; 255
     d18:	c2 36       	cpi	r28, 0x62	; 98
     d1a:	d1 05       	cpc	r29, r1
     d1c:	39 f7       	brne	.-50     	; 0xcec <loadSampleValues+0x28>
     d1e:	82 e6       	ldi	r24, 0x62	; 98
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <eeprom_read_dword>
     d26:	6b 01       	movw	r12, r22
     d28:	7c 01       	movw	r14, r24
     d2a:	9b 01       	movw	r18, r22
     d2c:	ac 01       	movw	r20, r24
     d2e:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unordsf2>
     d32:	81 11       	cpse	r24, r1
     d34:	13 c0       	rjmp	.+38     	; 0xd5c <loadSampleValues+0x98>
     d36:	2c ea       	ldi	r18, 0xAC	; 172
     d38:	35 ec       	ldi	r19, 0xC5	; 197
     d3a:	47 e2       	ldi	r20, 0x27	; 39
     d3c:	57 e3       	ldi	r21, 0x37	; 55
     d3e:	c7 01       	movw	r24, r14
     d40:	b6 01       	movw	r22, r12
     d42:	0e 94 a0 0c 	call	0x1940	; 0x1940 <__cmpsf2>
     d46:	88 23       	and	r24, r24
     d48:	4c f0       	brlt	.+18     	; 0xd5c <loadSampleValues+0x98>
     d4a:	c0 92 09 01 	sts	0x0109, r12	; 0x800109 <sampleArea>
     d4e:	d0 92 0a 01 	sts	0x010A, r13	; 0x80010a <sampleArea+0x1>
     d52:	e0 92 0b 01 	sts	0x010B, r14	; 0x80010b <sampleArea+0x2>
     d56:	f0 92 0c 01 	sts	0x010C, r15	; 0x80010c <sampleArea+0x3>
     d5a:	0c c0       	rjmp	.+24     	; 0xd74 <loadSampleValues+0xb0>
     d5c:	80 e0       	ldi	r24, 0x00	; 0
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	a0 e8       	ldi	r26, 0x80	; 128
     d62:	bf e3       	ldi	r27, 0x3F	; 63
     d64:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <sampleArea>
     d68:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <sampleArea+0x1>
     d6c:	a0 93 0b 01 	sts	0x010B, r26	; 0x80010b <sampleArea+0x2>
     d70:	b0 93 0c 01 	sts	0x010C, r27	; 0x80010c <sampleArea+0x3>
     d74:	df 91       	pop	r29
     d76:	cf 91       	pop	r28
     d78:	1f 91       	pop	r17
     d7a:	0f 91       	pop	r16
     d7c:	ff 90       	pop	r15
     d7e:	ef 90       	pop	r14
     d80:	df 90       	pop	r13
     d82:	cf 90       	pop	r12
     d84:	08 95       	ret

00000d86 <loadMachineCapacity>:
     d86:	86 e6       	ldi	r24, 0x66	; 102
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <eeprom_read_dword>
     d8e:	60 93 05 01 	sts	0x0105, r22	; 0x800105 <machineCapacity>
     d92:	70 93 06 01 	sts	0x0106, r23	; 0x800106 <machineCapacity+0x1>
     d96:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <machineCapacity+0x2>
     d9a:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <machineCapacity+0x3>
     d9e:	9b 01       	movw	r18, r22
     da0:	ac 01       	movw	r20, r24
     da2:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__unordsf2>
     da6:	88 23       	and	r24, r24
     da8:	61 f0       	breq	.+24     	; 0xdc2 <loadMachineCapacity+0x3c>
     daa:	80 e0       	ldi	r24, 0x00	; 0
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	aa e7       	ldi	r26, 0x7A	; 122
     db0:	b4 e4       	ldi	r27, 0x44	; 68
     db2:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <machineCapacity>
     db6:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <machineCapacity+0x1>
     dba:	a0 93 07 01 	sts	0x0107, r26	; 0x800107 <machineCapacity+0x2>
     dbe:	b0 93 08 01 	sts	0x0108, r27	; 0x800108 <machineCapacity+0x3>
     dc2:	0e 94 21 09 	call	0x1242	; 0x1242 <calculateOverflowThresholdForce>
     dc6:	08 95       	ret

00000dc8 <loadOverflowProtectionDetails>:
     dc8:	8a e6       	ldi	r24, 0x6A	; 106
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	0e 94 76 0f 	call	0x1eec	; 0x1eec <eeprom_read_byte>
     dd0:	82 30       	cpi	r24, 0x02	; 2
     dd2:	18 f4       	brcc	.+6      	; 0xdda <loadOverflowProtectionDetails+0x12>
     dd4:	80 93 35 02 	sts	0x0235, r24	; 0x800235 <overflowProtectionMode>
     dd8:	02 c0       	rjmp	.+4      	; 0xdde <loadOverflowProtectionDetails+0x16>
     dda:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <overflowProtectionMode>
     dde:	8b e6       	ldi	r24, 0x6B	; 107
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	0e 94 76 0f 	call	0x1eec	; 0x1eec <eeprom_read_byte>
     de6:	85 36       	cpi	r24, 0x65	; 101
     de8:	18 f4       	brcc	.+6      	; 0xdf0 <loadOverflowProtectionDetails+0x28>
     dea:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <overflowProtectionThreshold>
     dee:	03 c0       	rjmp	.+6      	; 0xdf6 <loadOverflowProtectionDetails+0x2e>
     df0:	80 e5       	ldi	r24, 0x50	; 80
     df2:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <overflowProtectionThreshold>
     df6:	0e 94 21 09 	call	0x1242	; 0x1242 <calculateOverflowThresholdForce>
     dfa:	8c e6       	ldi	r24, 0x6C	; 108
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	0e 94 76 0f 	call	0x1eec	; 0x1eec <eeprom_read_byte>
     e02:	82 30       	cpi	r24, 0x02	; 2
     e04:	18 f4       	brcc	.+6      	; 0xe0c <loadOverflowProtectionDetails+0x44>
     e06:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <overflowProtectionEnabled>
     e0a:	08 95       	ret
     e0c:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <overflowProtectionEnabled>
     e10:	08 95       	ret

00000e12 <loadNumCalibratedPoints>:
     e12:	83 e0       	ldi	r24, 0x03	; 3
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	0e 94 76 0f 	call	0x1eec	; 0x1eec <eeprom_read_byte>
     e1a:	8b 30       	cpi	r24, 0x0B	; 11
     e1c:	18 f4       	brcc	.+6      	; 0xe24 <loadNumCalibratedPoints+0x12>
     e1e:	80 93 44 02 	sts	0x0244, r24	; 0x800244 <calibratedPoints>
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <loadNumCalibratedPoints+0x16>
     e24:	10 92 44 02 	sts	0x0244, r1	; 0x800244 <calibratedPoints>
     e28:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <calibratedPoints>
     e2c:	08 95       	ret

00000e2e <loadCalibrationUnit>:
     e2e:	84 e5       	ldi	r24, 0x54	; 84
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	0e 94 76 0f 	call	0x1eec	; 0x1eec <eeprom_read_byte>
     e36:	88 30       	cpi	r24, 0x08	; 8
     e38:	18 f4       	brcc	.+6      	; 0xe40 <loadCalibrationUnit+0x12>
     e3a:	80 93 43 02 	sts	0x0243, r24	; 0x800243 <calibrationUnit>
     e3e:	02 c0       	rjmp	.+4      	; 0xe44 <loadCalibrationUnit+0x16>
     e40:	10 92 43 02 	sts	0x0243, r1	; 0x800243 <calibrationUnit>
     e44:	80 91 43 02 	lds	r24, 0x0243	; 0x800243 <calibrationUnit>
     e48:	08 95       	ret

00000e4a <loadCalibrationPoint>:
     e4a:	cf 92       	push	r12
     e4c:	df 92       	push	r13
     e4e:	ef 92       	push	r14
     e50:	ff 92       	push	r15
     e52:	cf 93       	push	r28
     e54:	df 93       	push	r29
     e56:	98 e0       	ldi	r25, 0x08	; 8
     e58:	89 9f       	mul	r24, r25
     e5a:	e0 01       	movw	r28, r0
     e5c:	11 24       	eor	r1, r1
     e5e:	ce 01       	movw	r24, r28
     e60:	04 96       	adiw	r24, 0x04	; 4
     e62:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <eeprom_read_dword>
     e66:	6b 01       	movw	r12, r22
     e68:	7c 01       	movw	r14, r24
     e6a:	ce 01       	movw	r24, r28
     e6c:	08 96       	adiw	r24, 0x08	; 8
     e6e:	0e 94 7e 0f 	call	0x1efc	; 0x1efc <eeprom_read_dword>
     e72:	cb 58       	subi	r28, 0x8B	; 139
     e74:	dd 4f       	sbci	r29, 0xFD	; 253
     e76:	c8 82       	st	Y, r12
     e78:	d9 82       	std	Y+1, r13	; 0x01
     e7a:	ea 82       	std	Y+2, r14	; 0x02
     e7c:	fb 82       	std	Y+3, r15	; 0x03
     e7e:	6c 83       	std	Y+4, r22	; 0x04
     e80:	7d 83       	std	Y+5, r23	; 0x05
     e82:	8e 83       	std	Y+6, r24	; 0x06
     e84:	9f 83       	std	Y+7, r25	; 0x07
     e86:	df 91       	pop	r29
     e88:	cf 91       	pop	r28
     e8a:	ff 90       	pop	r15
     e8c:	ef 90       	pop	r14
     e8e:	df 90       	pop	r13
     e90:	cf 90       	pop	r12
     e92:	08 95       	ret

00000e94 <displaySetValue>:
     e94:	cf 93       	push	r28
     e96:	df 93       	push	r29
     e98:	eb 01       	movw	r28, r22
     e9a:	0e 94 db 09 	call	0x13b6	; 0x13b6 <serialPrint>
     e9e:	85 e1       	ldi	r24, 0x15	; 21
     ea0:	91 e0       	ldi	r25, 0x01	; 1
     ea2:	0e 94 db 09 	call	0x13b6	; 0x13b6 <serialPrint>
     ea6:	ce 01       	movw	r24, r28
     ea8:	0e 94 db 09 	call	0x13b6	; 0x13b6 <serialPrint>
     eac:	8b e1       	ldi	r24, 0x1B	; 27
     eae:	91 e0       	ldi	r25, 0x01	; 1
     eb0:	0e 94 db 09 	call	0x13b6	; 0x13b6 <serialPrint>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     eb4:	8f ef       	ldi	r24, 0xFF	; 255
     eb6:	9b e6       	ldi	r25, 0x6B	; 107
     eb8:	01 97       	sbiw	r24, 0x01	; 1
     eba:	f1 f7       	brne	.-4      	; 0xeb8 <displaySetValue+0x24>
     ebc:	00 c0       	rjmp	.+0      	; 0xebe <displaySetValue+0x2a>
     ebe:	00 00       	nop
     ec0:	80 e0       	ldi	r24, 0x00	; 0
     ec2:	df 91       	pop	r29
     ec4:	cf 91       	pop	r28
     ec6:	08 95       	ret

00000ec8 <displaySetValueUInt>:
     ec8:	0f 93       	push	r16
     eca:	1f 93       	push	r17
     ecc:	cf 93       	push	r28
     ece:	df 93       	push	r29
     ed0:	cd b7       	in	r28, 0x3d	; 61
     ed2:	de b7       	in	r29, 0x3e	; 62
     ed4:	60 97       	sbiw	r28, 0x10	; 16
     ed6:	0f b6       	in	r0, 0x3f	; 63
     ed8:	f8 94       	cli
     eda:	de bf       	out	0x3e, r29	; 62
     edc:	0f be       	out	0x3f, r0	; 63
     ede:	cd bf       	out	0x3d, r28	; 61
     ee0:	8c 01       	movw	r16, r24
     ee2:	86 2f       	mov	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__utoa_ncheck (unsigned int, char *, unsigned char);
	return __utoa_ncheck (__val, __s, __radix);
     ee4:	4a e0       	ldi	r20, 0x0A	; 10
     ee6:	be 01       	movw	r22, r28
     ee8:	6f 5f       	subi	r22, 0xFF	; 255
     eea:	7f 4f       	sbci	r23, 0xFF	; 255
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	0e 94 4c 0f 	call	0x1e98	; 0x1e98 <__utoa_ncheck>
     ef2:	be 01       	movw	r22, r28
     ef4:	6f 5f       	subi	r22, 0xFF	; 255
     ef6:	7f 4f       	sbci	r23, 0xFF	; 255
     ef8:	c8 01       	movw	r24, r16
     efa:	0e 94 4a 07 	call	0xe94	; 0xe94 <displaySetValue>
     efe:	60 96       	adiw	r28, 0x10	; 16
     f00:	0f b6       	in	r0, 0x3f	; 63
     f02:	f8 94       	cli
     f04:	de bf       	out	0x3e, r29	; 62
     f06:	0f be       	out	0x3f, r0	; 63
     f08:	cd bf       	out	0x3d, r28	; 61
     f0a:	df 91       	pop	r29
     f0c:	cf 91       	pop	r28
     f0e:	1f 91       	pop	r17
     f10:	0f 91       	pop	r16
     f12:	08 95       	ret

00000f14 <__vector_14>:

void afterSetSampleValue() {
	sampleArea = calculateSampleArea(sample, sampleValues[0], sampleValues[1], sampleValues[2]);
	storeSampleValues();
	updateSamplePage();
}
     f14:	1f 92       	push	r1
     f16:	0f 92       	push	r0
     f18:	0f b6       	in	r0, 0x3f	; 63
     f1a:	0f 92       	push	r0
     f1c:	11 24       	eor	r1, r1
     f1e:	8f 93       	push	r24
     f20:	9f 93       	push	r25
     f22:	af 93       	push	r26
     f24:	bf 93       	push	r27
     f26:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <__data_end>
     f2a:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <__data_end+0x1>
     f2e:	a0 91 32 02 	lds	r26, 0x0232	; 0x800232 <__data_end+0x2>
     f32:	b0 91 33 02 	lds	r27, 0x0233	; 0x800233 <__data_end+0x3>
     f36:	01 96       	adiw	r24, 0x01	; 1
     f38:	a1 1d       	adc	r26, r1
     f3a:	b1 1d       	adc	r27, r1
     f3c:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <__data_end>
     f40:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <__data_end+0x1>
     f44:	a0 93 32 02 	sts	0x0232, r26	; 0x800232 <__data_end+0x2>
     f48:	b0 93 33 02 	sts	0x0233, r27	; 0x800233 <__data_end+0x3>
     f4c:	bf 91       	pop	r27
     f4e:	af 91       	pop	r26
     f50:	9f 91       	pop	r25
     f52:	8f 91       	pop	r24
     f54:	0f 90       	pop	r0
     f56:	0f be       	out	0x3f, r0	; 63
     f58:	0f 90       	pop	r0
     f5a:	1f 90       	pop	r1
     f5c:	18 95       	reti

00000f5e <enableGlobalInterrupt>:
     f5e:	8f b7       	in	r24, 0x3f	; 63
     f60:	80 68       	ori	r24, 0x80	; 128
     f62:	8f bf       	out	0x3f, r24	; 63
     f64:	08 95       	ret

00000f66 <initiliazeTimerTicker>:
     f66:	82 e0       	ldi	r24, 0x02	; 2
     f68:	84 bd       	out	0x24, r24	; 36
     f6a:	15 bc       	out	0x25, r1	; 37
     f6c:	16 bc       	out	0x26, r1	; 38
     f6e:	9c e6       	ldi	r25, 0x6C	; 108
     f70:	97 bd       	out	0x27, r25	; 39
     f72:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
     f76:	0e 94 af 07 	call	0xf5e	; 0xf5e <enableGlobalInterrupt>
     f7a:	08 95       	ret

00000f7c <startTimerTicker>:
     f7c:	85 b5       	in	r24, 0x25	; 37
     f7e:	85 60       	ori	r24, 0x05	; 5
     f80:	85 bd       	out	0x25, r24	; 37
     f82:	08 95       	ret

00000f84 <processBLEMessages>:
     f84:	ff 92       	push	r15
     f86:	0f 93       	push	r16
     f88:	1f 93       	push	r17
     f8a:	cf 93       	push	r28
     f8c:	df 93       	push	r29
     f8e:	cd b7       	in	r28, 0x3d	; 61
     f90:	de b7       	in	r29, 0x3e	; 62
     f92:	a4 97       	sbiw	r28, 0x24	; 36
     f94:	0f b6       	in	r0, 0x3f	; 63
     f96:	f8 94       	cli
     f98:	de bf       	out	0x3e, r29	; 62
     f9a:	0f be       	out	0x3f, r0	; 63
     f9c:	cd bf       	out	0x3d, r28	; 61
     f9e:	8e 01       	movw	r16, r28
     fa0:	0f 5f       	subi	r16, 0xFF	; 255
     fa2:	1f 4f       	sbci	r17, 0xFF	; 255
     fa4:	ff 24       	eor	r15, r15
     fa6:	f3 94       	inc	r15
     fa8:	2d c0       	rjmp	.+90     	; 0x1004 <processBLEMessages+0x80>
     faa:	b8 01       	movw	r22, r16
     fac:	8b e3       	ldi	r24, 0x3B	; 59
     fae:	0e 94 11 0c 	call	0x1822	; 0x1822 <bleBufferReadUntil>
     fb2:	6f e1       	ldi	r22, 0x1F	; 31
     fb4:	71 e0       	ldi	r23, 0x01	; 1
     fb6:	c8 01       	movw	r24, r16
     fb8:	0e 94 01 0f 	call	0x1e02	; 0x1e02 <strstr>
     fbc:	08 17       	cp	r16, r24
     fbe:	19 07       	cpc	r17, r25
     fc0:	69 f4       	brne	.+26     	; 0xfdc <processBLEMessages+0x58>
     fc2:	85 e2       	ldi	r24, 0x25	; 37
     fc4:	91 e0       	ldi	r25, 0x01	; 1
     fc6:	0e 94 18 0b 	call	0x1630	; 0x1630 <bleSerialPrint>
     fca:	6d ec       	ldi	r22, 0xCD	; 205
     fcc:	7c ec       	ldi	r23, 0xCC	; 204
     fce:	8c ec       	ldi	r24, 0xCC	; 204
     fd0:	9d e3       	ldi	r25, 0x3D	; 61
     fd2:	0e 94 76 09 	call	0x12ec	; 0x12ec <playLowBuzz>
     fd6:	f0 92 47 02 	sts	0x0247, r15	; 0x800247 <sendADValue>
     fda:	14 c0       	rjmp	.+40     	; 0x1004 <processBLEMessages+0x80>
     fdc:	6f e2       	ldi	r22, 0x2F	; 47
     fde:	71 e0       	ldi	r23, 0x01	; 1
     fe0:	c8 01       	movw	r24, r16
     fe2:	0e 94 01 0f 	call	0x1e02	; 0x1e02 <strstr>
     fe6:	08 17       	cp	r16, r24
     fe8:	19 07       	cpc	r17, r25
     fea:	61 f4       	brne	.+24     	; 0x1004 <processBLEMessages+0x80>
     fec:	84 e3       	ldi	r24, 0x34	; 52
     fee:	91 e0       	ldi	r25, 0x01	; 1
     ff0:	0e 94 18 0b 	call	0x1630	; 0x1630 <bleSerialPrint>
     ff4:	6d ec       	ldi	r22, 0xCD	; 205
     ff6:	7c ec       	ldi	r23, 0xCC	; 204
     ff8:	8c ec       	ldi	r24, 0xCC	; 204
     ffa:	9d e3       	ldi	r25, 0x3D	; 61
     ffc:	0e 94 76 09 	call	0x12ec	; 0x12ec <playLowBuzz>
    1000:	10 92 47 02 	sts	0x0247, r1	; 0x800247 <sendADValue>
    1004:	8b e3       	ldi	r24, 0x3B	; 59
    1006:	0e 94 c0 0b 	call	0x1780	; 0x1780 <serialBleFind>
    100a:	01 96       	adiw	r24, 0x01	; 1
    100c:	71 f6       	brne	.-100    	; 0xfaa <processBLEMessages+0x26>
    100e:	a4 96       	adiw	r28, 0x24	; 36
    1010:	0f b6       	in	r0, 0x3f	; 63
    1012:	f8 94       	cli
    1014:	de bf       	out	0x3e, r29	; 62
    1016:	0f be       	out	0x3f, r0	; 63
    1018:	cd bf       	out	0x3d, r28	; 61
    101a:	df 91       	pop	r29
    101c:	cf 91       	pop	r28
    101e:	1f 91       	pop	r17
    1020:	0f 91       	pop	r16
    1022:	ff 90       	pop	r15
    1024:	08 95       	ret

00001026 <bleSendADValue>:
    1026:	cf 92       	push	r12
    1028:	df 92       	push	r13
    102a:	ef 92       	push	r14
    102c:	ff 92       	push	r15
    102e:	0e 94 5e 00 	call	0xbc	; 0xbc <adcFetchData>
    1032:	6b 01       	movw	r12, r22
    1034:	7c 01       	movw	r14, r24
    1036:	89 e2       	ldi	r24, 0x29	; 41
    1038:	92 e0       	ldi	r25, 0x02	; 2
    103a:	0e 94 18 0b 	call	0x1630	; 0x1630 <bleSerialPrint>
    103e:	c7 01       	movw	r24, r14
    1040:	b6 01       	movw	r22, r12
    1042:	0e 94 2e 0b 	call	0x165c	; 0x165c <bleSerialPrintLong>
    1046:	8c e3       	ldi	r24, 0x3C	; 60
    1048:	91 e0       	ldi	r25, 0x01	; 1
    104a:	0e 94 18 0b 	call	0x1630	; 0x1630 <bleSerialPrint>
    104e:	ff 90       	pop	r15
    1050:	ef 90       	pop	r14
    1052:	df 90       	pop	r13
    1054:	cf 90       	pop	r12
    1056:	08 95       	ret

00001058 <fitStraighLine>:
    1058:	4f 92       	push	r4
    105a:	5f 92       	push	r5
    105c:	6f 92       	push	r6
    105e:	7f 92       	push	r7
    1060:	9f 92       	push	r9
    1062:	af 92       	push	r10
    1064:	bf 92       	push	r11
    1066:	cf 92       	push	r12
    1068:	df 92       	push	r13
    106a:	ef 92       	push	r14
    106c:	ff 92       	push	r15
    106e:	0f 93       	push	r16
    1070:	1f 93       	push	r17
    1072:	cf 93       	push	r28
    1074:	df 93       	push	r29
    1076:	cd b7       	in	r28, 0x3d	; 61
    1078:	de b7       	in	r29, 0x3e	; 62
    107a:	cc 5d       	subi	r28, 0xDC	; 220
    107c:	d1 09       	sbc	r29, r1
    107e:	0f b6       	in	r0, 0x3f	; 63
    1080:	f8 94       	cli
    1082:	de bf       	out	0x3e, r29	; 62
    1084:	0f be       	out	0x3f, r0	; 63
    1086:	cd bf       	out	0x3d, r28	; 61
    1088:	90 90 44 02 	lds	r9, 0x0244	; 0x800244 <calibratedPoints>
    108c:	21 e0       	ldi	r18, 0x01	; 1
    108e:	29 15       	cp	r18, r9
    1090:	08 f0       	brcs	.+2      	; 0x1094 <fitStraighLine+0x3c>
    1092:	8a c0       	rjmp	.+276    	; 0x11a8 <fitStraighLine+0x150>
    1094:	99 20       	and	r9, r9
    1096:	09 f4       	brne	.+2      	; 0x109a <fitStraighLine+0x42>
    1098:	48 c0       	rjmp	.+144    	; 0x112a <fitStraighLine+0xd2>
    109a:	8e 01       	movw	r16, r28
    109c:	0f 5f       	subi	r16, 0xFF	; 255
    109e:	1f 4f       	sbci	r17, 0xFF	; 255
    10a0:	0f 2e       	mov	r0, r31
    10a2:	f5 e7       	ldi	r31, 0x75	; 117
    10a4:	ef 2e       	mov	r14, r31
    10a6:	f2 e0       	ldi	r31, 0x02	; 2
    10a8:	ff 2e       	mov	r15, r31
    10aa:	f0 2d       	mov	r31, r0
    10ac:	6e 01       	movw	r12, r28
    10ae:	31 ea       	ldi	r19, 0xA1	; 161
    10b0:	c3 0e       	add	r12, r19
    10b2:	d1 1c       	adc	r13, r1
    10b4:	aa 24       	eor	r10, r10
    10b6:	aa 94       	dec	r10
    10b8:	a9 0c       	add	r10, r9
    10ba:	b1 2c       	mov	r11, r1
    10bc:	8f ef       	ldi	r24, 0xFF	; 255
    10be:	a8 1a       	sub	r10, r24
    10c0:	b8 0a       	sbc	r11, r24
    10c2:	aa 0c       	add	r10, r10
    10c4:	bb 1c       	adc	r11, r11
    10c6:	aa 0c       	add	r10, r10
    10c8:	bb 1c       	adc	r11, r11
    10ca:	aa 0c       	add	r10, r10
    10cc:	bb 1c       	adc	r11, r11
    10ce:	a0 0e       	add	r10, r16
    10d0:	b1 1e       	adc	r11, r17
    10d2:	0f 2e       	mov	r0, r31
    10d4:	41 2c       	mov	r4, r1
    10d6:	51 2c       	mov	r5, r1
    10d8:	f0 e8       	ldi	r31, 0x80	; 128
    10da:	6f 2e       	mov	r6, r31
    10dc:	ff e3       	ldi	r31, 0x3F	; 63
    10de:	7f 2e       	mov	r7, r31
    10e0:	f0 2d       	mov	r31, r0
    10e2:	f8 01       	movw	r30, r16
    10e4:	40 82       	st	Z, r4
    10e6:	51 82       	std	Z+1, r5	; 0x01
    10e8:	62 82       	std	Z+2, r6	; 0x02
    10ea:	73 82       	std	Z+3, r7	; 0x03
    10ec:	f7 01       	movw	r30, r14
    10ee:	60 81       	ld	r22, Z
    10f0:	71 81       	ldd	r23, Z+1	; 0x01
    10f2:	82 81       	ldd	r24, Z+2	; 0x02
    10f4:	93 81       	ldd	r25, Z+3	; 0x03
    10f6:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <__floatsisf>
    10fa:	f8 01       	movw	r30, r16
    10fc:	64 83       	std	Z+4, r22	; 0x04
    10fe:	75 83       	std	Z+5, r23	; 0x05
    1100:	86 83       	std	Z+6, r24	; 0x06
    1102:	97 83       	std	Z+7, r25	; 0x07
    1104:	f7 01       	movw	r30, r14
    1106:	84 81       	ldd	r24, Z+4	; 0x04
    1108:	95 81       	ldd	r25, Z+5	; 0x05
    110a:	a6 81       	ldd	r26, Z+6	; 0x06
    110c:	b7 81       	ldd	r27, Z+7	; 0x07
    110e:	f6 01       	movw	r30, r12
    1110:	81 93       	st	Z+, r24
    1112:	91 93       	st	Z+, r25
    1114:	a1 93       	st	Z+, r26
    1116:	b1 93       	st	Z+, r27
    1118:	6f 01       	movw	r12, r30
    111a:	08 5f       	subi	r16, 0xF8	; 248
    111c:	1f 4f       	sbci	r17, 0xFF	; 255
    111e:	f8 e0       	ldi	r31, 0x08	; 8
    1120:	ef 0e       	add	r14, r31
    1122:	f1 1c       	adc	r15, r1
    1124:	0a 15       	cp	r16, r10
    1126:	1b 05       	cpc	r17, r11
    1128:	e1 f6       	brne	.-72     	; 0x10e2 <fitStraighLine+0x8a>
    112a:	9e 01       	movw	r18, r28
    112c:	27 53       	subi	r18, 0x37	; 55
    112e:	3f 4f       	sbci	r19, 0xFF	; 255
    1130:	79 01       	movw	r14, r18
    1132:	8e 01       	movw	r16, r28
    1134:	0f 5a       	subi	r16, 0xAF	; 175
    1136:	1f 4f       	sbci	r17, 0xFF	; 255
    1138:	20 55       	subi	r18, 0x50	; 80
    113a:	31 09       	sbc	r19, r1
    113c:	ae 01       	movw	r20, r28
    113e:	4f 5f       	subi	r20, 0xFF	; 255
    1140:	5f 4f       	sbci	r21, 0xFF	; 255
    1142:	62 e0       	ldi	r22, 0x02	; 2
    1144:	70 e0       	ldi	r23, 0x00	; 0
    1146:	89 2d       	mov	r24, r9
    1148:	90 e0       	ldi	r25, 0x00	; 0
    114a:	0e 94 87 00 	call	0x10e	; 0x10e <QR>
    114e:	5c 01       	movw	r10, r24
    1150:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <calibratedPoints>
    1154:	67 01       	movw	r12, r14
    1156:	98 01       	movw	r18, r16
    1158:	78 01       	movw	r14, r16
    115a:	08 5d       	subi	r16, 0xD8	; 216
    115c:	1f 4f       	sbci	r17, 0xFF	; 255
    115e:	20 5b       	subi	r18, 0xB0	; 176
    1160:	3f 4f       	sbci	r19, 0xFF	; 255
    1162:	ae 01       	movw	r20, r28
    1164:	4f 5f       	subi	r20, 0xFF	; 255
    1166:	5f 4f       	sbci	r21, 0xFF	; 255
    1168:	62 e0       	ldi	r22, 0x02	; 2
    116a:	70 e0       	ldi	r23, 0x00	; 0
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	0e 94 fd 04 	call	0x9fa	; 0x9fa <solveLeastSquare>
    1172:	ed e0       	ldi	r30, 0x0D	; 13
    1174:	f1 e0       	ldi	r31, 0x01	; 1
    1176:	cf 55       	subi	r28, 0x5F	; 95
    1178:	df 4f       	sbci	r29, 0xFF	; 255
    117a:	88 81       	ld	r24, Y
    117c:	99 81       	ldd	r25, Y+1	; 0x01
    117e:	aa 81       	ldd	r26, Y+2	; 0x02
    1180:	bb 81       	ldd	r27, Y+3	; 0x03
    1182:	c1 5a       	subi	r28, 0xA1	; 161
    1184:	d0 40       	sbci	r29, 0x00	; 0
    1186:	80 83       	st	Z, r24
    1188:	91 83       	std	Z+1, r25	; 0x01
    118a:	a2 83       	std	Z+2, r26	; 0x02
    118c:	b3 83       	std	Z+3, r27	; 0x03
    118e:	cb 55       	subi	r28, 0x5B	; 91
    1190:	df 4f       	sbci	r29, 0xFF	; 255
    1192:	88 81       	ld	r24, Y
    1194:	99 81       	ldd	r25, Y+1	; 0x01
    1196:	aa 81       	ldd	r26, Y+2	; 0x02
    1198:	bb 81       	ldd	r27, Y+3	; 0x03
    119a:	c5 5a       	subi	r28, 0xA5	; 165
    119c:	d0 40       	sbci	r29, 0x00	; 0
    119e:	84 83       	std	Z+4, r24	; 0x04
    11a0:	95 83       	std	Z+5, r25	; 0x05
    11a2:	a6 83       	std	Z+6, r26	; 0x06
    11a4:	b7 83       	std	Z+7, r27	; 0x07
    11a6:	0e c0       	rjmp	.+28     	; 0x11c4 <fitStraighLine+0x16c>
    11a8:	ed e0       	ldi	r30, 0x0D	; 13
    11aa:	f1 e0       	ldi	r31, 0x01	; 1
    11ac:	10 82       	st	Z, r1
    11ae:	11 82       	std	Z+1, r1	; 0x01
    11b0:	12 82       	std	Z+2, r1	; 0x02
    11b2:	13 82       	std	Z+3, r1	; 0x03
    11b4:	80 e0       	ldi	r24, 0x00	; 0
    11b6:	90 e0       	ldi	r25, 0x00	; 0
    11b8:	a0 e8       	ldi	r26, 0x80	; 128
    11ba:	bf e3       	ldi	r27, 0x3F	; 63
    11bc:	84 83       	std	Z+4, r24	; 0x04
    11be:	95 83       	std	Z+5, r25	; 0x05
    11c0:	a6 83       	std	Z+6, r26	; 0x06
    11c2:	b7 83       	std	Z+7, r27	; 0x07
    11c4:	c4 52       	subi	r28, 0x24	; 36
    11c6:	df 4f       	sbci	r29, 0xFF	; 255
    11c8:	0f b6       	in	r0, 0x3f	; 63
    11ca:	f8 94       	cli
    11cc:	de bf       	out	0x3e, r29	; 62
    11ce:	0f be       	out	0x3f, r0	; 63
    11d0:	cd bf       	out	0x3d, r28	; 61
    11d2:	df 91       	pop	r29
    11d4:	cf 91       	pop	r28
    11d6:	1f 91       	pop	r17
    11d8:	0f 91       	pop	r16
    11da:	ff 90       	pop	r15
    11dc:	ef 90       	pop	r14
    11de:	df 90       	pop	r13
    11e0:	cf 90       	pop	r12
    11e2:	bf 90       	pop	r11
    11e4:	af 90       	pop	r10
    11e6:	9f 90       	pop	r9
    11e8:	7f 90       	pop	r7
    11ea:	6f 90       	pop	r6
    11ec:	5f 90       	pop	r5
    11ee:	4f 90       	pop	r4
    11f0:	08 95       	ret

000011f2 <loadStoredParameters>:
    11f2:	cf 93       	push	r28
    11f4:	0e 94 38 06 	call	0xc70	; 0xc70 <loadDisplayUnitType>
    11f8:	0e 94 c3 06 	call	0xd86	; 0xd86 <loadMachineCapacity>
    11fc:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <loadOverflowProtectionDetails>
    1200:	0e 94 54 06 	call	0xca8	; 0xca8 <loadSample>
    1204:	0e 94 62 06 	call	0xcc4	; 0xcc4 <loadSampleValues>
    1208:	0e 94 46 06 	call	0xc8c	; 0xc8c <loadDisplayForceUnit>
    120c:	0e 94 17 07 	call	0xe2e	; 0xe2e <loadCalibrationUnit>
    1210:	0e 94 09 07 	call	0xe12	; 0xe12 <loadNumCalibratedPoints>
    1214:	60 91 44 02 	lds	r22, 0x0244	; 0x800244 <calibratedPoints>
    1218:	86 e7       	ldi	r24, 0x76	; 118
    121a:	91 e0       	ldi	r25, 0x01	; 1
    121c:	0e 94 64 07 	call	0xec8	; 0xec8 <displaySetValueUInt>
    1220:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <calibratedPoints>
    1224:	88 23       	and	r24, r24
    1226:	49 f0       	breq	.+18     	; 0x123a <loadStoredParameters+0x48>
    1228:	c0 e0       	ldi	r28, 0x00	; 0
    122a:	8c 2f       	mov	r24, r28
    122c:	0e 94 25 07 	call	0xe4a	; 0xe4a <loadCalibrationPoint>
    1230:	cf 5f       	subi	r28, 0xFF	; 255
    1232:	80 91 44 02 	lds	r24, 0x0244	; 0x800244 <calibratedPoints>
    1236:	c8 17       	cp	r28, r24
    1238:	c0 f3       	brcs	.-16     	; 0x122a <loadStoredParameters+0x38>
    123a:	0e 94 2c 08 	call	0x1058	; 0x1058 <fitStraighLine>
    123e:	cf 91       	pop	r28
    1240:	08 95       	ret

00001242 <calculateOverflowThresholdForce>:
    1242:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <overflowProtectionThreshold>
    1246:	70 e0       	ldi	r23, 0x00	; 0
    1248:	80 e0       	ldi	r24, 0x00	; 0
    124a:	90 e0       	ldi	r25, 0x00	; 0
    124c:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <__floatsisf>
    1250:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <machineCapacity>
    1254:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <machineCapacity+0x1>
    1258:	40 91 07 01 	lds	r20, 0x0107	; 0x800107 <machineCapacity+0x2>
    125c:	50 91 08 01 	lds	r21, 0x0108	; 0x800108 <machineCapacity+0x3>
    1260:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__mulsf3>
    1264:	20 e0       	ldi	r18, 0x00	; 0
    1266:	30 e0       	ldi	r19, 0x00	; 0
    1268:	48 ec       	ldi	r20, 0xC8	; 200
    126a:	52 e4       	ldi	r21, 0x42	; 66
    126c:	0e 94 a5 0c 	call	0x194a	; 0x194a <__divsf3>
    1270:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>
    1274:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
    1278:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_start+0x2>
    127c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__data_start+0x3>
    1280:	08 95       	ret

00001282 <clearFVarPointers>:
	dtostrf(sampleArea, 7, 1, output);
	displaySetText(SAMPLE_AREA_NAME, output);
}

void clearFVarPointers() {
	fVarCallbackPtr = 0;
    1282:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <fVarCallbackPtr+0x1>
    1286:	10 92 4b 02 	sts	0x024B, r1	; 0x80024b <fVarCallbackPtr>
	fVarPtr = 0;
    128a:	10 92 d2 02 	sts	0x02D2, r1	; 0x8002d2 <fVarPtr+0x1>
    128e:	10 92 d1 02 	sts	0x02D1, r1	; 0x8002d1 <fVarPtr>
    1292:	08 95       	ret

00001294 <initializeSystem>:
 void disableGlobalInterrupt() {
	 SREG &= ~((1<<SREG_I));
 }

void initializeSystem() {
	initializeBuzzer();
    1294:	0e 94 74 09 	call	0x12e8	; 0x12e8 <initializeBuzzer>
	initSoftwareUARTSend();
    1298:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <initSoftwareUARTSend>
	initSoftwareUARTReceive();
    129c:	0e 94 f7 09 	call	0x13ee	; 0x13ee <initSoftwareUARTReceive>
	initBleUARTSend();
    12a0:	0e 94 bf 0a 	call	0x157e	; 0x157e <initBleUARTSend>
	initBleUARTReceive();
    12a4:	0e 94 cc 0a 	call	0x1598	; 0x1598 <initBleUARTReceive>
	//serialInitialize(BAUDRATE);
	adcInitialize(0);
    12a8:	80 e0       	ldi	r24, 0x00	; 0
    12aa:	0e 94 53 00 	call	0xa6	; 0xa6 <adcInitialize>
	loadStoredParameters();
    12ae:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <loadStoredParameters>
	clearFVarPointers();
    12b2:	0e 94 41 09 	call	0x1282	; 0x1282 <clearFVarPointers>
	initializeRelay(!overflowProtectionMode);
    12b6:	81 e0       	ldi	r24, 0x01	; 1
    12b8:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <overflowProtectionMode>
    12bc:	91 11       	cpse	r25, r1
    12be:	80 e0       	ldi	r24, 0x00	; 0
    12c0:	0e 94 2f 0c 	call	0x185e	; 0x185e <initializeRelay>
    12c4:	2f ef       	ldi	r18, 0xFF	; 255
    12c6:	8f ef       	ldi	r24, 0xFF	; 255
    12c8:	9a e1       	ldi	r25, 0x1A	; 26
    12ca:	21 50       	subi	r18, 0x01	; 1
    12cc:	80 40       	sbci	r24, 0x00	; 0
    12ce:	90 40       	sbci	r25, 0x00	; 0
    12d0:	e1 f7       	brne	.-8      	; 0x12ca <initializeSystem+0x36>
    12d2:	00 c0       	rjmp	.+0      	; 0x12d4 <initializeSystem+0x40>
    12d4:	00 00       	nop
	_delay_ms(800);

	initiliazeTimerTicker();
    12d6:	0e 94 b3 07 	call	0xf66	; 0xf66 <initiliazeTimerTicker>
	startTimerTicker();
    12da:	0e 94 be 07 	call	0xf7c	; 0xf7c <startTimerTicker>

	softwareSerialPrint(READY);
    12de:	82 e2       	ldi	r24, 0x22	; 34
    12e0:	92 e0       	ldi	r25, 0x02	; 2
    12e2:	0e 94 3c 0a 	call	0x1478	; 0x1478 <softwareSerialPrint>
    12e6:	08 95       	ret

000012e8 <initializeBuzzer>:
    12e8:	3c 9a       	sbi	0x07, 4	; 7
    12ea:	08 95       	ret

000012ec <playLowBuzz>:
    12ec:	20 e0       	ldi	r18, 0x00	; 0
    12ee:	30 e0       	ldi	r19, 0x00	; 0
    12f0:	46 e1       	ldi	r20, 0x16	; 22
    12f2:	54 e4       	ldi	r21, 0x44	; 68
    12f4:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__mulsf3>
    12f8:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <__fixunssfsi>
    12fc:	61 15       	cp	r22, r1
    12fe:	71 05       	cpc	r23, r1
    1300:	81 05       	cpc	r24, r1
    1302:	91 05       	cpc	r25, r1
    1304:	99 f0       	breq	.+38     	; 0x132c <playLowBuzz+0x40>
    1306:	44 9a       	sbi	0x08, 4	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1308:	e6 ef       	ldi	r30, 0xF6	; 246
    130a:	f8 e0       	ldi	r31, 0x08	; 8
    130c:	31 97       	sbiw	r30, 0x01	; 1
    130e:	f1 f7       	brne	.-4      	; 0x130c <playLowBuzz+0x20>
    1310:	00 c0       	rjmp	.+0      	; 0x1312 <playLowBuzz+0x26>
    1312:	00 00       	nop
    1314:	44 98       	cbi	0x08, 4	; 8
    1316:	e6 ef       	ldi	r30, 0xF6	; 246
    1318:	f8 e0       	ldi	r31, 0x08	; 8
    131a:	31 97       	sbiw	r30, 0x01	; 1
    131c:	f1 f7       	brne	.-4      	; 0x131a <playLowBuzz+0x2e>
    131e:	00 c0       	rjmp	.+0      	; 0x1320 <playLowBuzz+0x34>
    1320:	00 00       	nop
    1322:	61 50       	subi	r22, 0x01	; 1
    1324:	71 09       	sbc	r23, r1
    1326:	81 09       	sbc	r24, r1
    1328:	91 09       	sbc	r25, r1
    132a:	69 f7       	brne	.-38     	; 0x1306 <playLowBuzz+0x1a>
    132c:	08 95       	ret

0000132e <serialPutChar>:
    132e:	e0 ec       	ldi	r30, 0xC0	; 192
    1330:	f0 e0       	ldi	r31, 0x00	; 0
    1332:	90 81       	ld	r25, Z
    1334:	95 ff       	sbrs	r25, 5
    1336:	fd cf       	rjmp	.-6      	; 0x1332 <serialPutChar+0x4>
    1338:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    133c:	08 95       	ret

0000133e <serialReadChar>:
    133e:	e0 ec       	ldi	r30, 0xC0	; 192
    1340:	f0 e0       	ldi	r31, 0x00	; 0
    1342:	80 81       	ld	r24, Z
    1344:	88 23       	and	r24, r24
    1346:	ec f7       	brge	.-6      	; 0x1342 <serialReadChar+0x4>
    1348:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    134c:	08 95       	ret

0000134e <__vector_18>:
    134e:	1f 92       	push	r1
    1350:	0f 92       	push	r0
    1352:	0f b6       	in	r0, 0x3f	; 63
    1354:	0f 92       	push	r0
    1356:	11 24       	eor	r1, r1
    1358:	2f 93       	push	r18
    135a:	3f 93       	push	r19
    135c:	4f 93       	push	r20
    135e:	5f 93       	push	r21
    1360:	6f 93       	push	r22
    1362:	7f 93       	push	r23
    1364:	8f 93       	push	r24
    1366:	9f 93       	push	r25
    1368:	af 93       	push	r26
    136a:	bf 93       	push	r27
    136c:	ef 93       	push	r30
    136e:	ff 93       	push	r31
    1370:	0e 94 9f 09 	call	0x133e	; 0x133e <serialReadChar>
    1374:	e0 91 48 02 	lds	r30, 0x0248	; 0x800248 <inBufferEndIndex>
    1378:	f0 e0       	ldi	r31, 0x00	; 0
    137a:	ed 52       	subi	r30, 0x2D	; 45
    137c:	fd 4f       	sbci	r31, 0xFD	; 253
    137e:	80 83       	st	Z, r24
    1380:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <inBufferEndIndex>
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	01 96       	adiw	r24, 0x01	; 1
    1388:	68 e1       	ldi	r22, 0x18	; 24
    138a:	70 e0       	ldi	r23, 0x00	; 0
    138c:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <__divmodhi4>
    1390:	80 93 48 02 	sts	0x0248, r24	; 0x800248 <inBufferEndIndex>
    1394:	ff 91       	pop	r31
    1396:	ef 91       	pop	r30
    1398:	bf 91       	pop	r27
    139a:	af 91       	pop	r26
    139c:	9f 91       	pop	r25
    139e:	8f 91       	pop	r24
    13a0:	7f 91       	pop	r23
    13a2:	6f 91       	pop	r22
    13a4:	5f 91       	pop	r21
    13a6:	4f 91       	pop	r20
    13a8:	3f 91       	pop	r19
    13aa:	2f 91       	pop	r18
    13ac:	0f 90       	pop	r0
    13ae:	0f be       	out	0x3f, r0	; 63
    13b0:	0f 90       	pop	r0
    13b2:	1f 90       	pop	r1
    13b4:	18 95       	reti

000013b6 <serialPrint>:
    13b6:	cf 93       	push	r28
    13b8:	df 93       	push	r29
    13ba:	ec 01       	movw	r28, r24
    13bc:	88 81       	ld	r24, Y
    13be:	88 23       	and	r24, r24
    13c0:	31 f0       	breq	.+12     	; 0x13ce <serialPrint+0x18>
    13c2:	21 96       	adiw	r28, 0x01	; 1
    13c4:	0e 94 97 09 	call	0x132e	; 0x132e <serialPutChar>
    13c8:	89 91       	ld	r24, Y+
    13ca:	81 11       	cpse	r24, r1
    13cc:	fb cf       	rjmp	.-10     	; 0x13c4 <serialPrint+0xe>
    13ce:	df 91       	pop	r29
    13d0:	cf 91       	pop	r28
    13d2:	08 95       	ret

000013d4 <initSoftwareUARTSend>:
		////testSoftwareUARTSend();
	//}
//}

void initSoftwareUARTSend() {
	DDRD |= (1<<PORTD3);
    13d4:	53 9a       	sbi	0x0a, 3	; 10
	TCCR1B |= (1 << WGM12);
    13d6:	e1 e8       	ldi	r30, 0x81	; 129
    13d8:	f0 e0       	ldi	r31, 0x00	; 0
    13da:	80 81       	ld	r24, Z
    13dc:	88 60       	ori	r24, 0x08	; 8
    13de:	80 83       	st	Z, r24
	OCR1A = 1152;
    13e0:	80 e8       	ldi	r24, 0x80	; 128
    13e2:	94 e0       	ldi	r25, 0x04	; 4
    13e4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    13e8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    13ec:	08 95       	ret

000013ee <initSoftwareUARTReceive>:
}

void initSoftwareUARTReceive() {
	DDRD &= ~(1<<PORTD2);
    13ee:	52 98       	cbi	0x0a, 2	; 10
	PORTD |= (1<<PORTD2);
    13f0:	5a 9a       	sbi	0x0b, 2	; 11
	TCCR1B |= (1 << WGM12);
    13f2:	e1 e8       	ldi	r30, 0x81	; 129
    13f4:	f0 e0       	ldi	r31, 0x00	; 0
    13f6:	80 81       	ld	r24, Z
    13f8:	88 60       	ori	r24, 0x08	; 8
    13fa:	80 83       	st	Z, r24
	OCR1A = 1152;
    13fc:	80 e8       	ldi	r24, 0x80	; 128
    13fe:	94 e0       	ldi	r25, 0x04	; 4
    1400:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1404:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	PCICR |= (1 << PCIE2);
    1408:	e8 e6       	ldi	r30, 0x68	; 104
    140a:	f0 e0       	ldi	r31, 0x00	; 0
    140c:	80 81       	ld	r24, Z
    140e:	84 60       	ori	r24, 0x04	; 4
    1410:	80 83       	st	Z, r24
	PCMSK2 |= (1 << PCINT18);
    1412:	ed e6       	ldi	r30, 0x6D	; 109
    1414:	f0 e0       	ldi	r31, 0x00	; 0
    1416:	80 81       	ld	r24, Z
    1418:	84 60       	ori	r24, 0x04	; 4
    141a:	80 83       	st	Z, r24
	sei();
    141c:	78 94       	sei
    141e:	08 95       	ret

00001420 <softwareSendBit>:
	}
	softwareSendBit(1);
}

void softwareSendBit(unsigned char b) {
	TCCR1B &= ~(1 << CS10);
    1420:	e1 e8       	ldi	r30, 0x81	; 129
    1422:	f0 e0       	ldi	r31, 0x00	; 0
    1424:	90 81       	ld	r25, Z
    1426:	9e 7f       	andi	r25, 0xFE	; 254
    1428:	90 83       	st	Z, r25
	if (b)
    142a:	88 23       	and	r24, r24
    142c:	11 f0       	breq	.+4      	; 0x1432 <softwareSendBit+0x12>
		PORTD = PORTD | (1 << PORTD3);
    142e:	5b 9a       	sbi	0x0b, 3	; 11
    1430:	01 c0       	rjmp	.+2      	; 0x1434 <softwareSendBit+0x14>
	else
		PORTD = PORTD & ~(1 << PORTD3);
    1432:	5b 98       	cbi	0x0b, 3	; 11
	TCCR1B |= (1 << CS10);
    1434:	e1 e8       	ldi	r30, 0x81	; 129
    1436:	f0 e0       	ldi	r31, 0x00	; 0
    1438:	80 81       	ld	r24, Z
    143a:	81 60       	ori	r24, 0x01	; 1
    143c:	80 83       	st	Z, r24
	while (!(TIFR1 & (1 << OCF1A)));
    143e:	b1 9b       	sbis	0x16, 1	; 22
    1440:	fe cf       	rjmp	.-4      	; 0x143e <softwareSendBit+0x1e>
	TIFR1 = (TIFR1 | (1 << OCF1A));
    1442:	b1 9a       	sbi	0x16, 1	; 22
	TCCR1B &= ~(1 << CS10);
    1444:	e1 e8       	ldi	r30, 0x81	; 129
    1446:	f0 e0       	ldi	r31, 0x00	; 0
    1448:	80 81       	ld	r24, Z
    144a:	8e 7f       	andi	r24, 0xFE	; 254
    144c:	80 83       	st	Z, r24
    144e:	08 95       	ret

00001450 <softwareSendByte>:
	softwareSerialPrintULong(t->tm_min);
	softwareSerialPrint(":");
	softwareSerialPrintULong(t->tm_sec);
}

void softwareSendByte(unsigned char c) {
    1450:	cf 93       	push	r28
    1452:	df 93       	push	r29
    1454:	d8 2f       	mov	r29, r24
	unsigned char i;
	softwareSendBit(0);
    1456:	80 e0       	ldi	r24, 0x00	; 0
    1458:	0e 94 10 0a 	call	0x1420	; 0x1420 <softwareSendBit>
    145c:	c8 e0       	ldi	r28, 0x08	; 8
	for (i = 0; i < 8; i++) {
		softwareSendBit(c & 0x01);
    145e:	8d 2f       	mov	r24, r29
    1460:	81 70       	andi	r24, 0x01	; 1
    1462:	0e 94 10 0a 	call	0x1420	; 0x1420 <softwareSendBit>
		c >>= 1;
    1466:	d6 95       	lsr	r29
    1468:	c1 50       	subi	r28, 0x01	; 1
}

void softwareSendByte(unsigned char c) {
	unsigned char i;
	softwareSendBit(0);
	for (i = 0; i < 8; i++) {
    146a:	c9 f7       	brne	.-14     	; 0x145e <softwareSendByte+0xe>
		softwareSendBit(c & 0x01);
		c >>= 1;
	}
	softwareSendBit(1);
    146c:	81 e0       	ldi	r24, 0x01	; 1
    146e:	0e 94 10 0a 	call	0x1420	; 0x1420 <softwareSendBit>
}
    1472:	df 91       	pop	r29
    1474:	cf 91       	pop	r28
    1476:	08 95       	ret

00001478 <softwareSerialPrint>:
	PCICR |= (1 << PCIE2);
	PCMSK2 |= (1 << PCINT18);
	sei();
}

void softwareSerialPrint(const unsigned char *c) {
    1478:	0f 93       	push	r16
    147a:	1f 93       	push	r17
    147c:	cf 93       	push	r28
    147e:	fc 01       	movw	r30, r24
	unsigned char i;
	for (i=0; c[i] != 0; i++) {
    1480:	80 81       	ld	r24, Z
    1482:	88 23       	and	r24, r24
    1484:	59 f0       	breq	.+22     	; 0x149c <softwareSerialPrint+0x24>
    1486:	8f 01       	movw	r16, r30
    1488:	c0 e0       	ldi	r28, 0x00	; 0
		softwareSendByte(c[i]);
    148a:	0e 94 28 0a 	call	0x1450	; 0x1450 <softwareSendByte>
	sei();
}

void softwareSerialPrint(const unsigned char *c) {
	unsigned char i;
	for (i=0; c[i] != 0; i++) {
    148e:	cf 5f       	subi	r28, 0xFF	; 255
    1490:	f8 01       	movw	r30, r16
    1492:	ec 0f       	add	r30, r28
    1494:	f1 1d       	adc	r31, r1
    1496:	80 81       	ld	r24, Z
    1498:	81 11       	cpse	r24, r1
    149a:	f7 cf       	rjmp	.-18     	; 0x148a <softwareSerialPrint+0x12>
		softwareSendByte(c[i]);
	}
}
    149c:	cf 91       	pop	r28
    149e:	1f 91       	pop	r17
    14a0:	0f 91       	pop	r16
    14a2:	08 95       	ret

000014a4 <disableBleInterupt>:
}

void bleBufferReadAll(unsigned char *buffer) {
	unsigned char bufferLen = (bleInBufferEndIndex-bleInBufferStartIndex+BLE_BUFFER_SIZE)%BLE_BUFFER_SIZE;
	if (bufferLen > 0) {
		bleBufferRead(bufferLen, buffer);
    14a4:	ed e6       	ldi	r30, 0x6D	; 109
    14a6:	f0 e0       	ldi	r31, 0x00	; 0
    14a8:	80 81       	ld	r24, Z
    14aa:	8f 77       	andi	r24, 0x7F	; 127
    14ac:	80 83       	st	Z, r24
    14ae:	08 95       	ret

000014b0 <enableBleInterupt>:
    14b0:	ed e6       	ldi	r30, 0x6D	; 109
    14b2:	f0 e0       	ldi	r31, 0x00	; 0
    14b4:	80 81       	ld	r24, Z
    14b6:	80 68       	ori	r24, 0x80	; 128
    14b8:	80 83       	st	Z, r24
    14ba:	08 95       	ret

000014bc <__vector_5>:
    14bc:	1f 92       	push	r1
    14be:	0f 92       	push	r0
    14c0:	0f b6       	in	r0, 0x3f	; 63
    14c2:	0f 92       	push	r0
    14c4:	11 24       	eor	r1, r1
    14c6:	2f 93       	push	r18
    14c8:	3f 93       	push	r19
    14ca:	4f 93       	push	r20
    14cc:	5f 93       	push	r21
    14ce:	6f 93       	push	r22
    14d0:	7f 93       	push	r23
    14d2:	8f 93       	push	r24
    14d4:	9f 93       	push	r25
    14d6:	af 93       	push	r26
    14d8:	bf 93       	push	r27
    14da:	ef 93       	push	r30
    14dc:	ff 93       	push	r31
    14de:	0e 94 52 0a 	call	0x14a4	; 0x14a4 <disableBleInterupt>
    14e2:	4f 99       	sbic	0x09, 7	; 9
    14e4:	39 c0       	rjmp	.+114    	; 0x1558 <__vector_5+0x9c>
    14e6:	80 e4       	ldi	r24, 0x40	; 64
    14e8:	92 e0       	ldi	r25, 0x02	; 2
    14ea:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    14ee:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    14f2:	e1 e8       	ldi	r30, 0x81	; 129
    14f4:	f0 e0       	ldi	r31, 0x00	; 0
    14f6:	80 81       	ld	r24, Z
    14f8:	81 60       	ori	r24, 0x01	; 1
    14fa:	80 83       	st	Z, r24
    14fc:	b1 9b       	sbis	0x16, 1	; 22
    14fe:	fe cf       	rjmp	.-4      	; 0x14fc <__vector_5+0x40>
    1500:	e1 e8       	ldi	r30, 0x81	; 129
    1502:	f0 e0       	ldi	r31, 0x00	; 0
    1504:	80 81       	ld	r24, Z
    1506:	8e 7f       	andi	r24, 0xFE	; 254
    1508:	80 83       	st	Z, r24
    150a:	b1 9a       	sbi	0x16, 1	; 22
    150c:	80 e8       	ldi	r24, 0x80	; 128
    150e:	94 e0       	ldi	r25, 0x04	; 4
    1510:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1514:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1518:	98 e0       	ldi	r25, 0x08	; 8
    151a:	20 e0       	ldi	r18, 0x00	; 0
    151c:	26 95       	lsr	r18
    151e:	80 81       	ld	r24, Z
    1520:	81 60       	ori	r24, 0x01	; 1
    1522:	80 83       	st	Z, r24
    1524:	b1 9b       	sbis	0x16, 1	; 22
    1526:	fe cf       	rjmp	.-4      	; 0x1524 <__vector_5+0x68>
    1528:	80 81       	ld	r24, Z
    152a:	8e 7f       	andi	r24, 0xFE	; 254
    152c:	80 83       	st	Z, r24
    152e:	4f 99       	sbic	0x09, 7	; 9
    1530:	20 68       	ori	r18, 0x80	; 128
    1532:	b1 9a       	sbi	0x16, 1	; 22
    1534:	91 50       	subi	r25, 0x01	; 1
    1536:	91 f7       	brne	.-28     	; 0x151c <__vector_5+0x60>
    1538:	e0 91 49 02 	lds	r30, 0x0249	; 0x800249 <bleInBufferEndIndex>
    153c:	f0 e0       	ldi	r31, 0x00	; 0
    153e:	e5 51       	subi	r30, 0x15	; 21
    1540:	fd 4f       	sbci	r31, 0xFD	; 253
    1542:	20 83       	st	Z, r18
    1544:	80 91 49 02 	lds	r24, 0x0249	; 0x800249 <bleInBufferEndIndex>
    1548:	90 e0       	ldi	r25, 0x00	; 0
    154a:	01 96       	adiw	r24, 0x01	; 1
    154c:	68 e1       	ldi	r22, 0x18	; 24
    154e:	70 e0       	ldi	r23, 0x00	; 0
    1550:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <__divmodhi4>
    1554:	80 93 49 02 	sts	0x0249, r24	; 0x800249 <bleInBufferEndIndex>
    1558:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <enableBleInterupt>
    155c:	ff 91       	pop	r31
    155e:	ef 91       	pop	r30
    1560:	bf 91       	pop	r27
    1562:	af 91       	pop	r26
    1564:	9f 91       	pop	r25
    1566:	8f 91       	pop	r24
    1568:	7f 91       	pop	r23
    156a:	6f 91       	pop	r22
    156c:	5f 91       	pop	r21
    156e:	4f 91       	pop	r20
    1570:	3f 91       	pop	r19
    1572:	2f 91       	pop	r18
    1574:	0f 90       	pop	r0
    1576:	0f be       	out	0x3f, r0	; 63
    1578:	0f 90       	pop	r0
    157a:	1f 90       	pop	r1
    157c:	18 95       	reti

0000157e <initBleUARTSend>:
    157e:	56 9a       	sbi	0x0a, 6	; 10
    1580:	e1 e8       	ldi	r30, 0x81	; 129
    1582:	f0 e0       	ldi	r31, 0x00	; 0
    1584:	80 81       	ld	r24, Z
    1586:	88 60       	ori	r24, 0x08	; 8
    1588:	80 83       	st	Z, r24
    158a:	80 e8       	ldi	r24, 0x80	; 128
    158c:	94 e0       	ldi	r25, 0x04	; 4
    158e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1592:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1596:	08 95       	ret

00001598 <initBleUARTReceive>:
    1598:	57 98       	cbi	0x0a, 7	; 10
    159a:	5f 98       	cbi	0x0b, 7	; 11
    159c:	e1 e8       	ldi	r30, 0x81	; 129
    159e:	f0 e0       	ldi	r31, 0x00	; 0
    15a0:	80 81       	ld	r24, Z
    15a2:	88 60       	ori	r24, 0x08	; 8
    15a4:	80 83       	st	Z, r24
    15a6:	80 e8       	ldi	r24, 0x80	; 128
    15a8:	94 e0       	ldi	r25, 0x04	; 4
    15aa:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    15ae:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    15b2:	e8 e6       	ldi	r30, 0x68	; 104
    15b4:	f0 e0       	ldi	r31, 0x00	; 0
    15b6:	80 81       	ld	r24, Z
    15b8:	84 60       	ori	r24, 0x04	; 4
    15ba:	80 83       	st	Z, r24
    15bc:	ed e6       	ldi	r30, 0x6D	; 109
    15be:	f0 e0       	ldi	r31, 0x00	; 0
    15c0:	80 81       	ld	r24, Z
    15c2:	80 68       	ori	r24, 0x80	; 128
    15c4:	80 83       	st	Z, r24
    15c6:	78 94       	sei
    15c8:	08 95       	ret

000015ca <bleSendBit>:
    15ca:	cf 93       	push	r28
    15cc:	c8 2f       	mov	r28, r24
    15ce:	0e 94 52 0a 	call	0x14a4	; 0x14a4 <disableBleInterupt>
    15d2:	e1 e8       	ldi	r30, 0x81	; 129
    15d4:	f0 e0       	ldi	r31, 0x00	; 0
    15d6:	80 81       	ld	r24, Z
    15d8:	8e 7f       	andi	r24, 0xFE	; 254
    15da:	80 83       	st	Z, r24
    15dc:	cc 23       	and	r28, r28
    15de:	11 f0       	breq	.+4      	; 0x15e4 <bleSendBit+0x1a>
    15e0:	5e 9a       	sbi	0x0b, 6	; 11
    15e2:	01 c0       	rjmp	.+2      	; 0x15e6 <bleSendBit+0x1c>
    15e4:	5e 98       	cbi	0x0b, 6	; 11
    15e6:	e1 e8       	ldi	r30, 0x81	; 129
    15e8:	f0 e0       	ldi	r31, 0x00	; 0
    15ea:	80 81       	ld	r24, Z
    15ec:	81 60       	ori	r24, 0x01	; 1
    15ee:	80 83       	st	Z, r24
    15f0:	b1 9b       	sbis	0x16, 1	; 22
    15f2:	fe cf       	rjmp	.-4      	; 0x15f0 <bleSendBit+0x26>
    15f4:	b1 9a       	sbi	0x16, 1	; 22
    15f6:	e1 e8       	ldi	r30, 0x81	; 129
    15f8:	f0 e0       	ldi	r31, 0x00	; 0
    15fa:	80 81       	ld	r24, Z
    15fc:	8e 7f       	andi	r24, 0xFE	; 254
    15fe:	80 83       	st	Z, r24
    1600:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <enableBleInterupt>
    1604:	cf 91       	pop	r28
    1606:	08 95       	ret

00001608 <bleSendByte>:
    1608:	cf 93       	push	r28
    160a:	df 93       	push	r29
    160c:	d8 2f       	mov	r29, r24
    160e:	80 e0       	ldi	r24, 0x00	; 0
    1610:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <bleSendBit>
    1614:	c8 e0       	ldi	r28, 0x08	; 8
    1616:	8d 2f       	mov	r24, r29
    1618:	81 70       	andi	r24, 0x01	; 1
    161a:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <bleSendBit>
    161e:	d6 95       	lsr	r29
    1620:	c1 50       	subi	r28, 0x01	; 1
    1622:	c9 f7       	brne	.-14     	; 0x1616 <bleSendByte+0xe>
    1624:	81 e0       	ldi	r24, 0x01	; 1
    1626:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <bleSendBit>
    162a:	df 91       	pop	r29
    162c:	cf 91       	pop	r28
    162e:	08 95       	ret

00001630 <bleSerialPrint>:
    1630:	0f 93       	push	r16
    1632:	1f 93       	push	r17
    1634:	cf 93       	push	r28
    1636:	fc 01       	movw	r30, r24
    1638:	80 81       	ld	r24, Z
    163a:	88 23       	and	r24, r24
    163c:	59 f0       	breq	.+22     	; 0x1654 <bleSerialPrint+0x24>
    163e:	8f 01       	movw	r16, r30
    1640:	c0 e0       	ldi	r28, 0x00	; 0
    1642:	0e 94 04 0b 	call	0x1608	; 0x1608 <bleSendByte>
    1646:	cf 5f       	subi	r28, 0xFF	; 255
    1648:	f8 01       	movw	r30, r16
    164a:	ec 0f       	add	r30, r28
    164c:	f1 1d       	adc	r31, r1
    164e:	80 81       	ld	r24, Z
    1650:	81 11       	cpse	r24, r1
    1652:	f7 cf       	rjmp	.-18     	; 0x1642 <bleSerialPrint+0x12>
    1654:	cf 91       	pop	r28
    1656:	1f 91       	pop	r17
    1658:	0f 91       	pop	r16
    165a:	08 95       	ret

0000165c <bleSerialPrintLong>:
    165c:	cf 93       	push	r28
    165e:	df 93       	push	r29
    1660:	cd b7       	in	r28, 0x3d	; 61
    1662:	de b7       	in	r29, 0x3e	; 62
    1664:	60 97       	sbiw	r28, 0x10	; 16
    1666:	0f b6       	in	r0, 0x3f	; 63
    1668:	f8 94       	cli
    166a:	de bf       	out	0x3e, r29	; 62
    166c:	0f be       	out	0x3f, r0	; 63
    166e:	cd bf       	out	0x3d, r28	; 61
    1670:	2a e0       	ldi	r18, 0x0A	; 10
    1672:	ae 01       	movw	r20, r28
    1674:	4f 5f       	subi	r20, 0xFF	; 255
    1676:	5f 4f       	sbci	r21, 0xFF	; 255
    1678:	0e 94 1b 0f 	call	0x1e36	; 0x1e36 <__ltoa_ncheck>
    167c:	ce 01       	movw	r24, r28
    167e:	01 96       	adiw	r24, 0x01	; 1
    1680:	0e 94 18 0b 	call	0x1630	; 0x1630 <bleSerialPrint>
    1684:	60 96       	adiw	r28, 0x10	; 16
    1686:	0f b6       	in	r0, 0x3f	; 63
    1688:	f8 94       	cli
    168a:	de bf       	out	0x3e, r29	; 62
    168c:	0f be       	out	0x3f, r0	; 63
    168e:	cd bf       	out	0x3d, r28	; 61
    1690:	df 91       	pop	r29
    1692:	cf 91       	pop	r28
    1694:	08 95       	ret

00001696 <bleBufferRead>:
    1696:	ef 92       	push	r14
    1698:	ff 92       	push	r15
    169a:	0f 93       	push	r16
    169c:	1f 93       	push	r17
    169e:	cf 93       	push	r28
    16a0:	df 93       	push	r29
    16a2:	ec 01       	movw	r28, r24
    16a4:	8b 01       	movw	r16, r22
    16a6:	0e 94 52 0a 	call	0x14a4	; 0x14a4 <disableBleInterupt>
    16aa:	28 e1       	ldi	r18, 0x18	; 24
    16ac:	30 e0       	ldi	r19, 0x00	; 0
    16ae:	80 91 49 02 	lds	r24, 0x0249	; 0x800249 <bleInBufferEndIndex>
    16b2:	40 91 4a 02 	lds	r20, 0x024A	; 0x80024a <bleInBufferStartIndex>
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	84 1b       	sub	r24, r20
    16ba:	91 09       	sbc	r25, r1
    16bc:	48 96       	adiw	r24, 0x18	; 24
    16be:	b9 01       	movw	r22, r18
    16c0:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <__divmodhi4>
    16c4:	8c 17       	cp	r24, r28
    16c6:	9d 07       	cpc	r25, r29
    16c8:	90 f3       	brcs	.-28     	; 0x16ae <bleBufferRead+0x18>
    16ca:	20 97       	sbiw	r28, 0x00	; 0
    16cc:	69 f1       	breq	.+90     	; 0x1728 <bleBufferRead+0x92>
    16ce:	f8 01       	movw	r30, r16
    16d0:	40 e0       	ldi	r20, 0x00	; 0
    16d2:	50 e0       	ldi	r21, 0x00	; 0
    16d4:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <bleInBufferStartIndex>
    16d8:	7a 01       	movw	r14, r20
    16da:	e8 0e       	add	r14, r24
    16dc:	f1 1c       	adc	r15, r1
    16de:	97 01       	movw	r18, r14
    16e0:	ab ea       	ldi	r26, 0xAB	; 171
    16e2:	ba ea       	ldi	r27, 0xAA	; 170
    16e4:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <__umulhisi3>
    16e8:	92 95       	swap	r25
    16ea:	82 95       	swap	r24
    16ec:	8f 70       	andi	r24, 0x0F	; 15
    16ee:	89 27       	eor	r24, r25
    16f0:	9f 70       	andi	r25, 0x0F	; 15
    16f2:	89 27       	eor	r24, r25
    16f4:	9c 01       	movw	r18, r24
    16f6:	22 0f       	add	r18, r18
    16f8:	33 1f       	adc	r19, r19
    16fa:	82 0f       	add	r24, r18
    16fc:	93 1f       	adc	r25, r19
    16fe:	88 0f       	add	r24, r24
    1700:	99 1f       	adc	r25, r25
    1702:	88 0f       	add	r24, r24
    1704:	99 1f       	adc	r25, r25
    1706:	88 0f       	add	r24, r24
    1708:	99 1f       	adc	r25, r25
    170a:	97 01       	movw	r18, r14
    170c:	28 1b       	sub	r18, r24
    170e:	39 0b       	sbc	r19, r25
    1710:	d9 01       	movw	r26, r18
    1712:	a5 51       	subi	r26, 0x15	; 21
    1714:	bd 4f       	sbci	r27, 0xFD	; 253
    1716:	8c 91       	ld	r24, X
    1718:	81 93       	st	Z+, r24
    171a:	4f 5f       	subi	r20, 0xFF	; 255
    171c:	5f 4f       	sbci	r21, 0xFF	; 255
    171e:	c4 17       	cp	r28, r20
    1720:	d5 07       	cpc	r29, r21
    1722:	c1 f6       	brne	.-80     	; 0x16d4 <bleBufferRead+0x3e>
    1724:	ce 01       	movw	r24, r28
    1726:	01 c0       	rjmp	.+2      	; 0x172a <bleBufferRead+0x94>
    1728:	ce 01       	movw	r24, r28
    172a:	f8 01       	movw	r30, r16
    172c:	e8 0f       	add	r30, r24
    172e:	f9 1f       	adc	r31, r25
    1730:	10 82       	st	Z, r1
    1732:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <bleInBufferStartIndex>
    1736:	c8 0f       	add	r28, r24
    1738:	d1 1d       	adc	r29, r1
    173a:	9e 01       	movw	r18, r28
    173c:	ab ea       	ldi	r26, 0xAB	; 171
    173e:	ba ea       	ldi	r27, 0xAA	; 170
    1740:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <__umulhisi3>
    1744:	92 95       	swap	r25
    1746:	82 95       	swap	r24
    1748:	8f 70       	andi	r24, 0x0F	; 15
    174a:	89 27       	eor	r24, r25
    174c:	9f 70       	andi	r25, 0x0F	; 15
    174e:	89 27       	eor	r24, r25
    1750:	9c 01       	movw	r18, r24
    1752:	22 0f       	add	r18, r18
    1754:	33 1f       	adc	r19, r19
    1756:	82 0f       	add	r24, r18
    1758:	93 1f       	adc	r25, r19
    175a:	88 0f       	add	r24, r24
    175c:	99 1f       	adc	r25, r25
    175e:	88 0f       	add	r24, r24
    1760:	99 1f       	adc	r25, r25
    1762:	88 0f       	add	r24, r24
    1764:	99 1f       	adc	r25, r25
    1766:	c8 1b       	sub	r28, r24
    1768:	d9 0b       	sbc	r29, r25
    176a:	c0 93 4a 02 	sts	0x024A, r28	; 0x80024a <bleInBufferStartIndex>
    176e:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <enableBleInterupt>
    1772:	df 91       	pop	r29
    1774:	cf 91       	pop	r28
    1776:	1f 91       	pop	r17
    1778:	0f 91       	pop	r16
    177a:	ff 90       	pop	r15
    177c:	ef 90       	pop	r14
    177e:	08 95       	ret

00001780 <serialBleFind>:
	}
}

 int serialBleFind(unsigned char c) {
    1780:	0f 93       	push	r16
    1782:	1f 93       	push	r17
    1784:	cf 93       	push	r28
    1786:	df 93       	push	r29
    1788:	48 2f       	mov	r20, r24
	 int i;
	 unsigned char bufferLen = (bleInBufferEndIndex-bleInBufferStartIndex+BLE_BUFFER_SIZE)%BLE_BUFFER_SIZE;
    178a:	80 91 49 02 	lds	r24, 0x0249	; 0x800249 <bleInBufferEndIndex>
    178e:	20 91 4a 02 	lds	r18, 0x024A	; 0x80024a <bleInBufferStartIndex>
    1792:	90 e0       	ldi	r25, 0x00	; 0
    1794:	82 1b       	sub	r24, r18
    1796:	91 09       	sbc	r25, r1
    1798:	48 96       	adiw	r24, 0x18	; 24
    179a:	68 e1       	ldi	r22, 0x18	; 24
    179c:	70 e0       	ldi	r23, 0x00	; 0
    179e:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <__divmodhi4>
	 if (bufferLen > 0) {
    17a2:	88 23       	and	r24, r24
    17a4:	71 f1       	breq	.+92     	; 0x1802 <serialBleFind+0x82>
    17a6:	ec 01       	movw	r28, r24
    17a8:	dd 27       	eor	r29, r29
		 for (i=0U; i<bufferLen; i++) {
    17aa:	1c 16       	cp	r1, r28
    17ac:	1d 06       	cpc	r1, r29
    17ae:	64 f5       	brge	.+88     	; 0x1808 <serialBleFind+0x88>
			 if (bleBuffer[(bleInBufferStartIndex+i)%BLE_BUFFER_SIZE] == c)
    17b0:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <bleInBufferStartIndex>
    17b4:	90 e0       	ldi	r25, 0x00	; 0
    17b6:	68 e1       	ldi	r22, 0x18	; 24
    17b8:	70 e0       	ldi	r23, 0x00	; 0
    17ba:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <__divmodhi4>
    17be:	fc 01       	movw	r30, r24
    17c0:	e5 51       	subi	r30, 0x15	; 21
    17c2:	fd 4f       	sbci	r31, 0xFD	; 253
    17c4:	80 81       	ld	r24, Z
    17c6:	48 17       	cp	r20, r24
    17c8:	11 f1       	breq	.+68     	; 0x180e <serialBleFind+0x8e>
    17ca:	20 e0       	ldi	r18, 0x00	; 0
    17cc:	30 e0       	ldi	r19, 0x00	; 0
    17ce:	08 e1       	ldi	r16, 0x18	; 24
    17d0:	10 e0       	ldi	r17, 0x00	; 0
    17d2:	0f c0       	rjmp	.+30     	; 0x17f2 <serialBleFind+0x72>
    17d4:	90 91 4a 02 	lds	r25, 0x024A	; 0x80024a <bleInBufferStartIndex>
    17d8:	b9 01       	movw	r22, r18
    17da:	69 0f       	add	r22, r25
    17dc:	71 1d       	adc	r23, r1
    17de:	cb 01       	movw	r24, r22
    17e0:	b8 01       	movw	r22, r16
    17e2:	0e 94 ca 0e 	call	0x1d94	; 0x1d94 <__divmodhi4>
    17e6:	fc 01       	movw	r30, r24
    17e8:	e5 51       	subi	r30, 0x15	; 21
    17ea:	fd 4f       	sbci	r31, 0xFD	; 253
    17ec:	90 81       	ld	r25, Z
    17ee:	94 17       	cp	r25, r20
    17f0:	89 f0       	breq	.+34     	; 0x1814 <serialBleFind+0x94>

 int serialBleFind(unsigned char c) {
	 int i;
	 unsigned char bufferLen = (bleInBufferEndIndex-bleInBufferStartIndex+BLE_BUFFER_SIZE)%BLE_BUFFER_SIZE;
	 if (bufferLen > 0) {
		 for (i=0U; i<bufferLen; i++) {
    17f2:	2f 5f       	subi	r18, 0xFF	; 255
    17f4:	3f 4f       	sbci	r19, 0xFF	; 255
    17f6:	2c 17       	cp	r18, r28
    17f8:	3d 07       	cpc	r19, r29
    17fa:	61 f7       	brne	.-40     	; 0x17d4 <serialBleFind+0x54>
			 if (bleBuffer[(bleInBufferStartIndex+i)%BLE_BUFFER_SIZE] == c)
			 return i;
		 }
	 }
	 return -1;
    17fc:	8f ef       	ldi	r24, 0xFF	; 255
    17fe:	9f ef       	ldi	r25, 0xFF	; 255
    1800:	0b c0       	rjmp	.+22     	; 0x1818 <serialBleFind+0x98>
    1802:	8f ef       	ldi	r24, 0xFF	; 255
    1804:	9f ef       	ldi	r25, 0xFF	; 255
    1806:	08 c0       	rjmp	.+16     	; 0x1818 <serialBleFind+0x98>
    1808:	8f ef       	ldi	r24, 0xFF	; 255
    180a:	9f ef       	ldi	r25, 0xFF	; 255
    180c:	05 c0       	rjmp	.+10     	; 0x1818 <serialBleFind+0x98>
 int serialBleFind(unsigned char c) {
	 int i;
	 unsigned char bufferLen = (bleInBufferEndIndex-bleInBufferStartIndex+BLE_BUFFER_SIZE)%BLE_BUFFER_SIZE;
	 if (bufferLen > 0) {
		 for (i=0U; i<bufferLen; i++) {
			 if (bleBuffer[(bleInBufferStartIndex+i)%BLE_BUFFER_SIZE] == c)
    180e:	80 e0       	ldi	r24, 0x00	; 0
    1810:	90 e0       	ldi	r25, 0x00	; 0
    1812:	02 c0       	rjmp	.+4      	; 0x1818 <serialBleFind+0x98>

 int serialBleFind(unsigned char c) {
	 int i;
	 unsigned char bufferLen = (bleInBufferEndIndex-bleInBufferStartIndex+BLE_BUFFER_SIZE)%BLE_BUFFER_SIZE;
	 if (bufferLen > 0) {
		 for (i=0U; i<bufferLen; i++) {
    1814:	82 2f       	mov	r24, r18
    1816:	93 2f       	mov	r25, r19
			 if (bleBuffer[(bleInBufferStartIndex+i)%BLE_BUFFER_SIZE] == c)
			 return i;
		 }
	 }
	 return -1;
 }
    1818:	df 91       	pop	r29
    181a:	cf 91       	pop	r28
    181c:	1f 91       	pop	r17
    181e:	0f 91       	pop	r16
    1820:	08 95       	ret

00001822 <bleBufferReadUntil>:
 
  void bleBufferReadUntil(unsigned char stopChar, unsigned char *buffer) {
    1822:	0f 93       	push	r16
    1824:	1f 93       	push	r17
    1826:	cf 93       	push	r28
    1828:	c8 2f       	mov	r28, r24
    182a:	8b 01       	movw	r16, r22
	  unsigned char i = 0;
	  while (i == 0)
	  i = serialBleFind(stopChar) + 1;
    182c:	8c 2f       	mov	r24, r28
    182e:	0e 94 c0 0b 	call	0x1780	; 0x1780 <serialBleFind>
    1832:	8f 5f       	subi	r24, 0xFF	; 255
	 return -1;
 }
 
  void bleBufferReadUntil(unsigned char stopChar, unsigned char *buffer) {
	  unsigned char i = 0;
	  while (i == 0)
    1834:	d9 f3       	breq	.-10     	; 0x182c <bleBufferReadUntil+0xa>
	  i = serialBleFind(stopChar) + 1;
	  bleBufferRead(i, buffer);
    1836:	b8 01       	movw	r22, r16
    1838:	90 e0       	ldi	r25, 0x00	; 0
    183a:	0e 94 4b 0b 	call	0x1696	; 0x1696 <bleBufferRead>
	  return;
    183e:	cf 91       	pop	r28
    1840:	1f 91       	pop	r17
    1842:	0f 91       	pop	r16
    1844:	08 95       	ret

00001846 <relayTurnOn>:
    1846:	28 9a       	sbi	0x05, 0	; 5
    1848:	08 95       	ret

0000184a <relayTurnOff>:
    184a:	28 98       	cbi	0x05, 0	; 5
    184c:	08 95       	ret

0000184e <relayOnOff>:
    184e:	88 23       	and	r24, r24
    1850:	19 f0       	breq	.+6      	; 0x1858 <relayOnOff+0xa>
    1852:	0e 94 23 0c 	call	0x1846	; 0x1846 <relayTurnOn>
    1856:	08 95       	ret
    1858:	0e 94 25 0c 	call	0x184a	; 0x184a <relayTurnOff>
    185c:	08 95       	ret

0000185e <initializeRelay>:
    185e:	20 9a       	sbi	0x04, 0	; 4
    1860:	0e 94 27 0c 	call	0x184e	; 0x184e <relayOnOff>
    1864:	08 95       	ret

00001866 <__subsf3>:
    1866:	50 58       	subi	r21, 0x80	; 128

00001868 <__addsf3>:
    1868:	bb 27       	eor	r27, r27
    186a:	aa 27       	eor	r26, r26
    186c:	0e 94 4b 0c 	call	0x1896	; 0x1896 <__addsf3x>
    1870:	0c 94 be 0d 	jmp	0x1b7c	; 0x1b7c <__fp_round>
    1874:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <__fp_pscA>
    1878:	38 f0       	brcs	.+14     	; 0x1888 <__addsf3+0x20>
    187a:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <__fp_pscB>
    187e:	20 f0       	brcs	.+8      	; 0x1888 <__addsf3+0x20>
    1880:	39 f4       	brne	.+14     	; 0x1890 <__addsf3+0x28>
    1882:	9f 3f       	cpi	r25, 0xFF	; 255
    1884:	19 f4       	brne	.+6      	; 0x188c <__addsf3+0x24>
    1886:	26 f4       	brtc	.+8      	; 0x1890 <__addsf3+0x28>
    1888:	0c 94 ad 0d 	jmp	0x1b5a	; 0x1b5a <__fp_nan>
    188c:	0e f4       	brtc	.+2      	; 0x1890 <__addsf3+0x28>
    188e:	e0 95       	com	r30
    1890:	e7 fb       	bst	r30, 7
    1892:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <__fp_inf>

00001896 <__addsf3x>:
    1896:	e9 2f       	mov	r30, r25
    1898:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <__fp_split3>
    189c:	58 f3       	brcs	.-42     	; 0x1874 <__addsf3+0xc>
    189e:	ba 17       	cp	r27, r26
    18a0:	62 07       	cpc	r22, r18
    18a2:	73 07       	cpc	r23, r19
    18a4:	84 07       	cpc	r24, r20
    18a6:	95 07       	cpc	r25, r21
    18a8:	20 f0       	brcs	.+8      	; 0x18b2 <__addsf3x+0x1c>
    18aa:	79 f4       	brne	.+30     	; 0x18ca <__addsf3x+0x34>
    18ac:	a6 f5       	brtc	.+104    	; 0x1916 <__addsf3x+0x80>
    18ae:	0c 94 f1 0d 	jmp	0x1be2	; 0x1be2 <__fp_zero>
    18b2:	0e f4       	brtc	.+2      	; 0x18b6 <__addsf3x+0x20>
    18b4:	e0 95       	com	r30
    18b6:	0b 2e       	mov	r0, r27
    18b8:	ba 2f       	mov	r27, r26
    18ba:	a0 2d       	mov	r26, r0
    18bc:	0b 01       	movw	r0, r22
    18be:	b9 01       	movw	r22, r18
    18c0:	90 01       	movw	r18, r0
    18c2:	0c 01       	movw	r0, r24
    18c4:	ca 01       	movw	r24, r20
    18c6:	a0 01       	movw	r20, r0
    18c8:	11 24       	eor	r1, r1
    18ca:	ff 27       	eor	r31, r31
    18cc:	59 1b       	sub	r21, r25
    18ce:	99 f0       	breq	.+38     	; 0x18f6 <__addsf3x+0x60>
    18d0:	59 3f       	cpi	r21, 0xF9	; 249
    18d2:	50 f4       	brcc	.+20     	; 0x18e8 <__addsf3x+0x52>
    18d4:	50 3e       	cpi	r21, 0xE0	; 224
    18d6:	68 f1       	brcs	.+90     	; 0x1932 <__addsf3x+0x9c>
    18d8:	1a 16       	cp	r1, r26
    18da:	f0 40       	sbci	r31, 0x00	; 0
    18dc:	a2 2f       	mov	r26, r18
    18de:	23 2f       	mov	r18, r19
    18e0:	34 2f       	mov	r19, r20
    18e2:	44 27       	eor	r20, r20
    18e4:	58 5f       	subi	r21, 0xF8	; 248
    18e6:	f3 cf       	rjmp	.-26     	; 0x18ce <__addsf3x+0x38>
    18e8:	46 95       	lsr	r20
    18ea:	37 95       	ror	r19
    18ec:	27 95       	ror	r18
    18ee:	a7 95       	ror	r26
    18f0:	f0 40       	sbci	r31, 0x00	; 0
    18f2:	53 95       	inc	r21
    18f4:	c9 f7       	brne	.-14     	; 0x18e8 <__addsf3x+0x52>
    18f6:	7e f4       	brtc	.+30     	; 0x1916 <__addsf3x+0x80>
    18f8:	1f 16       	cp	r1, r31
    18fa:	ba 0b       	sbc	r27, r26
    18fc:	62 0b       	sbc	r22, r18
    18fe:	73 0b       	sbc	r23, r19
    1900:	84 0b       	sbc	r24, r20
    1902:	ba f0       	brmi	.+46     	; 0x1932 <__addsf3x+0x9c>
    1904:	91 50       	subi	r25, 0x01	; 1
    1906:	a1 f0       	breq	.+40     	; 0x1930 <__addsf3x+0x9a>
    1908:	ff 0f       	add	r31, r31
    190a:	bb 1f       	adc	r27, r27
    190c:	66 1f       	adc	r22, r22
    190e:	77 1f       	adc	r23, r23
    1910:	88 1f       	adc	r24, r24
    1912:	c2 f7       	brpl	.-16     	; 0x1904 <__addsf3x+0x6e>
    1914:	0e c0       	rjmp	.+28     	; 0x1932 <__addsf3x+0x9c>
    1916:	ba 0f       	add	r27, r26
    1918:	62 1f       	adc	r22, r18
    191a:	73 1f       	adc	r23, r19
    191c:	84 1f       	adc	r24, r20
    191e:	48 f4       	brcc	.+18     	; 0x1932 <__addsf3x+0x9c>
    1920:	87 95       	ror	r24
    1922:	77 95       	ror	r23
    1924:	67 95       	ror	r22
    1926:	b7 95       	ror	r27
    1928:	f7 95       	ror	r31
    192a:	9e 3f       	cpi	r25, 0xFE	; 254
    192c:	08 f0       	brcs	.+2      	; 0x1930 <__addsf3x+0x9a>
    192e:	b0 cf       	rjmp	.-160    	; 0x1890 <__addsf3+0x28>
    1930:	93 95       	inc	r25
    1932:	88 0f       	add	r24, r24
    1934:	08 f0       	brcs	.+2      	; 0x1938 <__addsf3x+0xa2>
    1936:	99 27       	eor	r25, r25
    1938:	ee 0f       	add	r30, r30
    193a:	97 95       	ror	r25
    193c:	87 95       	ror	r24
    193e:	08 95       	ret

00001940 <__cmpsf2>:
    1940:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <__fp_cmp>
    1944:	08 f4       	brcc	.+2      	; 0x1948 <__cmpsf2+0x8>
    1946:	81 e0       	ldi	r24, 0x01	; 1
    1948:	08 95       	ret

0000194a <__divsf3>:
    194a:	0e 94 b9 0c 	call	0x1972	; 0x1972 <__divsf3x>
    194e:	0c 94 be 0d 	jmp	0x1b7c	; 0x1b7c <__fp_round>
    1952:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <__fp_pscB>
    1956:	58 f0       	brcs	.+22     	; 0x196e <__divsf3+0x24>
    1958:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <__fp_pscA>
    195c:	40 f0       	brcs	.+16     	; 0x196e <__divsf3+0x24>
    195e:	29 f4       	brne	.+10     	; 0x196a <__divsf3+0x20>
    1960:	5f 3f       	cpi	r21, 0xFF	; 255
    1962:	29 f0       	breq	.+10     	; 0x196e <__divsf3+0x24>
    1964:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <__fp_inf>
    1968:	51 11       	cpse	r21, r1
    196a:	0c 94 f2 0d 	jmp	0x1be4	; 0x1be4 <__fp_szero>
    196e:	0c 94 ad 0d 	jmp	0x1b5a	; 0x1b5a <__fp_nan>

00001972 <__divsf3x>:
    1972:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <__fp_split3>
    1976:	68 f3       	brcs	.-38     	; 0x1952 <__divsf3+0x8>

00001978 <__divsf3_pse>:
    1978:	99 23       	and	r25, r25
    197a:	b1 f3       	breq	.-20     	; 0x1968 <__divsf3+0x1e>
    197c:	55 23       	and	r21, r21
    197e:	91 f3       	breq	.-28     	; 0x1964 <__divsf3+0x1a>
    1980:	95 1b       	sub	r25, r21
    1982:	55 0b       	sbc	r21, r21
    1984:	bb 27       	eor	r27, r27
    1986:	aa 27       	eor	r26, r26
    1988:	62 17       	cp	r22, r18
    198a:	73 07       	cpc	r23, r19
    198c:	84 07       	cpc	r24, r20
    198e:	38 f0       	brcs	.+14     	; 0x199e <__divsf3_pse+0x26>
    1990:	9f 5f       	subi	r25, 0xFF	; 255
    1992:	5f 4f       	sbci	r21, 0xFF	; 255
    1994:	22 0f       	add	r18, r18
    1996:	33 1f       	adc	r19, r19
    1998:	44 1f       	adc	r20, r20
    199a:	aa 1f       	adc	r26, r26
    199c:	a9 f3       	breq	.-22     	; 0x1988 <__divsf3_pse+0x10>
    199e:	35 d0       	rcall	.+106    	; 0x1a0a <__divsf3_pse+0x92>
    19a0:	0e 2e       	mov	r0, r30
    19a2:	3a f0       	brmi	.+14     	; 0x19b2 <__divsf3_pse+0x3a>
    19a4:	e0 e8       	ldi	r30, 0x80	; 128
    19a6:	32 d0       	rcall	.+100    	; 0x1a0c <__divsf3_pse+0x94>
    19a8:	91 50       	subi	r25, 0x01	; 1
    19aa:	50 40       	sbci	r21, 0x00	; 0
    19ac:	e6 95       	lsr	r30
    19ae:	00 1c       	adc	r0, r0
    19b0:	ca f7       	brpl	.-14     	; 0x19a4 <__divsf3_pse+0x2c>
    19b2:	2b d0       	rcall	.+86     	; 0x1a0a <__divsf3_pse+0x92>
    19b4:	fe 2f       	mov	r31, r30
    19b6:	29 d0       	rcall	.+82     	; 0x1a0a <__divsf3_pse+0x92>
    19b8:	66 0f       	add	r22, r22
    19ba:	77 1f       	adc	r23, r23
    19bc:	88 1f       	adc	r24, r24
    19be:	bb 1f       	adc	r27, r27
    19c0:	26 17       	cp	r18, r22
    19c2:	37 07       	cpc	r19, r23
    19c4:	48 07       	cpc	r20, r24
    19c6:	ab 07       	cpc	r26, r27
    19c8:	b0 e8       	ldi	r27, 0x80	; 128
    19ca:	09 f0       	breq	.+2      	; 0x19ce <__divsf3_pse+0x56>
    19cc:	bb 0b       	sbc	r27, r27
    19ce:	80 2d       	mov	r24, r0
    19d0:	bf 01       	movw	r22, r30
    19d2:	ff 27       	eor	r31, r31
    19d4:	93 58       	subi	r25, 0x83	; 131
    19d6:	5f 4f       	sbci	r21, 0xFF	; 255
    19d8:	3a f0       	brmi	.+14     	; 0x19e8 <__divsf3_pse+0x70>
    19da:	9e 3f       	cpi	r25, 0xFE	; 254
    19dc:	51 05       	cpc	r21, r1
    19de:	78 f0       	brcs	.+30     	; 0x19fe <__divsf3_pse+0x86>
    19e0:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <__fp_inf>
    19e4:	0c 94 f2 0d 	jmp	0x1be4	; 0x1be4 <__fp_szero>
    19e8:	5f 3f       	cpi	r21, 0xFF	; 255
    19ea:	e4 f3       	brlt	.-8      	; 0x19e4 <__divsf3_pse+0x6c>
    19ec:	98 3e       	cpi	r25, 0xE8	; 232
    19ee:	d4 f3       	brlt	.-12     	; 0x19e4 <__divsf3_pse+0x6c>
    19f0:	86 95       	lsr	r24
    19f2:	77 95       	ror	r23
    19f4:	67 95       	ror	r22
    19f6:	b7 95       	ror	r27
    19f8:	f7 95       	ror	r31
    19fa:	9f 5f       	subi	r25, 0xFF	; 255
    19fc:	c9 f7       	brne	.-14     	; 0x19f0 <__divsf3_pse+0x78>
    19fe:	88 0f       	add	r24, r24
    1a00:	91 1d       	adc	r25, r1
    1a02:	96 95       	lsr	r25
    1a04:	87 95       	ror	r24
    1a06:	97 f9       	bld	r25, 7
    1a08:	08 95       	ret
    1a0a:	e1 e0       	ldi	r30, 0x01	; 1
    1a0c:	66 0f       	add	r22, r22
    1a0e:	77 1f       	adc	r23, r23
    1a10:	88 1f       	adc	r24, r24
    1a12:	bb 1f       	adc	r27, r27
    1a14:	62 17       	cp	r22, r18
    1a16:	73 07       	cpc	r23, r19
    1a18:	84 07       	cpc	r24, r20
    1a1a:	ba 07       	cpc	r27, r26
    1a1c:	20 f0       	brcs	.+8      	; 0x1a26 <__divsf3_pse+0xae>
    1a1e:	62 1b       	sub	r22, r18
    1a20:	73 0b       	sbc	r23, r19
    1a22:	84 0b       	sbc	r24, r20
    1a24:	ba 0b       	sbc	r27, r26
    1a26:	ee 1f       	adc	r30, r30
    1a28:	88 f7       	brcc	.-30     	; 0x1a0c <__divsf3_pse+0x94>
    1a2a:	e0 95       	com	r30
    1a2c:	08 95       	ret

00001a2e <__fixunssfsi>:
    1a2e:	0e 94 d7 0d 	call	0x1bae	; 0x1bae <__fp_splitA>
    1a32:	88 f0       	brcs	.+34     	; 0x1a56 <__fixunssfsi+0x28>
    1a34:	9f 57       	subi	r25, 0x7F	; 127
    1a36:	98 f0       	brcs	.+38     	; 0x1a5e <__fixunssfsi+0x30>
    1a38:	b9 2f       	mov	r27, r25
    1a3a:	99 27       	eor	r25, r25
    1a3c:	b7 51       	subi	r27, 0x17	; 23
    1a3e:	b0 f0       	brcs	.+44     	; 0x1a6c <__fixunssfsi+0x3e>
    1a40:	e1 f0       	breq	.+56     	; 0x1a7a <__fixunssfsi+0x4c>
    1a42:	66 0f       	add	r22, r22
    1a44:	77 1f       	adc	r23, r23
    1a46:	88 1f       	adc	r24, r24
    1a48:	99 1f       	adc	r25, r25
    1a4a:	1a f0       	brmi	.+6      	; 0x1a52 <__fixunssfsi+0x24>
    1a4c:	ba 95       	dec	r27
    1a4e:	c9 f7       	brne	.-14     	; 0x1a42 <__fixunssfsi+0x14>
    1a50:	14 c0       	rjmp	.+40     	; 0x1a7a <__fixunssfsi+0x4c>
    1a52:	b1 30       	cpi	r27, 0x01	; 1
    1a54:	91 f0       	breq	.+36     	; 0x1a7a <__fixunssfsi+0x4c>
    1a56:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <__fp_zero>
    1a5a:	b1 e0       	ldi	r27, 0x01	; 1
    1a5c:	08 95       	ret
    1a5e:	0c 94 f1 0d 	jmp	0x1be2	; 0x1be2 <__fp_zero>
    1a62:	67 2f       	mov	r22, r23
    1a64:	78 2f       	mov	r23, r24
    1a66:	88 27       	eor	r24, r24
    1a68:	b8 5f       	subi	r27, 0xF8	; 248
    1a6a:	39 f0       	breq	.+14     	; 0x1a7a <__fixunssfsi+0x4c>
    1a6c:	b9 3f       	cpi	r27, 0xF9	; 249
    1a6e:	cc f3       	brlt	.-14     	; 0x1a62 <__fixunssfsi+0x34>
    1a70:	86 95       	lsr	r24
    1a72:	77 95       	ror	r23
    1a74:	67 95       	ror	r22
    1a76:	b3 95       	inc	r27
    1a78:	d9 f7       	brne	.-10     	; 0x1a70 <__fixunssfsi+0x42>
    1a7a:	3e f4       	brtc	.+14     	; 0x1a8a <__fixunssfsi+0x5c>
    1a7c:	90 95       	com	r25
    1a7e:	80 95       	com	r24
    1a80:	70 95       	com	r23
    1a82:	61 95       	neg	r22
    1a84:	7f 4f       	sbci	r23, 0xFF	; 255
    1a86:	8f 4f       	sbci	r24, 0xFF	; 255
    1a88:	9f 4f       	sbci	r25, 0xFF	; 255
    1a8a:	08 95       	ret

00001a8c <__floatunsisf>:
    1a8c:	e8 94       	clt
    1a8e:	09 c0       	rjmp	.+18     	; 0x1aa2 <__floatsisf+0x12>

00001a90 <__floatsisf>:
    1a90:	97 fb       	bst	r25, 7
    1a92:	3e f4       	brtc	.+14     	; 0x1aa2 <__floatsisf+0x12>
    1a94:	90 95       	com	r25
    1a96:	80 95       	com	r24
    1a98:	70 95       	com	r23
    1a9a:	61 95       	neg	r22
    1a9c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a9e:	8f 4f       	sbci	r24, 0xFF	; 255
    1aa0:	9f 4f       	sbci	r25, 0xFF	; 255
    1aa2:	99 23       	and	r25, r25
    1aa4:	a9 f0       	breq	.+42     	; 0x1ad0 <__floatsisf+0x40>
    1aa6:	f9 2f       	mov	r31, r25
    1aa8:	96 e9       	ldi	r25, 0x96	; 150
    1aaa:	bb 27       	eor	r27, r27
    1aac:	93 95       	inc	r25
    1aae:	f6 95       	lsr	r31
    1ab0:	87 95       	ror	r24
    1ab2:	77 95       	ror	r23
    1ab4:	67 95       	ror	r22
    1ab6:	b7 95       	ror	r27
    1ab8:	f1 11       	cpse	r31, r1
    1aba:	f8 cf       	rjmp	.-16     	; 0x1aac <__floatsisf+0x1c>
    1abc:	fa f4       	brpl	.+62     	; 0x1afc <__floatsisf+0x6c>
    1abe:	bb 0f       	add	r27, r27
    1ac0:	11 f4       	brne	.+4      	; 0x1ac6 <__floatsisf+0x36>
    1ac2:	60 ff       	sbrs	r22, 0
    1ac4:	1b c0       	rjmp	.+54     	; 0x1afc <__floatsisf+0x6c>
    1ac6:	6f 5f       	subi	r22, 0xFF	; 255
    1ac8:	7f 4f       	sbci	r23, 0xFF	; 255
    1aca:	8f 4f       	sbci	r24, 0xFF	; 255
    1acc:	9f 4f       	sbci	r25, 0xFF	; 255
    1ace:	16 c0       	rjmp	.+44     	; 0x1afc <__floatsisf+0x6c>
    1ad0:	88 23       	and	r24, r24
    1ad2:	11 f0       	breq	.+4      	; 0x1ad8 <__floatsisf+0x48>
    1ad4:	96 e9       	ldi	r25, 0x96	; 150
    1ad6:	11 c0       	rjmp	.+34     	; 0x1afa <__floatsisf+0x6a>
    1ad8:	77 23       	and	r23, r23
    1ada:	21 f0       	breq	.+8      	; 0x1ae4 <__floatsisf+0x54>
    1adc:	9e e8       	ldi	r25, 0x8E	; 142
    1ade:	87 2f       	mov	r24, r23
    1ae0:	76 2f       	mov	r23, r22
    1ae2:	05 c0       	rjmp	.+10     	; 0x1aee <__floatsisf+0x5e>
    1ae4:	66 23       	and	r22, r22
    1ae6:	71 f0       	breq	.+28     	; 0x1b04 <__floatsisf+0x74>
    1ae8:	96 e8       	ldi	r25, 0x86	; 134
    1aea:	86 2f       	mov	r24, r22
    1aec:	70 e0       	ldi	r23, 0x00	; 0
    1aee:	60 e0       	ldi	r22, 0x00	; 0
    1af0:	2a f0       	brmi	.+10     	; 0x1afc <__floatsisf+0x6c>
    1af2:	9a 95       	dec	r25
    1af4:	66 0f       	add	r22, r22
    1af6:	77 1f       	adc	r23, r23
    1af8:	88 1f       	adc	r24, r24
    1afa:	da f7       	brpl	.-10     	; 0x1af2 <__floatsisf+0x62>
    1afc:	88 0f       	add	r24, r24
    1afe:	96 95       	lsr	r25
    1b00:	87 95       	ror	r24
    1b02:	97 f9       	bld	r25, 7
    1b04:	08 95       	ret

00001b06 <__fp_cmp>:
    1b06:	99 0f       	add	r25, r25
    1b08:	00 08       	sbc	r0, r0
    1b0a:	55 0f       	add	r21, r21
    1b0c:	aa 0b       	sbc	r26, r26
    1b0e:	e0 e8       	ldi	r30, 0x80	; 128
    1b10:	fe ef       	ldi	r31, 0xFE	; 254
    1b12:	16 16       	cp	r1, r22
    1b14:	17 06       	cpc	r1, r23
    1b16:	e8 07       	cpc	r30, r24
    1b18:	f9 07       	cpc	r31, r25
    1b1a:	c0 f0       	brcs	.+48     	; 0x1b4c <__fp_cmp+0x46>
    1b1c:	12 16       	cp	r1, r18
    1b1e:	13 06       	cpc	r1, r19
    1b20:	e4 07       	cpc	r30, r20
    1b22:	f5 07       	cpc	r31, r21
    1b24:	98 f0       	brcs	.+38     	; 0x1b4c <__fp_cmp+0x46>
    1b26:	62 1b       	sub	r22, r18
    1b28:	73 0b       	sbc	r23, r19
    1b2a:	84 0b       	sbc	r24, r20
    1b2c:	95 0b       	sbc	r25, r21
    1b2e:	39 f4       	brne	.+14     	; 0x1b3e <__fp_cmp+0x38>
    1b30:	0a 26       	eor	r0, r26
    1b32:	61 f0       	breq	.+24     	; 0x1b4c <__fp_cmp+0x46>
    1b34:	23 2b       	or	r18, r19
    1b36:	24 2b       	or	r18, r20
    1b38:	25 2b       	or	r18, r21
    1b3a:	21 f4       	brne	.+8      	; 0x1b44 <__fp_cmp+0x3e>
    1b3c:	08 95       	ret
    1b3e:	0a 26       	eor	r0, r26
    1b40:	09 f4       	brne	.+2      	; 0x1b44 <__fp_cmp+0x3e>
    1b42:	a1 40       	sbci	r26, 0x01	; 1
    1b44:	a6 95       	lsr	r26
    1b46:	8f ef       	ldi	r24, 0xFF	; 255
    1b48:	81 1d       	adc	r24, r1
    1b4a:	81 1d       	adc	r24, r1
    1b4c:	08 95       	ret

00001b4e <__fp_inf>:
    1b4e:	97 f9       	bld	r25, 7
    1b50:	9f 67       	ori	r25, 0x7F	; 127
    1b52:	80 e8       	ldi	r24, 0x80	; 128
    1b54:	70 e0       	ldi	r23, 0x00	; 0
    1b56:	60 e0       	ldi	r22, 0x00	; 0
    1b58:	08 95       	ret

00001b5a <__fp_nan>:
    1b5a:	9f ef       	ldi	r25, 0xFF	; 255
    1b5c:	80 ec       	ldi	r24, 0xC0	; 192
    1b5e:	08 95       	ret

00001b60 <__fp_pscA>:
    1b60:	00 24       	eor	r0, r0
    1b62:	0a 94       	dec	r0
    1b64:	16 16       	cp	r1, r22
    1b66:	17 06       	cpc	r1, r23
    1b68:	18 06       	cpc	r1, r24
    1b6a:	09 06       	cpc	r0, r25
    1b6c:	08 95       	ret

00001b6e <__fp_pscB>:
    1b6e:	00 24       	eor	r0, r0
    1b70:	0a 94       	dec	r0
    1b72:	12 16       	cp	r1, r18
    1b74:	13 06       	cpc	r1, r19
    1b76:	14 06       	cpc	r1, r20
    1b78:	05 06       	cpc	r0, r21
    1b7a:	08 95       	ret

00001b7c <__fp_round>:
    1b7c:	09 2e       	mov	r0, r25
    1b7e:	03 94       	inc	r0
    1b80:	00 0c       	add	r0, r0
    1b82:	11 f4       	brne	.+4      	; 0x1b88 <__fp_round+0xc>
    1b84:	88 23       	and	r24, r24
    1b86:	52 f0       	brmi	.+20     	; 0x1b9c <__fp_round+0x20>
    1b88:	bb 0f       	add	r27, r27
    1b8a:	40 f4       	brcc	.+16     	; 0x1b9c <__fp_round+0x20>
    1b8c:	bf 2b       	or	r27, r31
    1b8e:	11 f4       	brne	.+4      	; 0x1b94 <__fp_round+0x18>
    1b90:	60 ff       	sbrs	r22, 0
    1b92:	04 c0       	rjmp	.+8      	; 0x1b9c <__fp_round+0x20>
    1b94:	6f 5f       	subi	r22, 0xFF	; 255
    1b96:	7f 4f       	sbci	r23, 0xFF	; 255
    1b98:	8f 4f       	sbci	r24, 0xFF	; 255
    1b9a:	9f 4f       	sbci	r25, 0xFF	; 255
    1b9c:	08 95       	ret

00001b9e <__fp_split3>:
    1b9e:	57 fd       	sbrc	r21, 7
    1ba0:	90 58       	subi	r25, 0x80	; 128
    1ba2:	44 0f       	add	r20, r20
    1ba4:	55 1f       	adc	r21, r21
    1ba6:	59 f0       	breq	.+22     	; 0x1bbe <__fp_splitA+0x10>
    1ba8:	5f 3f       	cpi	r21, 0xFF	; 255
    1baa:	71 f0       	breq	.+28     	; 0x1bc8 <__fp_splitA+0x1a>
    1bac:	47 95       	ror	r20

00001bae <__fp_splitA>:
    1bae:	88 0f       	add	r24, r24
    1bb0:	97 fb       	bst	r25, 7
    1bb2:	99 1f       	adc	r25, r25
    1bb4:	61 f0       	breq	.+24     	; 0x1bce <__fp_splitA+0x20>
    1bb6:	9f 3f       	cpi	r25, 0xFF	; 255
    1bb8:	79 f0       	breq	.+30     	; 0x1bd8 <__fp_splitA+0x2a>
    1bba:	87 95       	ror	r24
    1bbc:	08 95       	ret
    1bbe:	12 16       	cp	r1, r18
    1bc0:	13 06       	cpc	r1, r19
    1bc2:	14 06       	cpc	r1, r20
    1bc4:	55 1f       	adc	r21, r21
    1bc6:	f2 cf       	rjmp	.-28     	; 0x1bac <__fp_split3+0xe>
    1bc8:	46 95       	lsr	r20
    1bca:	f1 df       	rcall	.-30     	; 0x1bae <__fp_splitA>
    1bcc:	08 c0       	rjmp	.+16     	; 0x1bde <__fp_splitA+0x30>
    1bce:	16 16       	cp	r1, r22
    1bd0:	17 06       	cpc	r1, r23
    1bd2:	18 06       	cpc	r1, r24
    1bd4:	99 1f       	adc	r25, r25
    1bd6:	f1 cf       	rjmp	.-30     	; 0x1bba <__fp_splitA+0xc>
    1bd8:	86 95       	lsr	r24
    1bda:	71 05       	cpc	r23, r1
    1bdc:	61 05       	cpc	r22, r1
    1bde:	08 94       	sec
    1be0:	08 95       	ret

00001be2 <__fp_zero>:
    1be2:	e8 94       	clt

00001be4 <__fp_szero>:
    1be4:	bb 27       	eor	r27, r27
    1be6:	66 27       	eor	r22, r22
    1be8:	77 27       	eor	r23, r23
    1bea:	cb 01       	movw	r24, r22
    1bec:	97 f9       	bld	r25, 7
    1bee:	08 95       	ret

00001bf0 <__gesf2>:
    1bf0:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <__fp_cmp>
    1bf4:	08 f4       	brcc	.+2      	; 0x1bf8 <__gesf2+0x8>
    1bf6:	8f ef       	ldi	r24, 0xFF	; 255
    1bf8:	08 95       	ret

00001bfa <__mulsf3>:
    1bfa:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <__mulsf3x>
    1bfe:	0c 94 be 0d 	jmp	0x1b7c	; 0x1b7c <__fp_round>
    1c02:	0e 94 b0 0d 	call	0x1b60	; 0x1b60 <__fp_pscA>
    1c06:	38 f0       	brcs	.+14     	; 0x1c16 <__mulsf3+0x1c>
    1c08:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <__fp_pscB>
    1c0c:	20 f0       	brcs	.+8      	; 0x1c16 <__mulsf3+0x1c>
    1c0e:	95 23       	and	r25, r21
    1c10:	11 f0       	breq	.+4      	; 0x1c16 <__mulsf3+0x1c>
    1c12:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <__fp_inf>
    1c16:	0c 94 ad 0d 	jmp	0x1b5a	; 0x1b5a <__fp_nan>
    1c1a:	11 24       	eor	r1, r1
    1c1c:	0c 94 f2 0d 	jmp	0x1be4	; 0x1be4 <__fp_szero>

00001c20 <__mulsf3x>:
    1c20:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <__fp_split3>
    1c24:	70 f3       	brcs	.-36     	; 0x1c02 <__mulsf3+0x8>

00001c26 <__mulsf3_pse>:
    1c26:	95 9f       	mul	r25, r21
    1c28:	c1 f3       	breq	.-16     	; 0x1c1a <__mulsf3+0x20>
    1c2a:	95 0f       	add	r25, r21
    1c2c:	50 e0       	ldi	r21, 0x00	; 0
    1c2e:	55 1f       	adc	r21, r21
    1c30:	62 9f       	mul	r22, r18
    1c32:	f0 01       	movw	r30, r0
    1c34:	72 9f       	mul	r23, r18
    1c36:	bb 27       	eor	r27, r27
    1c38:	f0 0d       	add	r31, r0
    1c3a:	b1 1d       	adc	r27, r1
    1c3c:	63 9f       	mul	r22, r19
    1c3e:	aa 27       	eor	r26, r26
    1c40:	f0 0d       	add	r31, r0
    1c42:	b1 1d       	adc	r27, r1
    1c44:	aa 1f       	adc	r26, r26
    1c46:	64 9f       	mul	r22, r20
    1c48:	66 27       	eor	r22, r22
    1c4a:	b0 0d       	add	r27, r0
    1c4c:	a1 1d       	adc	r26, r1
    1c4e:	66 1f       	adc	r22, r22
    1c50:	82 9f       	mul	r24, r18
    1c52:	22 27       	eor	r18, r18
    1c54:	b0 0d       	add	r27, r0
    1c56:	a1 1d       	adc	r26, r1
    1c58:	62 1f       	adc	r22, r18
    1c5a:	73 9f       	mul	r23, r19
    1c5c:	b0 0d       	add	r27, r0
    1c5e:	a1 1d       	adc	r26, r1
    1c60:	62 1f       	adc	r22, r18
    1c62:	83 9f       	mul	r24, r19
    1c64:	a0 0d       	add	r26, r0
    1c66:	61 1d       	adc	r22, r1
    1c68:	22 1f       	adc	r18, r18
    1c6a:	74 9f       	mul	r23, r20
    1c6c:	33 27       	eor	r19, r19
    1c6e:	a0 0d       	add	r26, r0
    1c70:	61 1d       	adc	r22, r1
    1c72:	23 1f       	adc	r18, r19
    1c74:	84 9f       	mul	r24, r20
    1c76:	60 0d       	add	r22, r0
    1c78:	21 1d       	adc	r18, r1
    1c7a:	82 2f       	mov	r24, r18
    1c7c:	76 2f       	mov	r23, r22
    1c7e:	6a 2f       	mov	r22, r26
    1c80:	11 24       	eor	r1, r1
    1c82:	9f 57       	subi	r25, 0x7F	; 127
    1c84:	50 40       	sbci	r21, 0x00	; 0
    1c86:	9a f0       	brmi	.+38     	; 0x1cae <__mulsf3_pse+0x88>
    1c88:	f1 f0       	breq	.+60     	; 0x1cc6 <__mulsf3_pse+0xa0>
    1c8a:	88 23       	and	r24, r24
    1c8c:	4a f0       	brmi	.+18     	; 0x1ca0 <__mulsf3_pse+0x7a>
    1c8e:	ee 0f       	add	r30, r30
    1c90:	ff 1f       	adc	r31, r31
    1c92:	bb 1f       	adc	r27, r27
    1c94:	66 1f       	adc	r22, r22
    1c96:	77 1f       	adc	r23, r23
    1c98:	88 1f       	adc	r24, r24
    1c9a:	91 50       	subi	r25, 0x01	; 1
    1c9c:	50 40       	sbci	r21, 0x00	; 0
    1c9e:	a9 f7       	brne	.-22     	; 0x1c8a <__mulsf3_pse+0x64>
    1ca0:	9e 3f       	cpi	r25, 0xFE	; 254
    1ca2:	51 05       	cpc	r21, r1
    1ca4:	80 f0       	brcs	.+32     	; 0x1cc6 <__mulsf3_pse+0xa0>
    1ca6:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <__fp_inf>
    1caa:	0c 94 f2 0d 	jmp	0x1be4	; 0x1be4 <__fp_szero>
    1cae:	5f 3f       	cpi	r21, 0xFF	; 255
    1cb0:	e4 f3       	brlt	.-8      	; 0x1caa <__mulsf3_pse+0x84>
    1cb2:	98 3e       	cpi	r25, 0xE8	; 232
    1cb4:	d4 f3       	brlt	.-12     	; 0x1caa <__mulsf3_pse+0x84>
    1cb6:	86 95       	lsr	r24
    1cb8:	77 95       	ror	r23
    1cba:	67 95       	ror	r22
    1cbc:	b7 95       	ror	r27
    1cbe:	f7 95       	ror	r31
    1cc0:	e7 95       	ror	r30
    1cc2:	9f 5f       	subi	r25, 0xFF	; 255
    1cc4:	c1 f7       	brne	.-16     	; 0x1cb6 <__mulsf3_pse+0x90>
    1cc6:	fe 2b       	or	r31, r30
    1cc8:	88 0f       	add	r24, r24
    1cca:	91 1d       	adc	r25, r1
    1ccc:	96 95       	lsr	r25
    1cce:	87 95       	ror	r24
    1cd0:	97 f9       	bld	r25, 7
    1cd2:	08 95       	ret
    1cd4:	19 f4       	brne	.+6      	; 0x1cdc <__mulsf3_pse+0xb6>
    1cd6:	16 f4       	brtc	.+4      	; 0x1cdc <__mulsf3_pse+0xb6>
    1cd8:	0c 94 ad 0d 	jmp	0x1b5a	; 0x1b5a <__fp_nan>
    1cdc:	0c 94 b5 0e 	jmp	0x1d6a	; 0x1d6a <__fp_mpack>

00001ce0 <sqrt>:
    1ce0:	0e 94 d7 0d 	call	0x1bae	; 0x1bae <__fp_splitA>
    1ce4:	b8 f3       	brcs	.-18     	; 0x1cd4 <__mulsf3_pse+0xae>
    1ce6:	99 23       	and	r25, r25
    1ce8:	c9 f3       	breq	.-14     	; 0x1cdc <__mulsf3_pse+0xb6>
    1cea:	b6 f3       	brts	.-20     	; 0x1cd8 <__mulsf3_pse+0xb2>
    1cec:	9f 57       	subi	r25, 0x7F	; 127
    1cee:	55 0b       	sbc	r21, r21
    1cf0:	87 ff       	sbrs	r24, 7
    1cf2:	0e 94 c3 0e 	call	0x1d86	; 0x1d86 <__fp_norm2>
    1cf6:	00 24       	eor	r0, r0
    1cf8:	a0 e6       	ldi	r26, 0x60	; 96
    1cfa:	40 ea       	ldi	r20, 0xA0	; 160
    1cfc:	90 01       	movw	r18, r0
    1cfe:	80 58       	subi	r24, 0x80	; 128
    1d00:	56 95       	lsr	r21
    1d02:	97 95       	ror	r25
    1d04:	28 f4       	brcc	.+10     	; 0x1d10 <sqrt+0x30>
    1d06:	80 5c       	subi	r24, 0xC0	; 192
    1d08:	66 0f       	add	r22, r22
    1d0a:	77 1f       	adc	r23, r23
    1d0c:	88 1f       	adc	r24, r24
    1d0e:	20 f0       	brcs	.+8      	; 0x1d18 <sqrt+0x38>
    1d10:	26 17       	cp	r18, r22
    1d12:	37 07       	cpc	r19, r23
    1d14:	48 07       	cpc	r20, r24
    1d16:	30 f4       	brcc	.+12     	; 0x1d24 <sqrt+0x44>
    1d18:	62 1b       	sub	r22, r18
    1d1a:	73 0b       	sbc	r23, r19
    1d1c:	84 0b       	sbc	r24, r20
    1d1e:	20 29       	or	r18, r0
    1d20:	31 29       	or	r19, r1
    1d22:	4a 2b       	or	r20, r26
    1d24:	a6 95       	lsr	r26
    1d26:	17 94       	ror	r1
    1d28:	07 94       	ror	r0
    1d2a:	20 25       	eor	r18, r0
    1d2c:	31 25       	eor	r19, r1
    1d2e:	4a 27       	eor	r20, r26
    1d30:	58 f7       	brcc	.-42     	; 0x1d08 <sqrt+0x28>
    1d32:	66 0f       	add	r22, r22
    1d34:	77 1f       	adc	r23, r23
    1d36:	88 1f       	adc	r24, r24
    1d38:	20 f0       	brcs	.+8      	; 0x1d42 <sqrt+0x62>
    1d3a:	26 17       	cp	r18, r22
    1d3c:	37 07       	cpc	r19, r23
    1d3e:	48 07       	cpc	r20, r24
    1d40:	30 f4       	brcc	.+12     	; 0x1d4e <sqrt+0x6e>
    1d42:	62 0b       	sbc	r22, r18
    1d44:	73 0b       	sbc	r23, r19
    1d46:	84 0b       	sbc	r24, r20
    1d48:	20 0d       	add	r18, r0
    1d4a:	31 1d       	adc	r19, r1
    1d4c:	41 1d       	adc	r20, r1
    1d4e:	a0 95       	com	r26
    1d50:	81 f7       	brne	.-32     	; 0x1d32 <sqrt+0x52>
    1d52:	b9 01       	movw	r22, r18
    1d54:	84 2f       	mov	r24, r20
    1d56:	91 58       	subi	r25, 0x81	; 129
    1d58:	88 0f       	add	r24, r24
    1d5a:	96 95       	lsr	r25
    1d5c:	87 95       	ror	r24
    1d5e:	08 95       	ret

00001d60 <__unordsf2>:
    1d60:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <__fp_cmp>
    1d64:	88 0b       	sbc	r24, r24
    1d66:	99 0b       	sbc	r25, r25
    1d68:	08 95       	ret

00001d6a <__fp_mpack>:
    1d6a:	9f 3f       	cpi	r25, 0xFF	; 255
    1d6c:	31 f0       	breq	.+12     	; 0x1d7a <__fp_mpack_finite+0xc>

00001d6e <__fp_mpack_finite>:
    1d6e:	91 50       	subi	r25, 0x01	; 1
    1d70:	20 f4       	brcc	.+8      	; 0x1d7a <__fp_mpack_finite+0xc>
    1d72:	87 95       	ror	r24
    1d74:	77 95       	ror	r23
    1d76:	67 95       	ror	r22
    1d78:	b7 95       	ror	r27
    1d7a:	88 0f       	add	r24, r24
    1d7c:	91 1d       	adc	r25, r1
    1d7e:	96 95       	lsr	r25
    1d80:	87 95       	ror	r24
    1d82:	97 f9       	bld	r25, 7
    1d84:	08 95       	ret

00001d86 <__fp_norm2>:
    1d86:	91 50       	subi	r25, 0x01	; 1
    1d88:	50 40       	sbci	r21, 0x00	; 0
    1d8a:	66 0f       	add	r22, r22
    1d8c:	77 1f       	adc	r23, r23
    1d8e:	88 1f       	adc	r24, r24
    1d90:	d2 f7       	brpl	.-12     	; 0x1d86 <__fp_norm2>
    1d92:	08 95       	ret

00001d94 <__divmodhi4>:
    1d94:	97 fb       	bst	r25, 7
    1d96:	07 2e       	mov	r0, r23
    1d98:	16 f4       	brtc	.+4      	; 0x1d9e <__divmodhi4+0xa>
    1d9a:	00 94       	com	r0
    1d9c:	07 d0       	rcall	.+14     	; 0x1dac <__divmodhi4_neg1>
    1d9e:	77 fd       	sbrc	r23, 7
    1da0:	09 d0       	rcall	.+18     	; 0x1db4 <__divmodhi4_neg2>
    1da2:	0e 94 ed 0e 	call	0x1dda	; 0x1dda <__udivmodhi4>
    1da6:	07 fc       	sbrc	r0, 7
    1da8:	05 d0       	rcall	.+10     	; 0x1db4 <__divmodhi4_neg2>
    1daa:	3e f4       	brtc	.+14     	; 0x1dba <__divmodhi4_exit>

00001dac <__divmodhi4_neg1>:
    1dac:	90 95       	com	r25
    1dae:	81 95       	neg	r24
    1db0:	9f 4f       	sbci	r25, 0xFF	; 255
    1db2:	08 95       	ret

00001db4 <__divmodhi4_neg2>:
    1db4:	70 95       	com	r23
    1db6:	61 95       	neg	r22
    1db8:	7f 4f       	sbci	r23, 0xFF	; 255

00001dba <__divmodhi4_exit>:
    1dba:	08 95       	ret

00001dbc <__umulhisi3>:
    1dbc:	a2 9f       	mul	r26, r18
    1dbe:	b0 01       	movw	r22, r0
    1dc0:	b3 9f       	mul	r27, r19
    1dc2:	c0 01       	movw	r24, r0
    1dc4:	a3 9f       	mul	r26, r19
    1dc6:	70 0d       	add	r23, r0
    1dc8:	81 1d       	adc	r24, r1
    1dca:	11 24       	eor	r1, r1
    1dcc:	91 1d       	adc	r25, r1
    1dce:	b2 9f       	mul	r27, r18
    1dd0:	70 0d       	add	r23, r0
    1dd2:	81 1d       	adc	r24, r1
    1dd4:	11 24       	eor	r1, r1
    1dd6:	91 1d       	adc	r25, r1
    1dd8:	08 95       	ret

00001dda <__udivmodhi4>:
    1dda:	aa 1b       	sub	r26, r26
    1ddc:	bb 1b       	sub	r27, r27
    1dde:	51 e1       	ldi	r21, 0x11	; 17
    1de0:	07 c0       	rjmp	.+14     	; 0x1df0 <__udivmodhi4_ep>

00001de2 <__udivmodhi4_loop>:
    1de2:	aa 1f       	adc	r26, r26
    1de4:	bb 1f       	adc	r27, r27
    1de6:	a6 17       	cp	r26, r22
    1de8:	b7 07       	cpc	r27, r23
    1dea:	10 f0       	brcs	.+4      	; 0x1df0 <__udivmodhi4_ep>
    1dec:	a6 1b       	sub	r26, r22
    1dee:	b7 0b       	sbc	r27, r23

00001df0 <__udivmodhi4_ep>:
    1df0:	88 1f       	adc	r24, r24
    1df2:	99 1f       	adc	r25, r25
    1df4:	5a 95       	dec	r21
    1df6:	a9 f7       	brne	.-22     	; 0x1de2 <__udivmodhi4_loop>
    1df8:	80 95       	com	r24
    1dfa:	90 95       	com	r25
    1dfc:	bc 01       	movw	r22, r24
    1dfe:	cd 01       	movw	r24, r26
    1e00:	08 95       	ret

00001e02 <strstr>:
    1e02:	fb 01       	movw	r30, r22
    1e04:	51 91       	ld	r21, Z+
    1e06:	55 23       	and	r21, r21
    1e08:	a9 f0       	breq	.+42     	; 0x1e34 <strstr+0x32>
    1e0a:	bf 01       	movw	r22, r30
    1e0c:	dc 01       	movw	r26, r24
    1e0e:	4d 91       	ld	r20, X+
    1e10:	45 17       	cp	r20, r21
    1e12:	41 11       	cpse	r20, r1
    1e14:	e1 f7       	brne	.-8      	; 0x1e0e <strstr+0xc>
    1e16:	59 f4       	brne	.+22     	; 0x1e2e <strstr+0x2c>
    1e18:	cd 01       	movw	r24, r26
    1e1a:	01 90       	ld	r0, Z+
    1e1c:	00 20       	and	r0, r0
    1e1e:	49 f0       	breq	.+18     	; 0x1e32 <strstr+0x30>
    1e20:	4d 91       	ld	r20, X+
    1e22:	40 15       	cp	r20, r0
    1e24:	41 11       	cpse	r20, r1
    1e26:	c9 f3       	breq	.-14     	; 0x1e1a <strstr+0x18>
    1e28:	fb 01       	movw	r30, r22
    1e2a:	41 11       	cpse	r20, r1
    1e2c:	ef cf       	rjmp	.-34     	; 0x1e0c <strstr+0xa>
    1e2e:	81 e0       	ldi	r24, 0x01	; 1
    1e30:	90 e0       	ldi	r25, 0x00	; 0
    1e32:	01 97       	sbiw	r24, 0x01	; 1
    1e34:	08 95       	ret

00001e36 <__ltoa_ncheck>:
    1e36:	bb 27       	eor	r27, r27
    1e38:	2a 30       	cpi	r18, 0x0A	; 10
    1e3a:	51 f4       	brne	.+20     	; 0x1e50 <__ltoa_ncheck+0x1a>
    1e3c:	99 23       	and	r25, r25
    1e3e:	42 f4       	brpl	.+16     	; 0x1e50 <__ltoa_ncheck+0x1a>
    1e40:	bd e2       	ldi	r27, 0x2D	; 45
    1e42:	90 95       	com	r25
    1e44:	80 95       	com	r24
    1e46:	70 95       	com	r23
    1e48:	61 95       	neg	r22
    1e4a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e4c:	8f 4f       	sbci	r24, 0xFF	; 255
    1e4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1e50:	0c 94 2b 0f 	jmp	0x1e56	; 0x1e56 <__ultoa_common>

00001e54 <__ultoa_ncheck>:
    1e54:	bb 27       	eor	r27, r27

00001e56 <__ultoa_common>:
    1e56:	fa 01       	movw	r30, r20
    1e58:	a6 2f       	mov	r26, r22
    1e5a:	62 17       	cp	r22, r18
    1e5c:	71 05       	cpc	r23, r1
    1e5e:	81 05       	cpc	r24, r1
    1e60:	91 05       	cpc	r25, r1
    1e62:	33 0b       	sbc	r19, r19
    1e64:	30 fb       	bst	r19, 0
    1e66:	66 f0       	brts	.+24     	; 0x1e80 <__ultoa_common+0x2a>
    1e68:	aa 27       	eor	r26, r26
    1e6a:	66 0f       	add	r22, r22
    1e6c:	77 1f       	adc	r23, r23
    1e6e:	88 1f       	adc	r24, r24
    1e70:	99 1f       	adc	r25, r25
    1e72:	aa 1f       	adc	r26, r26
    1e74:	a2 17       	cp	r26, r18
    1e76:	10 f0       	brcs	.+4      	; 0x1e7c <__ultoa_common+0x26>
    1e78:	a2 1b       	sub	r26, r18
    1e7a:	63 95       	inc	r22
    1e7c:	38 50       	subi	r19, 0x08	; 8
    1e7e:	a9 f7       	brne	.-22     	; 0x1e6a <__ultoa_common+0x14>
    1e80:	a0 5d       	subi	r26, 0xD0	; 208
    1e82:	aa 33       	cpi	r26, 0x3A	; 58
    1e84:	08 f0       	brcs	.+2      	; 0x1e88 <__ultoa_common+0x32>
    1e86:	a9 5d       	subi	r26, 0xD9	; 217
    1e88:	a1 93       	st	Z+, r26
    1e8a:	36 f7       	brtc	.-52     	; 0x1e58 <__ultoa_common+0x2>
    1e8c:	b1 11       	cpse	r27, r1
    1e8e:	b1 93       	st	Z+, r27
    1e90:	10 82       	st	Z, r1
    1e92:	ca 01       	movw	r24, r20
    1e94:	0c 94 66 0f 	jmp	0x1ecc	; 0x1ecc <strrev>

00001e98 <__utoa_ncheck>:
    1e98:	bb 27       	eor	r27, r27

00001e9a <__utoa_common>:
    1e9a:	fb 01       	movw	r30, r22
    1e9c:	55 27       	eor	r21, r21
    1e9e:	aa 27       	eor	r26, r26
    1ea0:	88 0f       	add	r24, r24
    1ea2:	99 1f       	adc	r25, r25
    1ea4:	aa 1f       	adc	r26, r26
    1ea6:	a4 17       	cp	r26, r20
    1ea8:	10 f0       	brcs	.+4      	; 0x1eae <__utoa_common+0x14>
    1eaa:	a4 1b       	sub	r26, r20
    1eac:	83 95       	inc	r24
    1eae:	50 51       	subi	r21, 0x10	; 16
    1eb0:	b9 f7       	brne	.-18     	; 0x1ea0 <__utoa_common+0x6>
    1eb2:	a0 5d       	subi	r26, 0xD0	; 208
    1eb4:	aa 33       	cpi	r26, 0x3A	; 58
    1eb6:	08 f0       	brcs	.+2      	; 0x1eba <__utoa_common+0x20>
    1eb8:	a9 5d       	subi	r26, 0xD9	; 217
    1eba:	a1 93       	st	Z+, r26
    1ebc:	00 97       	sbiw	r24, 0x00	; 0
    1ebe:	79 f7       	brne	.-34     	; 0x1e9e <__utoa_common+0x4>
    1ec0:	b1 11       	cpse	r27, r1
    1ec2:	b1 93       	st	Z+, r27
    1ec4:	11 92       	st	Z+, r1
    1ec6:	cb 01       	movw	r24, r22
    1ec8:	0c 94 66 0f 	jmp	0x1ecc	; 0x1ecc <strrev>

00001ecc <strrev>:
    1ecc:	dc 01       	movw	r26, r24
    1ece:	fc 01       	movw	r30, r24
    1ed0:	67 2f       	mov	r22, r23
    1ed2:	71 91       	ld	r23, Z+
    1ed4:	77 23       	and	r23, r23
    1ed6:	e1 f7       	brne	.-8      	; 0x1ed0 <strrev+0x4>
    1ed8:	32 97       	sbiw	r30, 0x02	; 2
    1eda:	04 c0       	rjmp	.+8      	; 0x1ee4 <strrev+0x18>
    1edc:	7c 91       	ld	r23, X
    1ede:	6d 93       	st	X+, r22
    1ee0:	70 83       	st	Z, r23
    1ee2:	62 91       	ld	r22, -Z
    1ee4:	ae 17       	cp	r26, r30
    1ee6:	bf 07       	cpc	r27, r31
    1ee8:	c8 f3       	brcs	.-14     	; 0x1edc <strrev+0x10>
    1eea:	08 95       	ret

00001eec <eeprom_read_byte>:
    1eec:	f9 99       	sbic	0x1f, 1	; 31
    1eee:	fe cf       	rjmp	.-4      	; 0x1eec <eeprom_read_byte>
    1ef0:	92 bd       	out	0x22, r25	; 34
    1ef2:	81 bd       	out	0x21, r24	; 33
    1ef4:	f8 9a       	sbi	0x1f, 0	; 31
    1ef6:	99 27       	eor	r25, r25
    1ef8:	80 b5       	in	r24, 0x20	; 32
    1efa:	08 95       	ret

00001efc <eeprom_read_dword>:
    1efc:	a6 e1       	ldi	r26, 0x16	; 22
    1efe:	b0 e0       	ldi	r27, 0x00	; 0
    1f00:	44 e0       	ldi	r20, 0x04	; 4
    1f02:	50 e0       	ldi	r21, 0x00	; 0
    1f04:	0c 94 86 0f 	jmp	0x1f0c	; 0x1f0c <eeprom_read_blraw>

00001f08 <eeprom_read_block>:
    1f08:	dc 01       	movw	r26, r24
    1f0a:	cb 01       	movw	r24, r22

00001f0c <eeprom_read_blraw>:
    1f0c:	fc 01       	movw	r30, r24
    1f0e:	f9 99       	sbic	0x1f, 1	; 31
    1f10:	fe cf       	rjmp	.-4      	; 0x1f0e <eeprom_read_blraw+0x2>
    1f12:	06 c0       	rjmp	.+12     	; 0x1f20 <eeprom_read_blraw+0x14>
    1f14:	f2 bd       	out	0x22, r31	; 34
    1f16:	e1 bd       	out	0x21, r30	; 33
    1f18:	f8 9a       	sbi	0x1f, 0	; 31
    1f1a:	31 96       	adiw	r30, 0x01	; 1
    1f1c:	00 b4       	in	r0, 0x20	; 32
    1f1e:	0d 92       	st	X+, r0
    1f20:	41 50       	subi	r20, 0x01	; 1
    1f22:	50 40       	sbci	r21, 0x00	; 0
    1f24:	b8 f7       	brcc	.-18     	; 0x1f14 <eeprom_read_blraw+0x8>
    1f26:	08 95       	ret

00001f28 <_exit>:
    1f28:	f8 94       	cli

00001f2a <__stop_program>:
    1f2a:	ff cf       	rjmp	.-2      	; 0x1f2a <__stop_program>
